{"version":3,"file":"_baseClone-9e4d1916.js","sources":["../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_WeakMap.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_arrayEach.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_nativeKeys.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseKeys.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/keys.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_arrayPush.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseAssign.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseAssignIn.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_arrayFilter.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/stubArray.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_getSymbols.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_copySymbols.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_getSymbolsIn.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_copySymbolsIn.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseGetAllKeys.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_getAllKeys.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_getAllKeysIn.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_DataView.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_Promise.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_getTag.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_initCloneArray.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_cloneDataView.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_cloneRegExp.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_cloneSymbol.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_initCloneByTag.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIsMap.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isMap.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIsSet.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isSet.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseClone.js"],"sourcesContent":["import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n"],"names":["WeakMap","getNative","root","WeakMap$1","arrayEach","array","iteratee","index","length","nativeKeys","overArg","nativeKeys$1","objectProto","hasOwnProperty","baseKeys","object","isPrototype","result","key","keys","isArrayLike","arrayLikeKeys","arrayPush","values","offset","baseAssign","source","copyObject","baseAssignIn","keysIn","arrayFilter","predicate","resIndex","value","stubArray","propertyIsEnumerable","nativeGetSymbols","getSymbols","symbol","getSymbols$1","copySymbols","getSymbolsIn","getPrototype","getSymbolsIn$1","copySymbolsIn","baseGetAllKeys","keysFunc","symbolsFunc","isArray","getAllKeys","getAllKeysIn","DataView","DataView$1","Promise","Promise$2","mapTag","objectTag","promiseTag","setTag","weakMapTag","dataViewTag","dataViewCtorString","toSource","mapCtorString","Map","promiseCtorString","setCtorString","Set","weakMapCtorString","getTag","baseGetTag","Ctor","ctorString","getTag$1","initCloneArray","cloneDataView","dataView","isDeep","buffer","cloneArrayBuffer","reFlags","cloneRegExp","regexp","symbolProto","Symbol","symbolValueOf","cloneSymbol","boolTag","dateTag","numberTag","regexpTag","stringTag","symbolTag","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","initCloneByTag","tag","cloneTypedArray","baseIsMap","isObjectLike","nodeIsMap","nodeUtil","isMap","baseUnary","isMap$1","baseIsSet","nodeIsSet","isSet","isSet$1","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","argsTag","arrayTag","errorTag","funcTag","genTag","cloneableTags","baseClone","bitmask","customizer","stack","isFlat","isFull","isObject","isArr","copyArray","isFunc","isBuffer","cloneBuffer","initCloneObject","Stack","stacked","subValue","props","assignValue"],"mappings":"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"}