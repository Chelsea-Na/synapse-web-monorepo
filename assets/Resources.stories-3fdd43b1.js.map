{"version":3,"file":"Resources.stories-3fdd43b1.js","sources":["../../src/lib/containers/home_page/resources/Resources.Desktop.tsx","../../src/lib/containers/home_page/resources/Resources.Mobile.tsx","../../src/lib/containers/home_page/resources/Resources.tsx","../../src/lib/containers/home_page/resources/Resources.stories.tsx"],"sourcesContent":["import { Data } from './Resources'\nimport React, { useState } from 'react'\nimport MarkdownSynapse from '../../markdown/MarkdownSynapse'\n\nexport type ResourcesDesktopProps = {\n  data: Data\n}\n\nexport default function ResourcesDesktop({ data }: ResourcesDesktopProps) {\n  const [index, setIndex] = useState(0)\n  return (\n    <div className=\"control-container\">\n      <div className=\"button-container\">\n        {data?.map((el, curIndex) => {\n          return (\n            <button\n              className={index === curIndex ? 'isSelected' : ''}\n              onClick={() => setIndex(curIndex)}\n              key={el.name}\n            >\n              {el.name}\n            </button>\n          )\n        })}\n        {/* \n            This button keeps the border line in the button container running from top to bottom,\n            it doesn't have any functionality.\n          */}\n        <button className=\"gap-fill\" />\n      </div>\n      <div className=\"content-container\">\n        {data?.map((el, curIndex) => {\n          const { ownerId, wikiId } = el\n          return (\n            <span key={ownerId} className={index === curIndex ? '' : 'hide'}>\n              <MarkdownSynapse ownerId={ownerId} wikiId={wikiId} />\n            </span>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Data } from './Resources'\nimport MarkdownSynapse from '../../../containers/markdown/MarkdownSynapse'\nimport ExpandableContent from '../ExpandableContent'\n\nexport type ResourcesMobileProps = {\n  data: Data\n}\n\nexport default function ResourcesMobile({ data }: ResourcesMobileProps) {\n  return (\n    <div className=\"Resources_Mobile\">\n      {data.map(({ name, ownerId, wikiId }) => {\n        let title = <> {name} </>\n        let markdown = <MarkdownSynapse ownerId={ownerId} wikiId={wikiId} />\n        return <ExpandableContent title={title} content={markdown} />\n      })}\n    </div>\n  )\n}\n","import React from 'react'\nimport { QueryBundleRequest } from '../../../utils/synapseTypes'\nimport { SynapseConstants } from '../../../utils'\nimport { ErrorBanner } from '../../error/ErrorBanner'\nimport useGetQueryResultBundle from '../../../utils/hooks/SynapseAPI/entity/useGetQueryResultBundle'\nimport ResourcesDesktop from './Resources.Desktop'\nimport ResourcesMobile from './Resources.Mobile'\nimport useShowDesktop from '../../../utils/hooks/useShowDesktop'\nimport { getFieldIndex } from '../../../utils/functions/queryUtils'\n\nexport type ResourcesProps = {\n  entityId: string\n}\n\nenum ExpectedColumns {\n  NAME = 'Name',\n  WIKI = 'Wiki',\n}\n\nexport type Data = {\n  name: string\n  ownerId: string\n  wikiId: string\n}[]\n\nexport const Resources: React.FC<ResourcesProps> = (props: ResourcesProps) => {\n  const { entityId } = props\n  const showDesktop = useShowDesktop()\n\n  const queryBundleRequest: QueryBundleRequest = {\n    concreteType: 'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n    entityId,\n    partMask:\n      SynapseConstants.BUNDLE_MASK_QUERY_SELECT_COLUMNS |\n      SynapseConstants.BUNDLE_MASK_QUERY_RESULTS,\n    query: {\n      sql: `SELECT Name, Wiki FROM ${entityId} ORDER BY ItemOrder`,\n    },\n  }\n  const { data: queryResultBundle, error } =\n    useGetQueryResultBundle(queryBundleRequest)\n\n  const nameIndex = getFieldIndex(ExpectedColumns.NAME, queryResultBundle)\n  const wikiIndex = getFieldIndex(ExpectedColumns.WIKI, queryResultBundle)\n  const data: Data =\n    queryResultBundle?.queryResult?.queryResults.rows.map(el => {\n      const values = el.values as string[]\n      if (values.some(value => value === null)) {\n        console.warn('Row has null value(s) when no nulls expected')\n      }\n\n      const name = values[nameIndex]\n      const wikiValue = values[wikiIndex] ?? ''\n      const split = wikiValue.split('/')\n      const ownerId = split[0]\n      const wikiId = split[2]\n      return {\n        name,\n        ownerId,\n        wikiId,\n      }\n    }) ?? []\n  return (\n    <div className=\"Resources\">\n      <ErrorBanner error={error} />\n      {showDesktop ? (\n        <ResourcesDesktop data={data} />\n      ) : (\n        <ResourcesMobile data={data} />\n      )}\n    </div>\n  )\n}\n\nexport default Resources\n","import React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport Resources from './Resources';\nexport default ({\n  title: 'Home Page/Resources',\n  component: Resources\n} as ComponentMeta<typeof Resources>);\nconst Template: ComponentStory<typeof Resources> = args => <Resources {...args} />;\nexport const Demo = Template.bind({});\nDemo.args = {\n  entityId: 'syn22311127'\n};\nDemo.parameters = {\n  ...Demo.parameters,\n  docs: {\n    ...Demo.parameters?.docs,\n    source: {\n      originalSource: \"args => <Resources {...args} />\",\n      ...Demo.parameters?.docs?.source\n    }\n  }\n};"],"names":["ResourcesDesktop","data","index","setIndex","useState","jsxs","el","curIndex","jsx","ownerId","wikiId","MarkdownSynapse","ResourcesMobile","name","ExpandableContent","Fragment","Resources","props","entityId","showDesktop","useShowDesktop","queryBundleRequest","SynapseConstants.BUNDLE_MASK_QUERY_SELECT_COLUMNS","SynapseConstants.BUNDLE_MASK_QUERY_RESULTS","queryResultBundle","error","useGetQueryResultBundle","nameIndex","getFieldIndex","wikiIndex","_a","values","value","split","ErrorBanner","Resources$1","Resources_stories","Template","args","Demo","_c","_b"],"mappings":"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"}