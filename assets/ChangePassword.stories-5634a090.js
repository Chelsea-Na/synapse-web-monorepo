import{j as o,a}from"./jsx-runtime-670450c2.js";import{r as e}from"./index-f1f749bf.js";import{d as i}from"./ToastMessage-37d46070.js";import{a9 as b,h as x,ct as F}from"./SynapseContext-604d883b.js";import{F as d}from"./FormGroup-763a7e3b.js";import{c,b as l}from"./FormLabel-d48b7c13.js";import{B as I}from"./Button-a16e56e5.js";import"./_commonjsHelpers-042e6b4d.js";import"./FullWidthAlert-89ce8092.js";import"./Alert-4bfa1ee7.js";import"./extends-9cd95192.js";import"./hook-3d9ea2b9.js";import"./extends-98964cd2.js";import"./styled-1b6f4d44.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-eaaa54fe.js";import"./createWithBsPrefix-d1384812.js";import"./divWithClassName-f0cd5fab.js";import"./Transition-955f7fb7.js";import"./inheritsLoose-c82a83d4.js";import"./index-96c5f47c.js";import"./TransitionGroupContext-ab7f4b4e.js";import"./index-4d501b15.js";import"./Typography-0df81c96.js";import"./extendSxProp-c6163236.js";import"./Clear-b4ccb838.js";import"./useTheme-b2c92aa4.js";import"./isHostComponent-fa76b8d9.js";import"./useForkRef-dd8a6e5c.js";import"./useIsFocusVisible-83eed526.js";import"./SvgIcon-36e6768e.js";import"./assertThisInitialized-4a7b3b26.js";import"./inheritsLoose-d541526f.js";import"./setPrototypeOf-0bb37fbe.js";import"./removeClass-164fd327.js";import"./hasClass-ec9efd32.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./isArray-5e3f9107.js";import"./isSymbol-7c514724.js";import"./Fade-df5bc5e3.js";import"./getEndpoint-5374ab4d.js";import"./SynapseConstants-41b9b1f3.js";import"./IconSvg-42e5a302.js";import"./Box-5df43b07.js";import"./Button-41488909.js";import"./ButtonBase-4feee6fc.js";import"./emotion-react.browser.esm-0771b2df.js";import"./assertThisInitialized-081f9914.js";import"./Col-053aba76.js";const w=()=>{const{accessToken:s}=b(),[h,_]=e.useState(""),[m,v]=e.useState(""),[u,S]=e.useState(""),[p,g]=e.useState();e.useEffect(()=>{async function r(){const t=await x(s);g(t)}s?r():g(void 0)},[s]);const P=async r=>{r.preventDefault();try{if(m!==u)i("New password and confirm password does not match.","danger");else if(s){const t={newPassword:m,concreteType:"org.sagebionetworks.repo.model.auth.ChangePasswordWithCurrentPassword",username:p==null?void 0:p.userName,currentPassword:h};await F(t,s).then(()=>i("Successfully changed","success")).catch(N=>i(N.reason,"danger"))}}catch(t){i(t.reason,"danger")}};return o("div",{className:"changePassword",children:a("form",{onSubmit:r=>{P(r)},children:[a(d,{controlId:"oldPassword",children:[o(c,{children:"Current Password"}),o(l,{type:"password",onChange:r=>_(r.target.value),value:h})]}),a(d,{controlId:"newPassword",children:[o(c,{children:"New Password"}),o(l,{type:"password",onChange:r=>v(r.target.value),value:m})]}),a(d,{controlId:"confirmPassword",children:[o(c,{children:"Confirm Password"}),o(l,{type:"password",onChange:r=>S(r.target.value),value:u})]}),o(I,{type:"submit",onSubmit:r=>{P(r)},children:"Change Password"})]})})};try{w.displayName="ChangePassword",w.__docgenInfo={description:"",displayName:"ChangePassword",props:{}}}catch{}const Nr={title:"Authentication/ChangePassword",component:w},n={};var f,C,y;n.parameters={...n.parameters,docs:{...(f=n.parameters)==null?void 0:f.docs,source:{originalSource:"{}",...(y=(C=n.parameters)==null?void 0:C.docs)==null?void 0:y.source}}};const br=["ChangePasswordDemo"];export{n as ChangePasswordDemo,br as __namedExportsOrder,Nr as default};
//# sourceMappingURL=ChangePassword.stories-5634a090.js.map
