var z=Object.defineProperty;var W=(o,c,e)=>c in o?z(o,c,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[c]=e;var h=(o,c,e)=>(W(o,typeof c!="symbol"?c+"":c,e),e);import{j as s,a as I,F as q}from"./jsx-runtime-9dc53467.js";import{r as F,R as x}from"./index-76fb7be0.js";import{C as Y}from"./ChallengeRegisterButton-803dda94.js";import{C as Q}from"./ChallengeTeamWizard-ac732e4f.js";import{h as _,y as j,b2 as K,b3 as X,n as u,b4 as H,b5 as Z,b6 as ee}from"./SynapseClient-02f8db3d.js";import"./getEndpoint-ac94413e.js";import"./OrientationBanner-a1ca5cdb.js";import{u as A}from"./useGetEntityChallenge-638cf23c.js";import{u as te}from"./useGetUserTeams-ed6afcb2.js";import{C as M,A as re,L as ne,G as ie}from"./HelpPopover-6088ca27.js";import{d as U}from"./ToastMessage-313b7aae.js";import"./AccessTokenPage-51e4896f.js";import"./AccountLevelBadges-c8d56f28.js";import"./LastLoginInfo-5df3cb03.js";import"./StandaloneLoginForm-76191f7d.js";import"./TwoFactorAuthSettingsPanel-6f24d2b1.js";import"./TwoFactorEnrollmentForm-dfb8bdfb.js";import"./TwoFactorBackupCodes-4a219dd1.js";import"./CertificationQuiz-45a887e4.js";import"./index-ffd021e2.js";import"./ChallengeSubmission-7acd0e56.js";import"./FullWidthAlert-706fe840.js";import"./DownloadCartPage-01b099a5.js";import"./ShowDownloadV2-8cd28492.js";import"./useEntitySelection-291d281d.js";import"./isPlainObject-cb19acc1.js";import"./mapValues-a94bd5d1.js";import"./index.modern-ebb8621a.js";import"./index-c71daf5e.js";import"./EvaluationCard-06cce6ee.js";import"./EvaluationEditorPage-524ad25e.js";import"./ExperimentalMode-57484dbc.js";import{R as se,F as oe}from"./index-3a31b023.js";import{O as ae}from"./IconSvg-ac78043b.js";import"./FileUpload-5c4f4bb0.js";import"./FeaturedDataTabs-026cb8e7.js";import"./FeaturedToolsList-fd988b3d.js";import"./DiscussionThread-a8960757.js";import"./ForumPage-6bb14350.js";import"./Goals-05929860.js";import"./GoogleMap-ef49c2c2.js";import"./Icon-75f30caf.js";import"./OAuthManagement-50e7b4d5.js";import"./ThemesPlot-b7e84935.js";import"./UpsetPlot-d713b792.js";import"./ProjectViewCarousel-c940832f.js";import"./Programs-84028e71.js";import"./QueryCount-c82e77f3.js";import"./RenderIfInView-df26c1ce.js";import"./Resources-d2ab1332.js";import"./RssFeedCards-9c96b6c7.js";import"./ShowMore-0d3229ca.js";import"./SkeletonButton-007d85cd.js";import"./SkeletonTable-dbfcf115.js";import"./LeftRightPanel-a90477a3.js";import"./LightTooltip-84d8b967.js";import"./StyledFormControl-003a613e.js";import"./WideButton-2e6b6d5a.js";import"./InputSizedButton-f0627758.js";import"./SubscriptionItem-f39dd92a.js";import"./DropdownSelect-d767fe84.js";import"./SubsectionRowRenderer-31853ebc.js";import"./SynapseFormWrapper-fda767b1.js";import"./SynapseFormSubmissionsGrid-aa4c5147.js";import"./SystemUseNotification-42fe424b.js";import"./TableFeedCards-7a68fd22.js";import"./TermsAndConditions-edeef992.js";import"./TextField-12f5946f.js";import"./TimelinePlot-ab13fc61.js";import"./UserBadge-13b7d4f0.js";import"./UserCardList-f87f7778.js";import"./UserCardListRotate-f7b53f8e.js";import"./UserCardListGroups-29707a30.js";import"./UserOrTeamBadge-5dbafa1f.js";import"./UserProfileLinks-e9344b91.js";import"./EntityHeaderTable-61fb6cae.js";import"./AccessRequirementRelatedProjectsList-9bc3aeda.js";import{a as le,b as ce,c as me}from"./useTeamMembers-117eccb8.js";import{e as de,f as pe}from"./useAccessRequirements-2633d59f.js";import{u as ue}from"./useEntity-08049cce.js";import{S as he}from"./LoadingScreen-21cf5616.js";import{M as fe}from"./Alert-c3fe2b05.js";import{T as ge}from"./Typography-1d068b0b.js";function k(o){const{open:c,projectId:e,onRegisterComplete:n,onCancel:r}=o,{data:i,error:l}=ue(e),{accessToken:a}=_(),{data:t,error:m}=A(e),g=!!a,{data:y,error:d}=j({enabled:g}),p=t==null?void 0:t.participantTeamId,E=y==null?void 0:y.ownerId,{data:f,error:R}=le(p,E,{enabled:!!(p&&E)}),{mutateAsync:b,isLoading:T,error:N}=ce(),{data:S,isSuccess:V,error:O}=de(t==null?void 0:t.participantTeamId,{enabled:!!(t!=null&&t.participantTeamId)}),B=pe((S==null?void 0:S.map(C=>String(C.id)))??[]),G=V&&B.every(C=>C.status==="success"&&C.data.isApproved),J=F.useCallback(async()=>{p&&E&&!(f!=null&&f.isMember)&&await b({teamId:p,userId:E}),n()},[b,n,p,f==null?void 0:f.isMember,E]),L=[l,m,d,R,O,N].filter(C=>!!C);let v=f!=null&&f.isMember?"Continue":"Register";return T&&(v="Registering..."),s(M,{open:c,title:"Challenge Terms and Conditions",content:I(q,{children:[p&&s(re,{subjectId:p,subjectType:se.TEAM,teamId:t==null?void 0:t.participantTeamId,renderAsModal:!1,requestObjectName:i==null?void 0:i.name,onHide:()=>{r()}}),!K(L)&&s(fe,{severity:"error",children:L.map((C,$)=>s(ge,{variant:"body1",children:C.reason},$))})]}),onCancel:r,onConfirm:()=>{J()},confirmButtonProps:{children:v,startIcon:T?s(he,{}):void 0,disabled:!G||T}})}try{k.displayName="ChallengeRequirementsModal",k.__docgenInfo={description:`The challenge requirements modal will
 1. Display the access requirements that must be accepted to join a participant team. The component will guide the user through meeting the requirements.
 2. If the user has accepted the requirements, the user can click 'Register' to join the team
    If the user has not accepted the requirements, the user cannot register for the challenge.`,displayName:"ChallengeRequirementsModal",props:{open:{defaultValue:null,description:"",name:"open",required:!0,type:{name:"boolean"}},projectId:{defaultValue:null,description:"",name:"projectId",required:!0,type:{name:"string"}},onCancel:{defaultValue:null,description:"",name:"onCancel",required:!0,type:{name:"() => void"}},onRegisterComplete:{defaultValue:null,description:"",name:"onRegisterComplete",required:!0,type:{name:"() => void"}}}}}catch{}function P({projectId:o}){const{accessToken:c}=_(),e=!!c,[n,r]=F.useState(!1),[i,l]=F.useState(!1),[a,t]=F.useState(!1),{data:m}=j(),g=S=>{r(S)},y=()=>{l(!0)},d=()=>{t(!0)},{data:p}=A(o),{data:E}=te(p==null?void 0:p.id,1,0,{enabled:!!(e&&p)}),f=E&&E.results.length>0,{mutate:R}=me({onSuccess:()=>{U("You are no longer registered for this challenge","info")},onError:S=>{U(S.reason,"danger")}}),b=()=>{e&&p&&m&&R({teamId:p.participantTeamId,userId:m.ownerId})};return I(q,{children:[s(Y,{projectId:o,onJoinClick:y,onLeaveClick:d}),s(k,{open:i,projectId:o,onRegisterComplete:()=>{l(!1),r(!f)},onCancel:()=>{l(!1)}}),s(Q,{projectId:o,onClose:()=>{g(!1)},isShowingModal:n}),s(M,{open:a,title:"Leave this Challenge?",content:"Are you sure you want to leave this Challenge?",onCancel:()=>t(!1),onConfirm:()=>{b(),t(!1)}})]})}try{P.displayName="ChallengeDetailPage",P.__docgenInfo={description:"",displayName:"ChallengeDetailPage",props:{projectId:{defaultValue:null,description:"",name:"projectId",required:!0,type:{name:"string"}}}}}catch{}class w extends x.Component{constructor(e){super(e);h(this,"formRef");h(this,"submitForm",()=>{this.formRef.current.submit()});h(this,"refresh",()=>{if(this.context.accessToken){const e=[u.getUserProfile(this.context.accessToken),u.getEntity(this.context.accessToken,this.props.formSchemaEntityId),u.getEntity(this.context.accessToken,this.props.formUiSchemaEntityId)];Promise.all(e).then(n=>{const r=n[0];this.getTargetContainer(r,this.context.accessToken).then(i=>{const l=n[1],a=n[2];this.getSchemaFileContent(i,l,a)})}).catch(n=>{this.onError(n)})}});h(this,"getSchemaFileContent",(e,n,r)=>{const i=[u.getFileResult(n,this.context.accessToken,!0,!0),u.getFileResult(r,this.context.accessToken,!0,!0)];Promise.all(i).then(l=>{try{const a=l.map(t=>H(t.fileHandle,t.preSignedURL));Promise.all(a).then(t=>{const m=JSON.parse(t[0]),g=JSON.parse(t[1]);this.getExistingFileData(e,m,g)}).catch(t=>{console.log("getSchemaFileContent: Error getting form content",t)})}catch(a){console.log("getSchemaFileContent: Error getting schema content",a)}}).catch(l=>{this.onError(l)})});h(this,"getExistingFileData",(e,n,r)=>{const l={entityName:`${n.title}.json`,parentId:e};let a,t;u.lookupChildEntity(l,this.context.accessToken).then(m=>u.getEntity(this.context.accessToken,m.id).then(g=>(t=g,this.props.initFormData?u.getFileResult(t,this.context.accessToken,!0,!0).then(async y=>{try{const d=await H(y.fileHandle,y.preSignedURL);a=JSON.parse(d)}catch(d){console.log("getExistingFileData: Error setting form data",d)}}):Promise.resolve()))).finally(()=>{this.setState({formData:a,currentFileEntity:t,formSchema:n,formUiSchema:r})})});h(this,"getTargetContainer",async(e,n)=>{const r={entityName:e.ownerId,parentId:this.props.parentContainerId};try{const i=await u.lookupChildEntity(r,n);return console.log(`EntityForm uploading to https://www.synapse.org/#!Synapse:${i.id}`),this.setState({userprofile:e,containerId:i.id,isLoading:!1}),i.id}catch(i){return i.status===404?this.onError(new Error("Your folder has not yet been set up, please retry in a few minutes.")):this.onError(i)}});h(this,"finishedProcessing",()=>{this.setState({isLoading:!1,successfullyUploaded:!0})});h(this,"onError",e=>{this.setState({error:e,isLoading:!1,successfullyUploaded:!1})});h(this,"onSubmit",({formData:e})=>{this.setState({isLoading:!0,successfullyUploaded:!1});const n=new Blob([JSON.stringify(e)],{type:"text/json"});this.createEntityFile(n)});h(this,"createEntityFile",e=>{const n=`${this.state.formSchema.title}.json`;u.uploadFile(this.context.accessToken,n,e).then(r=>{const i=r.fileHandleId;if(this.state.currentFileEntity){const a={...this.state.currentFileEntity,dataFileHandleId:i};return this.setState({currentFileEntity:a}),u.updateEntity(a,this.context.accessToken)}const l={parentId:this.state.containerId,name:n,concreteType:"org.sagebionetworks.repo.model.FileEntity",dataFileHandleId:i};return u.createEntity(l,this.context.accessToken)}).then(r=>{this.finishedProcessing(),this.props.synIdCallback&&this.props.synIdCallback(r.id)}).catch(r=>{this.onError(r)})});this.formRef=x.createRef(),this.state={isLoading:!0,successfullyUploaded:!1}}componentDidMount(){this.refresh()}render(){return I("div",{children:[this.state.error&&I("div",{className:"panel panel-danger errors",children:[s("div",{className:"panel-heading",children:s("h3",{className:"panel-title",children:"Error"})}),s("ul",{className:"list-group",children:I("li",{className:"list-group-item text-danger",children:[this.state.error.name," ",this.state.error.reason,this.state.error.message]})})]}),this.context.accessToken&&!this.state.isLoading&&!this.state.successfullyUploaded&&this.state.formSchema&&this.state.formUiSchema&&!this.state.error&&s(ne,{validator:ie,formData:this.state.formData,schema:this.state.formSchema,uiSchema:this.state.formUiSchema,onSubmit:this.onSubmit,ref:this.formRef,children:s("div",{style:{display:"none"},children:s("button",{type:"submit",className:"btn btn-info",children:"Submit"})})}),!this.state.error&&this.context.accessToken&&this.state.isLoading&&I(x.Fragment,{children:[s("span",{children:"Saving…"}),s("span",{style:{marginLeft:"2px"},className:"spinner"})]})]})}}h(w,"contextType",X);try{w.displayName="EntityForm",w.__docgenInfo={description:"",displayName:"EntityForm",props:{parentContainerId:{defaultValue:null,description:"",name:"parentContainerId",required:!0,type:{name:"string"}},formSchemaEntityId:{defaultValue:null,description:"",name:"formSchemaEntityId",required:!0,type:{name:"string"}},formUiSchemaEntityId:{defaultValue:null,description:"",name:"formUiSchemaEntityId",required:!0,type:{name:"string"}},initFormData:{defaultValue:null,description:"",name:"initFormData",required:!0,type:{name:"boolean"}},synIdCallback:{defaultValue:null,description:"",name:"synIdCallback",required:!0,type:{name:"(synId: string) => void"}}}}}catch{}const D=o=>{const{accessToken:c}=_(),{synId:e,className:n}=o,[r,i]=F.useState(void 0);F.useEffect(()=>{(async()=>{try{const m=await u.getEntity(c,e);if(!Z(m))throw new Error(`File Entity expected but found ${m}`);const g={requestedFiles:[{associateObjectId:e,associateObjectType:oe.FileEntity,fileHandleId:m.dataFileHandleId}],includeFileHandles:!0,includePreSignedURLs:!1,includePreviewPreSignedURLs:!1},d=(await u.getFiles(g,c)).requestedFiles[0].fileHandle;if(d&&ee(d))i({externalFileHandle:d,fileEntity:m});else throw new Error(`Not an external file handle: ${d==null?void 0:d.id}`)}catch(m){console.error("Error on getting external file handle = ",m)}})()},[e,c]);const l=r==null?void 0:r.externalFileHandle,a=r==null?void 0:r.fileEntity;return l?s("a",{href:l.externalURL,className:n,target:"_blank",rel:"noopener noreferrer",children:I("span",{children:[a==null?void 0:a.name,s(ae,{style:{marginLeft:5}})]})}):s(q,{})};try{D.displayName="ExternalFileHandleLink",D.__docgenInfo={description:"",displayName:"ExternalFileHandleLink",props:{synId:{defaultValue:null,description:"",name:"synId",required:!0,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}}}catch{}export{P as C};
