var J=Object.defineProperty;var $=(o,c,t)=>c in o?J(o,c,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[c]=t;var h=(o,c,t)=>($(o,typeof c!="symbol"?c+"":c,t),t);import{j as e}from"./jsx-runtime-CKrituN3.js";import{r as S,R as j}from"./index-CBqU2yxZ.js";import{C as z}from"./ChallengeRegisterButton-BkajrtA_.js";import{C as W}from"./ChallengeTeamWizard-BwCZdoSO.js";import"./OrientationBanner-eGM9Gy2i.js";import"./getEndpoint-CjoHA800.js";import{h as w,v as P,P as Y,bd as Q,m as u,be as N,bf as K,bg as X}from"./ApplicationSessionManager-BIT2Vljh.js";import{u as D}from"./useGetEntityChallenge-C-yAAMux.js";import{u as Z}from"./useGetUserTeams-D9MLV_0n.js";import{b as ee,c as te,d as re}from"./useTeamMembers-Ba4rVPCq.js";import{A as ne,C as se,L as ie,G as oe}from"./HelpPopover-D9xpB85R.js";import{d as L}from"./ToastMessage-8-MpE8Xr.js";import"./AccessTokenPage-CcFO-75K.js";import"./AccountLevelBadges-BcIkd6UR.js";import"./LastLoginInfo-4lUlJJDH.js";import"./StandaloneLoginForm-BkAeQm-b.js";import"./TwoFactorAuthSettingsPanel-D-lt8ru7.js";import"./TwoFactorEnrollmentForm-D1LqKUZe.js";import"./TwoFactorBackupCodes-KB90SmkI.js";import"./CertificationQuiz-CXqfcfiK.js";import"./index-Bwx2xt0a.js";import"./AvailableEvaluationQueueList-C_r9RUAk.js";import"./ChallengeSubmission-CCAinFnZ.js";import"./FullWidthAlert-843DPaPD.js";import"./DownloadCartPage-iDphjv5R.js";import"./ShowDownloadV2-CbQhV-ZW.js";import"./useEntitySelection-CHODqzFZ.js";import"./isPlainObject-CBKr2sJD.js";import"./mapValues-Cyn6MZIo.js";import"./index.modern-BtJLeNAU.js";import"./index-BTun5L1E.js";import"./EvaluationCard-hDIEeWhN.js";import"./EvaluationEditorPage-BIR_WVH-.js";import"./ExperimentalMode-DuJfJgzO.js";import{R as ae,F as le}from"./index-C-UbkUMQ.js";import{O as ce}from"./IconSvg-RU2HGWAm.js";import"./FileUpload-Cudq4sNk.js";import"./FeaturedDataTabs-BJSHMDMI.js";import"./FeaturedToolsList-DwpDXHOJ.js";import"./DiscussionThread-9SONW7n7.js";import"./ForumPage-C7BjR3SK.js";import"./Goals-DoPHRqED.js";import"./GoogleMap-DBSOH76D.js";import"./Icon-8Kb0_Ba_.js";import"./OAuthManagement-4a8sHWqV.js";import"./ThemesPlot-Dv_hyJiC.js";import"./UpsetPlot-CXb_M9A_.js";import"./ProjectViewCarousel-BSKa1GFd.js";import"./Programs-pe7i5ohE.js";import"./QueryCount-DghSbDQn.js";import"./RenderIfInView-8EtF9HWA.js";import"./Resources-Cn_Ww8pL.js";import"./RssFeedCards-BsX1RzV8.js";import"./ShowMore-DAczrOMQ.js";import"./SkeletonButton-am8ByK9J.js";import"./SkeletonTable-Cjq7sSe2.js";import"./LeftRightPanel-PDN0ZGxR.js";import"./LightTooltip-OCglR5-l.js";import"./StyledFormControl-DdvhAOoW.js";import"./WideButton-BQbp5XNt.js";import"./InputSizedButton-DDchRHQ6.js";import"./SubscriptionItem-BiTVrdN7.js";import"./DropdownSelect-BrH-0N-q.js";import"./SubsectionRowRenderer-BzLLs_3M.js";import"./SynapseFormWrapper-DFBu_mZ6.js";import"./SynapseFormSubmissionsGrid-rvTIg3Re.js";import"./SystemUseNotification-Cvmb5W-U.js";import"./TableFeedCards-Yc6SJKR2.js";import"./TermsAndConditions-Y7DtmCoy.js";import"./TextField-CvoifmWq.js";import"./TimelinePlot-CXNQpAMx.js";import"./UserBadge-_T0G9b7c.js";import"./UserCardList-CG0FJZH4.js";import"./UserCardListRotate-BOTydcky.js";import"./UserCardListGroups-CnzG7A0B.js";import"./UserOrTeamBadge-B9fwx-WF.js";import"./UserProfileLinks-BIdil0ZN.js";import"./EntityHeaderTable-CcTJwfFq.js";import"./AccessRequirementRelatedProjectsList-CCEa2-k8.js";import{e as me,f as de}from"./useAccessRequirements-BS49hHQc.js";import{u as pe}from"./useEntity-DJpzUv2k.js";import{S as ue}from"./LoadingScreen-C3fYPQjy.js";import{M as he}from"./Alert-C_9TnCz2.js";import{T as fe}from"./Typography-B9IcQwF1.js";import{B as v}from"./Button-CpzfOSQ4.js";function R(o){const{open:c,projectId:t,onRegisterComplete:s,onCancel:n}=o,{data:i,error:l}=pe(t),{accessToken:a}=w(),{data:r,error:m}=D(t),g=!!a,{data:y,error:d}=P({enabled:g}),p=r==null?void 0:r.participantTeamId,E=y==null?void 0:y.ownerId,{data:f,error:T}=ee(p,E,{enabled:!!(p&&E)}),{mutateAsync:I,isPending:F,error:b}=te(),{data:C,isSuccess:A,error:M}=me(r==null?void 0:r.participantTeamId,{enabled:!!(r!=null&&r.participantTeamId)}),V=de((C==null?void 0:C.map(x=>String(x.id)))??[]),O=A&&V.every(x=>x.status==="success"&&x.data.isApproved),B=S.useCallback(async()=>{p&&E&&!(f!=null&&f.isMember)&&await I({teamId:p,userId:E}),s()},[I,s,p,f==null?void 0:f.isMember,E]),_=[l,m,d,T,M,b].filter(x=>!!x);let q=f!=null&&f.isMember?"Continue":"Register";return F&&(q="Registering..."),Y(_)?!p||!c?e.jsx(e.Fragment,{}):e.jsx(ne,{dialogTitle:"Challenge Terms and Conditions",subjectId:p,subjectType:ae.TEAM,teamId:r==null?void 0:r.participantTeamId,renderAsModal:!0,requestObjectName:i==null?void 0:i.name,onHide:()=>{n()},customDialogActions:e.jsxs(e.Fragment,{children:[e.jsx(v,{variant:"outlined",onClick:n,children:"Cancel"}),e.jsx(v,{variant:"contained",onClick:()=>{B()},startIcon:F?e.jsx(ue,{}):void 0,disabled:!O||F,children:q})]})}):e.jsx(he,{severity:"error",children:_.map((x,G)=>e.jsx(fe,{variant:"body1",children:x.reason},G))})}try{R.displayName="ChallengeRequirementsModal",R.__docgenInfo={description:`The challenge requirements modal will
 1. Display the access requirements that must be accepted to join a participant team. The component will guide the user through meeting the requirements.
 2. If the user has accepted the requirements, the user can click 'Register' to join the team
    If the user has not accepted the requirements, the user cannot register for the challenge.`,displayName:"ChallengeRequirementsModal",props:{open:{defaultValue:null,description:"",name:"open",required:!0,type:{name:"boolean"}},projectId:{defaultValue:null,description:"",name:"projectId",required:!0,type:{name:"string"}},onCancel:{defaultValue:null,description:"",name:"onCancel",required:!0,type:{name:"() => void"}},onRegisterComplete:{defaultValue:null,description:"",name:"onRegisterComplete",required:!0,type:{name:"() => void"}}}}}catch{}function U({projectId:o}){const{accessToken:c}=w(),t=!!c,[s,n]=S.useState(!1),[i,l]=S.useState(!1),[a,r]=S.useState(!1),{data:m}=P(),g=C=>{n(C)},y=()=>{l(!0)},d=()=>{r(!0)},{data:p}=D(o),{data:E}=Z(p==null?void 0:p.id,1,0,{enabled:!!(t&&p)}),f=E&&E.results.length>0,{mutate:T}=re({onSuccess:()=>{L("You are no longer registered for this challenge","info")},onError:C=>{L(C.reason,"danger")}}),I=()=>{t&&p&&m&&T({teamId:p.participantTeamId,userId:m.ownerId})},F=()=>{l(!1)},b=()=>{l(!1),n(!f)};return e.jsxs(e.Fragment,{children:[e.jsx(z,{projectId:o,onJoinClick:y,onLeaveClick:d}),e.jsx(R,{open:i,projectId:o,onRegisterComplete:b,onCancel:F}),e.jsx(W,{projectId:o,onClose:()=>{g(!1)},isShowingModal:s}),e.jsx(se,{open:a,title:"Leave this Challenge?",content:"Are you sure you want to leave this Challenge?",onCancel:()=>r(!1),onConfirm:()=>{I(),r(!1)}})]})}try{U.displayName="ChallengeDetailPage",U.__docgenInfo={description:"",displayName:"ChallengeDetailPage",props:{projectId:{defaultValue:null,description:"",name:"projectId",required:!0,type:{name:"string"}}}}}catch{}class k extends j.Component{constructor(t){super(t);h(this,"formRef");h(this,"submitForm",()=>{this.formRef.current.submit()});h(this,"refresh",()=>{if(this.context.accessToken){const t=[u.getUserProfile(this.context.accessToken),u.getEntity(this.context.accessToken,this.props.formSchemaEntityId),u.getEntity(this.context.accessToken,this.props.formUiSchemaEntityId)];Promise.all(t).then(s=>{const n=s[0];this.getTargetContainer(n,this.context.accessToken).then(i=>{const l=s[1],a=s[2];this.getSchemaFileContent(i,l,a)})}).catch(s=>{this.onError(s)})}});h(this,"getSchemaFileContent",(t,s,n)=>{const i=[u.getFileResult(s,this.context.accessToken,!0,!0),u.getFileResult(n,this.context.accessToken,!0,!0)];Promise.all(i).then(l=>{try{const a=l.map(r=>N(r.fileHandle,r.preSignedURL));Promise.all(a).then(r=>{const m=JSON.parse(r[0]),g=JSON.parse(r[1]);this.getExistingFileData(t,m,g)}).catch(r=>{console.log("getSchemaFileContent: Error getting form content",r)})}catch(a){console.log("getSchemaFileContent: Error getting schema content",a)}}).catch(l=>{this.onError(l)})});h(this,"getExistingFileData",(t,s,n)=>{const l={entityName:`${s.title}.json`,parentId:t};let a,r;u.lookupChildEntity(l,this.context.accessToken).then(m=>u.getEntity(this.context.accessToken,m.id).then(g=>(r=g,this.props.initFormData?u.getFileResult(r,this.context.accessToken,!0,!0).then(async y=>{try{const d=await N(y.fileHandle,y.preSignedURL);a=JSON.parse(d)}catch(d){console.log("getExistingFileData: Error setting form data",d)}}):Promise.resolve()))).finally(()=>{this.setState({formData:a,currentFileEntity:r,formSchema:s,formUiSchema:n})})});h(this,"getTargetContainer",async(t,s)=>{const n={entityName:t.ownerId,parentId:this.props.parentContainerId};try{const i=await u.lookupChildEntity(n,s);return console.log(`EntityForm uploading to https://www.synapse.org/#!Synapse:${i.id}`),this.setState({userprofile:t,containerId:i.id,isLoading:!1}),i.id}catch(i){return i.status===404?this.onError(new Error("Your folder has not yet been set up, please retry in a few minutes.")):this.onError(i)}});h(this,"finishedProcessing",()=>{this.setState({isLoading:!1,successfullyUploaded:!0})});h(this,"onError",t=>{this.setState({error:t,isLoading:!1,successfullyUploaded:!1})});h(this,"onSubmit",({formData:t})=>{this.setState({isLoading:!0,successfullyUploaded:!1});const s=new Blob([JSON.stringify(t)],{type:"text/json"});this.createEntityFile(s)});h(this,"createEntityFile",t=>{const s=`${this.state.formSchema.title}.json`;u.uploadFile(this.context.accessToken,s,t).then(n=>{const i=n.fileHandleId;if(this.state.currentFileEntity){const a={...this.state.currentFileEntity,dataFileHandleId:i};return this.setState({currentFileEntity:a}),u.updateEntity(a,this.context.accessToken)}const l={parentId:this.state.containerId,name:s,concreteType:"org.sagebionetworks.repo.model.FileEntity",dataFileHandleId:i};return u.createEntity(l,this.context.accessToken)}).then(n=>{this.finishedProcessing(),this.props.synIdCallback&&this.props.synIdCallback(n.id)}).catch(n=>{this.onError(n)})});this.formRef=j.createRef(),this.state={isLoading:!0,successfullyUploaded:!1}}componentDidMount(){this.refresh()}render(){return e.jsxs("div",{children:[this.state.error&&e.jsxs("div",{className:"panel panel-danger errors",children:[e.jsx("div",{className:"panel-heading",children:e.jsx("h3",{className:"panel-title",children:"Error"})}),e.jsx("ul",{className:"list-group",children:e.jsxs("li",{className:"list-group-item text-danger",children:[this.state.error.name," ",this.state.error.reason,this.state.error.message]})})]}),this.context.accessToken&&!this.state.isLoading&&!this.state.successfullyUploaded&&this.state.formSchema&&this.state.formUiSchema&&!this.state.error&&e.jsx(ie,{validator:oe,formData:this.state.formData,schema:this.state.formSchema,uiSchema:this.state.formUiSchema,onSubmit:this.onSubmit,ref:this.formRef,children:e.jsx("div",{style:{display:"none"},children:e.jsx("button",{type:"submit",className:"btn btn-info",children:"Submit"})})}),!this.state.error&&this.context.accessToken&&this.state.isLoading&&e.jsxs(j.Fragment,{children:[e.jsx("span",{children:"Saving…"}),e.jsx("span",{style:{marginLeft:"2px"},className:"spinner"})]})]})}}h(k,"contextType",Q);try{k.displayName="EntityForm",k.__docgenInfo={description:"",displayName:"EntityForm",props:{parentContainerId:{defaultValue:null,description:"",name:"parentContainerId",required:!0,type:{name:"string"}},formSchemaEntityId:{defaultValue:null,description:"",name:"formSchemaEntityId",required:!0,type:{name:"string"}},formUiSchemaEntityId:{defaultValue:null,description:"",name:"formUiSchemaEntityId",required:!0,type:{name:"string"}},initFormData:{defaultValue:null,description:"",name:"initFormData",required:!0,type:{name:"boolean"}},synIdCallback:{defaultValue:null,description:"",name:"synIdCallback",required:!0,type:{name:"(synId: string) => void"}}}}}catch{}const H=o=>{const{accessToken:c}=w(),{synId:t,className:s}=o,[n,i]=S.useState(void 0);S.useEffect(()=>{(async()=>{try{const m=await u.getEntity(c,t);if(!K(m))throw new Error(`File Entity expected but found ${m}`);const g={requestedFiles:[{associateObjectId:t,associateObjectType:le.FileEntity,fileHandleId:m.dataFileHandleId}],includeFileHandles:!0,includePreSignedURLs:!1,includePreviewPreSignedURLs:!1},d=(await u.getFiles(g,c)).requestedFiles[0].fileHandle;if(d&&X(d))i({externalFileHandle:d,fileEntity:m});else throw new Error(`Not an external file handle: ${d==null?void 0:d.id}`)}catch(m){console.error("Error on getting external file handle = ",m)}})()},[t,c]);const l=n==null?void 0:n.externalFileHandle,a=n==null?void 0:n.fileEntity;return l?e.jsx("a",{href:l.externalURL,className:s,target:"_blank",rel:"noopener noreferrer",children:e.jsxs("span",{children:[a==null?void 0:a.name,e.jsx(ce,{style:{marginLeft:5}})]})}):e.jsx(e.Fragment,{})};try{H.displayName="ExternalFileHandleLink",H.__docgenInfo={description:"",displayName:"ExternalFileHandleLink",props:{synId:{defaultValue:null,description:"",name:"synId",required:!0,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}}}catch{}export{U as C};
