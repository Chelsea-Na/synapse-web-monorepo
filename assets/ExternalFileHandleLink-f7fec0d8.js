var z=Object.defineProperty;var W=(o,c,e)=>c in o?z(o,c,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[c]=e;var h=(o,c,e)=>(W(o,typeof c!="symbol"?c+"":c,e),e);import{j as s,F as R,a as I}from"./jsx-runtime-9dc53467.js";import{r as F,R as k}from"./index-76fb7be0.js";import{C as Y}from"./ChallengeRegisterButton-ae8d6a1f.js";import{C as Q}from"./ChallengeTeamWizard-29e0c181.js";import"./OrientationBanner-450e6652.js";import"./getEndpoint-ac94413e.js";import{h as _,v as j,P as K,bd as X,m as u,be as H,bf as Z,bg as ee}from"./ApplicationSessionManager-5baf04bf.js";import{u as M}from"./useGetEntityChallenge-1d971286.js";import{u as te}from"./useGetUserTeams-9ac94b52.js";import{b as re,c as ne,d as ie}from"./useTeamMembers-fb82d51b.js";import{A as se,C as oe,L as ae,G as le}from"./HelpPopover-638c269d.js";import{d as U}from"./ToastMessage-3dbe47cb.js";import"./AccessTokenPage-ded5dbb1.js";import"./AccountLevelBadges-5f77e1e8.js";import"./LastLoginInfo-6fa37866.js";import"./StandaloneLoginForm-c5b07b59.js";import"./TwoFactorAuthSettingsPanel-bb001169.js";import"./TwoFactorEnrollmentForm-76b228a8.js";import"./TwoFactorBackupCodes-3929f361.js";import"./CertificationQuiz-e01c169d.js";import"./index-43127ac6.js";import"./AvailableEvaluationQueueList-7d4c56b7.js";import"./ChallengeSubmission-de9ed4c0.js";import"./FullWidthAlert-149d754f.js";import"./DownloadCartPage-eab987a0.js";import"./ShowDownloadV2-0c467c2c.js";import"./useEntitySelection-45f97de6.js";import"./isPlainObject-ad60ab85.js";import"./mapValues-c1561695.js";import"./uniq-39b0b943.js";import"./index-c71daf5e.js";import"./EvaluationCard-d15a9939.js";import"./EvaluationEditorPage-ddca0d32.js";import"./ExperimentalMode-cb49d9af.js";import{R as ce,F as me}from"./index-4a1b1a67.js";import{O as de}from"./IconSvg-4bf1503e.js";import"./FileUpload-33b3524e.js";import"./FeaturedDataTabs-b21010b9.js";import"./FeaturedToolsList-9ad9c59b.js";import"./DiscussionThread-4056ec17.js";import"./ForumPage-269fbbb1.js";import"./Goals-982aab0e.js";import"./GoogleMap-e71bbc00.js";import"./Icon-c85b328e.js";import"./OAuthManagement-67b90bbb.js";import"./ThemesPlot-7549ae03.js";import"./UpsetPlot-3b9f0a35.js";import"./ProjectViewCarousel-360c00b0.js";import"./Programs-5c142a64.js";import"./QueryCount-2ac77e7b.js";import"./RenderIfInView-df26c1ce.js";import"./Resources-790e27b1.js";import"./RssFeedCards-f428e469.js";import"./ShowMore-0d3229ca.js";import"./SkeletonButton-4e246cf8.js";import"./SkeletonTable-3361182b.js";import"./LeftRightPanel-1bb2832a.js";import"./LightTooltip-63c7f08d.js";import"./StyledFormControl-8337a369.js";import"./WideButton-0af44728.js";import"./InputSizedButton-03fa6b2c.js";import"./SubscriptionItem-4451b58e.js";import"./DropdownSelect-74aa0d34.js";import"./SubsectionRowRenderer-cdaacc63.js";import"./SynapseFormWrapper-964129e2.js";import"./SynapseFormSubmissionsGrid-23d61907.js";import"./SystemUseNotification-ff8052b1.js";import"./TableFeedCards-3af3f81c.js";import"./TermsAndConditions-839d8ec6.js";import"./TextField-35127e91.js";import"./TimelinePlot-917c9dfc.js";import"./UserBadge-735d015d.js";import"./UserCardList-f55df71f.js";import"./UserCardListRotate-7461ab92.js";import"./UserCardListGroups-a380da3f.js";import"./UserOrTeamBadge-2b6b8505.js";import"./UserProfileLinks-7b0fd4ab.js";import"./EntityHeaderTable-786a1145.js";import"./AccessRequirementRelatedProjectsList-3a8eafa5.js";import{e as pe,f as ue}from"./useAccessRequirements-93986493.js";import{u as he}from"./useEntity-7dda48de.js";import{S as fe}from"./LoadingScreen-7bb66db3.js";import{M as ge}from"./Alert-fd45ce28.js";import{T as ye}from"./Typography-f217f607.js";import{B as P}from"./Button-065a21d4.js";function w(o){const{open:c,projectId:e,onRegisterComplete:n,onCancel:r}=o,{data:i,error:l}=he(e),{accessToken:a}=_(),{data:t,error:m}=M(e),g=!!a,{data:y,error:d}=j({enabled:g}),p=t==null?void 0:t.participantTeamId,E=y==null?void 0:y.ownerId,{data:f,error:x}=re(p,E,{enabled:!!(p&&E)}),{mutateAsync:T,isPending:b,error:N}=ne(),{data:S,isSuccess:V,error:O}=pe(t==null?void 0:t.participantTeamId,{enabled:!!(t!=null&&t.participantTeamId)}),B=ue((S==null?void 0:S.map(C=>String(C.id)))??[]),G=V&&B.every(C=>C.status==="success"&&C.data.isApproved),J=F.useCallback(async()=>{p&&E&&!(f!=null&&f.isMember)&&await T({teamId:p,userId:E}),n()},[T,n,p,f==null?void 0:f.isMember,E]),L=[l,m,d,x,O,N].filter(C=>!!C);let v=f!=null&&f.isMember?"Continue":"Register";return b&&(v="Registering..."),K(L)?!p||!c?s(R,{}):s(se,{dialogTitle:"Challenge Terms and Conditions",subjectId:p,subjectType:ce.TEAM,teamId:t==null?void 0:t.participantTeamId,renderAsModal:!0,requestObjectName:i==null?void 0:i.name,onHide:()=>{r()},customDialogActions:I(R,{children:[s(P,{variant:"outlined",onClick:r,children:"Cancel"}),s(P,{variant:"contained",onClick:()=>{J()},startIcon:b?s(fe,{}):void 0,disabled:!G||b,children:v})]})}):s(ge,{severity:"error",children:L.map((C,$)=>s(ye,{variant:"body1",children:C.reason},$))})}try{w.displayName="ChallengeRequirementsModal",w.__docgenInfo={description:`The challenge requirements modal will
 1. Display the access requirements that must be accepted to join a participant team. The component will guide the user through meeting the requirements.
 2. If the user has accepted the requirements, the user can click 'Register' to join the team
    If the user has not accepted the requirements, the user cannot register for the challenge.`,displayName:"ChallengeRequirementsModal",props:{open:{defaultValue:null,description:"",name:"open",required:!0,type:{name:"boolean"}},projectId:{defaultValue:null,description:"",name:"projectId",required:!0,type:{name:"string"}},onCancel:{defaultValue:null,description:"",name:"onCancel",required:!0,type:{name:"() => void"}},onRegisterComplete:{defaultValue:null,description:"",name:"onRegisterComplete",required:!0,type:{name:"() => void"}}}}}catch{}function D({projectId:o}){const{accessToken:c}=_(),e=!!c,[n,r]=F.useState(!1),[i,l]=F.useState(!1),[a,t]=F.useState(!1),{data:m}=j(),g=S=>{r(S)},y=()=>{l(!0)},d=()=>{t(!0)},{data:p}=M(o),{data:E}=te(p==null?void 0:p.id,1,0,{enabled:!!(e&&p)}),f=E&&E.results.length>0,{mutate:x}=ie({onSuccess:()=>{U("You are no longer registered for this challenge","info")},onError:S=>{U(S.reason,"danger")}}),T=()=>{e&&p&&m&&x({teamId:p.participantTeamId,userId:m.ownerId})};return I(R,{children:[s(Y,{projectId:o,onJoinClick:y,onLeaveClick:d}),s(w,{open:i,projectId:o,onRegisterComplete:()=>{l(!1),r(!f)},onCancel:()=>{l(!1)}}),s(Q,{projectId:o,onClose:()=>{g(!1)},isShowingModal:n}),s(oe,{open:a,title:"Leave this Challenge?",content:"Are you sure you want to leave this Challenge?",onCancel:()=>t(!1),onConfirm:()=>{T(),t(!1)}})]})}try{D.displayName="ChallengeDetailPage",D.__docgenInfo={description:"",displayName:"ChallengeDetailPage",props:{projectId:{defaultValue:null,description:"",name:"projectId",required:!0,type:{name:"string"}}}}}catch{}class q extends k.Component{constructor(e){super(e);h(this,"formRef");h(this,"submitForm",()=>{this.formRef.current.submit()});h(this,"refresh",()=>{if(this.context.accessToken){const e=[u.getUserProfile(this.context.accessToken),u.getEntity(this.context.accessToken,this.props.formSchemaEntityId),u.getEntity(this.context.accessToken,this.props.formUiSchemaEntityId)];Promise.all(e).then(n=>{const r=n[0];this.getTargetContainer(r,this.context.accessToken).then(i=>{const l=n[1],a=n[2];this.getSchemaFileContent(i,l,a)})}).catch(n=>{this.onError(n)})}});h(this,"getSchemaFileContent",(e,n,r)=>{const i=[u.getFileResult(n,this.context.accessToken,!0,!0),u.getFileResult(r,this.context.accessToken,!0,!0)];Promise.all(i).then(l=>{try{const a=l.map(t=>H(t.fileHandle,t.preSignedURL));Promise.all(a).then(t=>{const m=JSON.parse(t[0]),g=JSON.parse(t[1]);this.getExistingFileData(e,m,g)}).catch(t=>{console.log("getSchemaFileContent: Error getting form content",t)})}catch(a){console.log("getSchemaFileContent: Error getting schema content",a)}}).catch(l=>{this.onError(l)})});h(this,"getExistingFileData",(e,n,r)=>{const l={entityName:`${n.title}.json`,parentId:e};let a,t;u.lookupChildEntity(l,this.context.accessToken).then(m=>u.getEntity(this.context.accessToken,m.id).then(g=>(t=g,this.props.initFormData?u.getFileResult(t,this.context.accessToken,!0,!0).then(async y=>{try{const d=await H(y.fileHandle,y.preSignedURL);a=JSON.parse(d)}catch(d){console.log("getExistingFileData: Error setting form data",d)}}):Promise.resolve()))).finally(()=>{this.setState({formData:a,currentFileEntity:t,formSchema:n,formUiSchema:r})})});h(this,"getTargetContainer",async(e,n)=>{const r={entityName:e.ownerId,parentId:this.props.parentContainerId};try{const i=await u.lookupChildEntity(r,n);return console.log(`EntityForm uploading to https://www.synapse.org/#!Synapse:${i.id}`),this.setState({userprofile:e,containerId:i.id,isLoading:!1}),i.id}catch(i){return i.status===404?this.onError(new Error("Your folder has not yet been set up, please retry in a few minutes.")):this.onError(i)}});h(this,"finishedProcessing",()=>{this.setState({isLoading:!1,successfullyUploaded:!0})});h(this,"onError",e=>{this.setState({error:e,isLoading:!1,successfullyUploaded:!1})});h(this,"onSubmit",({formData:e})=>{this.setState({isLoading:!0,successfullyUploaded:!1});const n=new Blob([JSON.stringify(e)],{type:"text/json"});this.createEntityFile(n)});h(this,"createEntityFile",e=>{const n=`${this.state.formSchema.title}.json`;u.uploadFile(this.context.accessToken,n,e).then(r=>{const i=r.fileHandleId;if(this.state.currentFileEntity){const a={...this.state.currentFileEntity,dataFileHandleId:i};return this.setState({currentFileEntity:a}),u.updateEntity(a,this.context.accessToken)}const l={parentId:this.state.containerId,name:n,concreteType:"org.sagebionetworks.repo.model.FileEntity",dataFileHandleId:i};return u.createEntity(l,this.context.accessToken)}).then(r=>{this.finishedProcessing(),this.props.synIdCallback&&this.props.synIdCallback(r.id)}).catch(r=>{this.onError(r)})});this.formRef=k.createRef(),this.state={isLoading:!0,successfullyUploaded:!1}}componentDidMount(){this.refresh()}render(){return I("div",{children:[this.state.error&&I("div",{className:"panel panel-danger errors",children:[s("div",{className:"panel-heading",children:s("h3",{className:"panel-title",children:"Error"})}),s("ul",{className:"list-group",children:I("li",{className:"list-group-item text-danger",children:[this.state.error.name," ",this.state.error.reason,this.state.error.message]})})]}),this.context.accessToken&&!this.state.isLoading&&!this.state.successfullyUploaded&&this.state.formSchema&&this.state.formUiSchema&&!this.state.error&&s(ae,{validator:le,formData:this.state.formData,schema:this.state.formSchema,uiSchema:this.state.formUiSchema,onSubmit:this.onSubmit,ref:this.formRef,children:s("div",{style:{display:"none"},children:s("button",{type:"submit",className:"btn btn-info",children:"Submit"})})}),!this.state.error&&this.context.accessToken&&this.state.isLoading&&I(k.Fragment,{children:[s("span",{children:"Saving…"}),s("span",{style:{marginLeft:"2px"},className:"spinner"})]})]})}}h(q,"contextType",X);try{q.displayName="EntityForm",q.__docgenInfo={description:"",displayName:"EntityForm",props:{parentContainerId:{defaultValue:null,description:"",name:"parentContainerId",required:!0,type:{name:"string"}},formSchemaEntityId:{defaultValue:null,description:"",name:"formSchemaEntityId",required:!0,type:{name:"string"}},formUiSchemaEntityId:{defaultValue:null,description:"",name:"formUiSchemaEntityId",required:!0,type:{name:"string"}},initFormData:{defaultValue:null,description:"",name:"initFormData",required:!0,type:{name:"boolean"}},synIdCallback:{defaultValue:null,description:"",name:"synIdCallback",required:!0,type:{name:"(synId: string) => void"}}}}}catch{}const A=o=>{const{accessToken:c}=_(),{synId:e,className:n}=o,[r,i]=F.useState(void 0);F.useEffect(()=>{(async()=>{try{const m=await u.getEntity(c,e);if(!Z(m))throw new Error(`File Entity expected but found ${m}`);const g={requestedFiles:[{associateObjectId:e,associateObjectType:me.FileEntity,fileHandleId:m.dataFileHandleId}],includeFileHandles:!0,includePreSignedURLs:!1,includePreviewPreSignedURLs:!1},d=(await u.getFiles(g,c)).requestedFiles[0].fileHandle;if(d&&ee(d))i({externalFileHandle:d,fileEntity:m});else throw new Error(`Not an external file handle: ${d==null?void 0:d.id}`)}catch(m){console.error("Error on getting external file handle = ",m)}})()},[e,c]);const l=r==null?void 0:r.externalFileHandle,a=r==null?void 0:r.fileEntity;return l?s("a",{href:l.externalURL,className:n,target:"_blank",rel:"noopener noreferrer",children:I("span",{children:[a==null?void 0:a.name,s(de,{style:{marginLeft:5}})]})}):s(R,{})};try{A.displayName="ExternalFileHandleLink",A.__docgenInfo={description:"",displayName:"ExternalFileHandleLink",props:{synId:{defaultValue:null,description:"",name:"synId",required:!0,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}}}catch{}export{D as C};
