{"version":3,"file":"SubmissionPage.stories-189fb116.js","sources":["../../mocks/dataaccess/MockSubmission.ts","../../stories/SubmissionPage.stories.tsx"],"sourcesContent":["import {\n  AccessType,\n  RestrictableObjectType,\n  SubmissionState,\n} from '../../src/lib/utils/synapseTypes'\nimport { Submission } from '../../src/lib/utils/synapseTypes/AccessRequirement/Submission'\nimport { MOCK_USER_ID, MOCK_USER_ID_2 } from '../user/mock_user_profile'\n\nexport const mockRejectedSubmission: Submission = {\n  id: '3',\n  accessRequirementId: '9602626',\n  accessRequirementVersion: 1,\n  requestId: '1',\n  ducFileHandleId: '3997203',\n  irbFileHandleId: '3997205',\n  accessorChanges: [\n    {\n      userId: MOCK_USER_ID.toString(),\n      type: AccessType.RENEW_ACCESS,\n    },\n    {\n      userId: MOCK_USER_ID_2.toString(),\n      type: AccessType.REVOKE_ACCESS,\n    },\n  ],\n  researchProjectSnapshot: {\n    id: '1',\n    accessRequirementId: '9602626',\n    institution: 'Bage Sionetworks',\n    projectLead: 'Nick G',\n    intendedDataUseStatement: 'Updated IDU',\n    createdOn: '2022-05-10T15:49:56.292Z',\n    modifiedOn: '2022-05-11T13:25:06.021Z',\n    createdBy: MOCK_USER_ID.toString(),\n    modifiedBy: MOCK_USER_ID.toString(),\n    etag: '8d0d4ec8-4cd9-45a7-b09d-390cd64cfca4',\n  },\n  isRenewalSubmission: true,\n  publication: '',\n  summaryOfUse: '',\n  submittedOn: '2022-05-11T13:25:20.262Z',\n  modifiedOn: '2022-05-11T13:26:18.583Z',\n  submittedBy: MOCK_USER_ID.toString(),\n  modifiedBy: MOCK_USER_ID.toString(),\n  state: SubmissionState.REJECTED,\n  rejectedReason:\n    'Thank you for submitting your data access request. Before I can accept your request, please address the following:\\n\\nFix incorrect data.\\n\\nPlease contact us at act@sagebionetworks.org if you have any questions.\\n\\nRegards,\\nAccess and Compliance Team (ACT)\\nact@sagebionetworks.org',\n  etag: '626f9567-bf5f-41e0-9bbf-cf1cd23e6b54',\n  subjectId: 'syn12156790',\n  subjectType: RestrictableObjectType.ENTITY,\n}\nexport const mockSubmittedSubmission: Submission = {\n  id: '1',\n  accessRequirementId: '9602626',\n  accessRequirementVersion: 1,\n  requestId: '1',\n  ducFileHandleId: '3997203',\n  irbFileHandleId: '3997205',\n  attachments: ['123456', '123457'],\n  accessorChanges: [\n    {\n      userId: MOCK_USER_ID.toString(),\n      type: AccessType.GAIN_ACCESS,\n    },\n    {\n      userId: MOCK_USER_ID_2.toString(),\n      type: AccessType.GAIN_ACCESS,\n    },\n  ],\n  researchProjectSnapshot: {\n    id: '1',\n    accessRequirementId: '9602626',\n    institution: 'Bage Sionetworks',\n    projectLead: 'Nick G',\n    intendedDataUseStatement:\n      'I plan to see if the data is real data, because I suspect that this is really fake data created solely for a testing environment where software engineers pretend to be the users for whom they are trying to build features.',\n    createdOn: '2022-05-10T15:49:56.292Z',\n    modifiedOn: '2022-05-10T15:49:56.292Z',\n    createdBy: MOCK_USER_ID.toString(),\n    modifiedBy: MOCK_USER_ID.toString(),\n    etag: '7ea28f9e-81cb-43be-a614-9eb1a0dabafc',\n  },\n  isRenewalSubmission: false,\n  submittedOn: '2022-05-10T15:50:19.275Z',\n  modifiedOn: '2022-05-10T15:50:19.275Z',\n  submittedBy: MOCK_USER_ID.toString(),\n  modifiedBy: MOCK_USER_ID.toString(),\n  state: SubmissionState.SUBMITTED,\n  etag: '40820b64-c436-486b-8fb8-afef931fbcb3',\n  subjectId: 'syn12156790',\n  subjectType: RestrictableObjectType.ENTITY,\n}\nexport const mockApprovedSubmission: Submission = {\n  id: '2',\n  accessRequirementId: '9602626',\n  accessRequirementVersion: 1,\n  requestId: '2',\n  ducFileHandleId: '3997211',\n  irbFileHandleId: '3997213',\n  attachments: ['3997211'],\n  accessorChanges: [\n    {\n      userId: MOCK_USER_ID.toString(),\n      type: AccessType.GAIN_ACCESS,\n    },\n  ],\n  researchProjectSnapshot: {\n    id: '2',\n    accessRequirementId: '9602626',\n    institution: 'None',\n    projectLead: 'NickACT',\n    intendedDataUseStatement: 'Give me data pls',\n    createdOn: '2022-05-10T17:17:14.757Z',\n    modifiedOn: '2022-05-10T17:18:17.913Z',\n    createdBy: MOCK_USER_ID.toString(),\n    modifiedBy: MOCK_USER_ID.toString(),\n    etag: '270234fd-da28-4098-8fd2-5693fee82c19',\n  },\n  isRenewalSubmission: false,\n  submittedOn: '2022-05-10T17:18:28.801Z',\n  modifiedOn: '2022-05-10T17:20:09.356Z',\n  submittedBy: MOCK_USER_ID.toString(),\n  modifiedBy: MOCK_USER_ID.toString(),\n  state: SubmissionState.APPROVED,\n  etag: '5fefb2d1-8600-4e1e-96e1-cf57f2ff7fd0',\n  subjectId: 'syn12156790',\n  subjectType: RestrictableObjectType.ENTITY,\n}\n\nexport const mockDemoSubmission: Submission = {\n  id: '4',\n  accessRequirementId: '9603055',\n  accessRequirementVersion: 1,\n  requestId: '1',\n  ducFileHandleId: '3997203',\n  irbFileHandleId: '3997205',\n  attachments: ['123456', '123457'],\n  accessorChanges: [\n    {\n      userId: '3431185',\n      type: AccessType.RENEW_ACCESS,\n    },\n    {\n      userId: '3350396',\n      type: AccessType.GAIN_ACCESS,\n    },\n    {\n      userId: '3371908',\n      type: AccessType.REVOKE_ACCESS,\n    },\n  ],\n  researchProjectSnapshot: {\n    id: '1',\n    accessRequirementId: '9603055',\n    institution: 'Bage Sionetworks',\n    projectLead: 'Adam H',\n    intendedDataUseStatement:\n      'I plan to see if the data is real data, because I suspect that this is really fake data created solely for a testing environment.',\n    createdOn: '2022-05-10T15:49:56.292Z',\n    modifiedOn: '2022-05-10T15:49:56.292Z',\n    createdBy: '3431185',\n    modifiedBy: '3431185',\n    etag: '7ea28f9e-81cb-43be-a614-9eb1a0dabafc',\n  },\n  isRenewalSubmission: false,\n  submittedOn: '2022-05-10T15:50:19.275Z',\n  modifiedOn: '2022-05-10T15:50:19.275Z',\n  submittedBy: '3431185',\n  modifiedBy: '3431185',\n  state: SubmissionState.SUBMITTED,\n  etag: '40820b64-c436-486b-8fb8-afef931fbcb3',\n  subjectId: 'syn12156790',\n  subjectType: RestrictableObjectType.ENTITY,\n}\n\nexport const mockSubmissions: Submission[] = [\n  mockApprovedSubmission,\n  mockRejectedSubmission,\n  mockSubmittedSubmission,\n  mockDemoSubmission,\n]\n","import React from 'react';\nimport { Meta, StoryObj } from '@storybook/react';\nimport { rest } from 'msw';\nimport { ACCESS_REQUIREMENT_BY_ID, ACCESS_REQUIREMENT_WIKI_PAGE_KEY, DATA_ACCESS_SUBMISSION_BY_ID } from '../src/lib/utils/APIConstants';\nimport { mockSubmissions } from '../mocks/dataaccess/MockSubmission';\nimport { mockManagedACTAccessRequirement } from '../mocks/mockAccessRequirements';\nimport { MOCK_REPO_ORIGIN } from '../src/lib/utils/functions/getEndpoint';\nimport { getHandlersForTableQuery } from '../mocks/msw/handlers/tableQueryHandlers';\nimport mockRejectionReasonsTableQueryResultBundle from '../mocks/query/mockRejectionReasonsTableQueryResultBundle';\nimport SubmissionPage from '../src/lib/containers/dataaccess/SubmissionPage';\nimport { SynapseErrorBoundary } from '../src/lib/containers/error/ErrorBanner';\nconst meta = ({\n  title: 'Governance/SubmissionPage',\n  component: SubmissionPage,\n  render: args => <>\n      <p>\n        First, use the StackChanger component to switch to the Mock Data stack\n      </p>\n      <SynapseErrorBoundary>\n        <SubmissionPage {...args} />\n      </SynapseErrorBoundary>\n    </>\n} satisfies Meta);\nexport default meta;\ntype Story = StoryObj<typeof meta>;\nexport const Demo: Story = {\n  parameters: {\n    msw: {\n      handlers: [\n      // Return submission based on ID\n      rest.get(`${MOCK_REPO_ORIGIN}${DATA_ACCESS_SUBMISSION_BY_ID(':id')}`, async (req, res, ctx) => {\n        const submission = mockSubmissions.find(submission => req.params.id === submission.id);\n        return res(ctx.status(200), ctx.json(submission));\n      }),\n      // Return a mocked access requirement\n      rest.get(`${MOCK_REPO_ORIGIN}${ACCESS_REQUIREMENT_BY_ID(':id')}`, async (req, res, ctx) => {\n        return res(ctx.status(200), ctx.json(mockManagedACTAccessRequirement));\n      }), rest.get(`${MOCK_REPO_ORIGIN}${ACCESS_REQUIREMENT_WIKI_PAGE_KEY(':id')}`, async (req, res, ctx) => {\n        return res(ctx.status(200), ctx.json({\n          wikiPageId: 123,\n          ownerObjectId: mockManagedACTAccessRequirement.id,\n          ownerObjectType: 'ACCESS_REQUIREMENT'\n        }));\n      }), rest.get(`${MOCK_REPO_ORIGIN}/repo/v1/accessRequirement/:id/acl`, async (req, res, ctx) => {\n        return res(ctx.status(200), ctx.json({\n          id: req.id,\n          creationDate: '2022-05-20T14:32:31.665Z',\n          etag: 'f4fbd4f2-751d-40dd-9421-1d2693231217',\n          resourceAccess: [{\n            principalId: 3350396,\n            accessType: ['REVIEW_SUBMISSIONS']\n          }]\n        }));\n      }), ...getHandlersForTableQuery(mockRejectionReasonsTableQueryResultBundle), rest.put(`${MOCK_REPO_ORIGIN}${DATA_ACCESS_SUBMISSION_BY_ID(':id')}`, async (req, res, ctx) => {\n        return res(ctx.status(201), ctx.json(await req.json()));\n      })]\n    }\n  },\n  args: {\n    submissionId: 1\n  }\n};\nDemo.parameters = {\n  ...Demo.parameters,\n  docs: {\n    ...Demo.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  parameters: {\\n    msw: {\\n      handlers: [\\n      // Return submission based on ID\\n      rest.get(`${MOCK_REPO_ORIGIN}${DATA_ACCESS_SUBMISSION_BY_ID(':id')}`, async (req, res, ctx) => {\\n        const submission = mockSubmissions.find(submission => req.params.id === submission.id);\\n        return res(ctx.status(200), ctx.json(submission));\\n      }),\\n      // Return a mocked access requirement\\n      rest.get(`${MOCK_REPO_ORIGIN}${ACCESS_REQUIREMENT_BY_ID(':id')}`, async (req, res, ctx) => {\\n        return res(ctx.status(200), ctx.json(mockManagedACTAccessRequirement));\\n      }), rest.get(`${MOCK_REPO_ORIGIN}${ACCESS_REQUIREMENT_WIKI_PAGE_KEY(':id')}`, async (req, res, ctx) => {\\n        return res(ctx.status(200), ctx.json({\\n          wikiPageId: 123,\\n          ownerObjectId: mockManagedACTAccessRequirement.id,\\n          ownerObjectType: 'ACCESS_REQUIREMENT'\\n        }));\\n      }), rest.get(`${MOCK_REPO_ORIGIN}/repo/v1/accessRequirement/:id/acl`, async (req, res, ctx) => {\\n        return res(ctx.status(200), ctx.json({\\n          id: req.id,\\n          creationDate: '2022-05-20T14:32:31.665Z',\\n          etag: 'f4fbd4f2-751d-40dd-9421-1d2693231217',\\n          resourceAccess: [{\\n            principalId: 3350396,\\n            accessType: ['REVIEW_SUBMISSIONS']\\n          }]\\n        }));\\n      }), ...getHandlersForTableQuery(mockRejectionReasonsTableQueryResultBundle), rest.put(`${MOCK_REPO_ORIGIN}${DATA_ACCESS_SUBMISSION_BY_ID(':id')}`, async (req, res, ctx) => {\\n        return res(ctx.status(201), ctx.json(await req.json()));\\n      })]\\n    }\\n  },\\n  args: {\\n    submissionId: 1\\n  }\\n}\",\n      ...Demo.parameters?.docs?.source\n    }\n  }\n};"],"names":["mockRejectedSubmission","MOCK_USER_ID","AccessType","MOCK_USER_ID_2","SubmissionState","RestrictableObjectType","mockSubmittedSubmission","mockApprovedSubmission","mockDemoSubmission","mockSubmissions","meta","SubmissionPage","jsxs","Fragment","jsx","SynapseErrorBoundary","args","Demo","rest","MOCK_REPO_ORIGIN","DATA_ACCESS_SUBMISSION_BY_ID","req","res","ctx","submission","ACCESS_REQUIREMENT_BY_ID","mockManagedACTAccessRequirement","ACCESS_REQUIREMENT_WIKI_PAGE_KEY","getHandlersForTableQuery","mockRejectionReasonsTableQueryResultBundle","_a","_c","_b"],"mappings":"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"}