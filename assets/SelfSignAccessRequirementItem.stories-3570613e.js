import{j as p}from"./jsx-runtime-095bf462.js";import{o as R}from"./SynapseTableCell-9f4ca8cd.js";import{S as l,a as S,e as A,ag as f,ah as g}from"./SynapseClient-0a8d63c6.js";import{e as s,g as C}from"./wikiHandlers-0427fc7f.js";import{M as i}from"./getEndpoint-ac94413e.js";import{l as n}from"./index-43de7067.js";import{M as a}from"./mock_user_profile-9a6a3ecf.js";import{g as I}from"./accessRequirementHandlers-97e6e693.js";import{a as O}from"./userProfileHandlers-c8fb34f2.js";import"./index-8db94870.js";import"./_commonjsHelpers-042e6b4d.js";import"./dayjs.min-59ef0ea6.js";import"./DateFormatter-9fdc74f7.js";import"./SynapseConstants-0807672a.js";import"./OrientationBanner-d057b0e6.js";import"./FullWidthAlert-7e419f2a.js";import"./AlertTitle-d92dfb78.js";import"./styled-96220216.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-4abd396b.js";import"./createSvgIcon-102248e7.js";import"./Paper-8ac7942c.js";import"./IconButton-1e0dd4f6.js";import"./ButtonBase-0195d275.js";import"./emotion-react.browser.esm-8516f11f.js";import"./assertThisInitialized-081f9914.js";import"./inheritsLoose-c82a83d4.js";import"./TransitionGroupContext-f2b81dde.js";import"./useForkRef-f2aa3d66.js";import"./useIsFocusVisible-bbf13f29.js";import"./Typography-c5b8eeae.js";import"./extendSxProp-d749f662.js";import"./Stack-f7ee2fdc.js";import"./Box-891dc3c7.js";import"./useTheme-a5fe342b.js";import"./Grow-15d1c4f6.js";import"./isHostComponent-fa76b8d9.js";import"./index-8ce4a492.js";import"./utils-60a28f01.js";import"./ClickAwayListener-36b79525.js";import"./Tooltip-e6a8fad5.js";import"./Button-d3d5b3a8.js";import"./IconSvg-567506cb.js";import"./ErrorOutlined-b4a8c67a.js";import"./GetAppTwoTone-9a0869d1.js";import"./InfoOutlined-1265fd90.js";import"./CheckCircleTwoTone-cd25e954.js";import"./index-95cfb7c2.js";import"./SynapseTableConstants-0be13e3a.js";import"./EntityLink-cb3c4e19.js";import"./useEntity-89cebbd9.js";import"./useMutation-cd764d1b.js";import"./useInfiniteQuery-cb326aba.js";import"./pick-e197ef9d.js";import"./toString-cc90cb98.js";import"./isArray-5e3f9107.js";import"./isSymbol-7c514724.js";import"./_baseClone-c8b39ad5.js";import"./_Uint8Array-90a26a60.js";import"./_MapCache-e9b04981.js";import"./_baseTimes-8cccc40f.js";import"./_isIndex-af14b756.js";import"./hasIn-4d72521a.js";import"./_baseSlice-cf92e063.js";import"./EntityIcon-d14801d8.js";import"./ErrorChip-0271da5e.js";import"./Avatar-15b73dbe.js";import"./Link-9ad54ce1.js";import"./Skeleton-a24326d8.js";import"./RegularExpressions-bc0adf55.js";import"./SqlFunctions-6ae26661.js";import"./UserSearchBoxV2-5b93abd0.js";import"./Select-ce3716e1.esm-8435c103.js";import"./isNativeReflectConstruct-e378569d.js";import"./use-deep-compare-effect.esm-7a830988.js";import"./uniq-b7f19c5d.js";import"./_isIterateeCall-141ee06b.js";import"./times-f1c18b3d.js";import"./_cacheHas-1ed592ac.js";import"./without-5172d533.js";import"./_baseRest-ace5a70f.js";import"./isArrayLikeObject-4905d5c4.js";import"./_setToArray-3d6ec6fd.js";import"./UserOrTeamBadge-97acabe5.js";import"./UserCard-6db8ada7.js";import"./SkeletonTable-6c3d7be9.js";import"./ToastMessage-cdf61efe.js";import"./hasClass-ec9efd32.js";import"./uniqueId-4d05949d.js";import"./Popover-3ba117be.js";import"./Modal-3a262027.js";import"./Backdrop-1b2a4bbc.js";import"./Fade-5a6f6506.js";import"./getScrollbarSize-ac846fe6.js";import"./ownerWindow-2c76219e.js";import"./createChainedFunction-0bab83cf.js";import"./LoadingScreen-2548bf16.js";import"./LinearProgress-ddf61131.js";import"./NoSearchResults-460db635.js";import"./NoData-59ea70fa.js";import"./unCamelCase-798ff013.js";import"./sortBy-80c33bce.js";import"./_baseIsEqual-5c023aaf.js";import"./_baseFor-d254fa1e.js";import"./ElementWithTooltip-11254722.js";import"./Icon-8b498a06.js";import"./ThemeProvider-c7f6a893.js";import"./index-58d3fd43.js";import"./createWithBsPrefix-3758f106.js";import"./WideButton-46bc3ac6.js";import"./SelectionCriteriaPill-f2532b1d.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./UserCardList-55815b05.js";import"./queryUtils-67cc95b5.js";import"./cloneDeep-a8991a0a.js";import"./isNil-ae5725e0.js";import"./LastLoginInfo-6b60f5ae.js";import"./jsx-runtime_commonjs-proxy-0d22bf03.js";import"./isMuiElement-08f54e3c.js";import"./useTeamMembers-90f1bef0.js";import"./index.modern-2873e19a.js";import"./mapValues-b26bbf14.js";import"./isPlainObject-c2262b51.js";import"./now-9181443a.js";import"./RequestDownloadCard-1fb7cd09.js";import"./ActionRequiredCard-b890e58f.js";import"./factory-275e83af.js";import"./TextField-7d949b7a.js";import"./InputLabel-e8578cb2.js";import"./inputBaseClasses-f1eaf41c.js";import"./index-953d39fd.js";import"./MenuList-f2b66e01.js";import"./useAccessRequirements-b6882efb.js";import"./StandaloneLoginForm-06d9693b.js";import"./LoginFlowBackButton-4ec7b1b9.js";import"./TextField-e45eaf9d.js";import"./LoginMethodButton-c290e588.js";import"./DialogTitle-41c5a17f.js";import"./Grid-c86b3808.js";import"./useDataAccessSubmission-31e9f12d.js";import"./RadioGroup-eb876a69.js";import"./Form-b48723b2.js";import"./Col-9f9a4d0f.js";import"./FileUpload-ee46eac2.js";import"./Divider-a5888bbc.js";import"./dividerClasses-30b81617.js";import"./AuthenticatedRequirement-d576facf.js";import"./RequirementItem-24c0533f.js";import"./ConditionalWrapper-51b8d1ed.js";import"./CheckTwoTone-8ffb1a26.js";import"./CertificationRequirement-f7ef6dd3.js";import"./ValidationRequirement-8752a8e9.js";import"./TwoFactorAuthEnabledRequirement-10702f50.js";import"./TwoFactorEnrollmentForm-d41221af.js";import"./LeftRightPanel-6384c215.js";import"./Tabs-e906015a.js";import"./useGetQueryResultBundle-d49c9ebd.js";import"./merge-2a1d2ead.js";import"./QueryCount-4ab112ad.js";import"./SkeletonButton-1cc36769.js";import"./RangeSlider-e66fc33f.js";import"./react-sizeme-5bfc490a.js";import"./ColorGradient-3d3e1969.js";import"./colorPalette-c43701fe.js";import"./useDownloadList-f446c191.js";import"./SynapseVideo-2aa4de2c.js";import"./IconList-b0b20d02.js";import"./tiny-invariant-dd7d57d2.js";import"./mockProject-6b9e6c20.js";import"./mockWiki-f0247f65.js";import"./mock_file_handle-c119220f.js";import"./util-f846e4fa.js";import"./mockFileEntity-7a34149e.js";const Ki={title:"Governance/Data Access Request Flow/Requirements/SelfSignAccessRequirementItem",component:R,argTypes:{isAuthenticated:{control:{type:"boolean"},defaultValue:!0}},decorators:[(o,t)=>p(l,{children:r=>p(S,{synapseContext:{...r,accessToken:t.isAuthenticated?r.accessToken??"fake token":void 0},children:p(o,{})})})]},e={args:{accessRequirement:{...s,isCertifiedUserRequired:!0,isValidatedProfileRequired:!0}},parameters:{msw:{handlers:[...I(i),...C(i),O(i,!1,!1),n.rest.get(`${i}${A(":id")}`,async(o,t,r)=>{const m={accessRequirementId:o.params.id,concreteType:"org.sagebionetworks.repo.model.dataaccess.BasicAccessRequirementStatus",isApproved:!1};return t(r.status(200),r.json(m))}),n.rest.post(`${i}${f}`,async(o,t,r)=>{const m={requirementId:s.id,submitterId:a.toString(),accessorId:a.toString(),state:g.APPROVED};return t(r.status(201),r.json(m))})]}}};var c,d,u;e.parameters={...e.parameters,docs:{...(c=e.parameters)==null?void 0:c.docs,source:{originalSource:`{
  args: {
    accessRequirement: {
      ...mockSelfSignAccessRequirement,
      isCertifiedUserRequired: true,
      isValidatedProfileRequired: true
    }
  },
  parameters: {
    msw: {
      handlers: [
      // ...getHandlers(MOCK_REPO_ORIGIN),
      ...getAccessRequirementHandlers(MOCK_REPO_ORIGIN), ...getWikiHandlers(MOCK_REPO_ORIGIN), getCurrentUserCertifiedValidatedHandler(MOCK_REPO_ORIGIN, false, false), rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_STATUS(':id')}\`, async (req, res, ctx) => {
        const response: AccessRequirementStatus = {
          accessRequirementId: (req.params.id as string),
          concreteType: 'org.sagebionetworks.repo.model.dataaccess.BasicAccessRequirementStatus',
          isApproved: false
        };
        return res(ctx.status(200), ctx.json(response));
      }), rest.post(\`\${MOCK_REPO_ORIGIN}\${ACCESS_APPROVAL}\`, async (req, res, ctx) => {
        const response: AccessApproval = {
          requirementId: mockSelfSignAccessRequirement.id,
          submitterId: MOCK_USER_ID.toString(),
          accessorId: MOCK_USER_ID.toString(),
          state: ApprovalState.APPROVED
        };
        return res(ctx.status(201), ctx.json(response));
      })]
    }
  }
}`,...(u=(d=e.parameters)==null?void 0:d.docs)==null?void 0:u.source}}};const xi=["RequiresUnmetCertificationAndValidation"];export{e as RequiresUnmetCertificationAndValidation,xi as __namedExportsOrder,Ki as default};
//# sourceMappingURL=SelfSignAccessRequirementItem.stories-3570613e.js.map
