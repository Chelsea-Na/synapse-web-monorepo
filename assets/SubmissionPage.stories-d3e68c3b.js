import{l as m}from"./index-f782e584.js";import{D as s,A as I,c as _}from"./SynapseClient-736f4fd6.js";import{g as E,m as S,a as e}from"./wikiHandlers-573d505c.js";import{M as i}from"./getEndpoint-ac94413e.js";import{g as R}from"./tableQueryHandlers-6f7f927b.js";import{m as O}from"./mockRejectionReasonsTableQueryResultBundle-59be1fd8.js";import{S as g}from"./SubmissionPage-1940dc5c.js";import{g as C}from"./userProfileHandlers-23c847a4.js";import"./_commonjsHelpers-042e6b4d.js";import"./util-f846e4fa.js";import"./SynapseConstants-8e42f36e.js";import"./OrientationBanner-a86d831b.js";import"./jsx-runtime-095bf462.js";import"./index-8db94870.js";import"./FullWidthAlert-c9c51c59.js";import"./AlertTitle-af39c120.js";import"./styled-9c91c4fe.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-4abd396b.js";import"./createSvgIcon-fd8a55dc.js";import"./Paper-88da9df3.js";import"./IconButton-152addcf.js";import"./ButtonBase-7c3b1b89.js";import"./emotion-react.browser.esm-8f02f344.js";import"./assertThisInitialized-081f9914.js";import"./inheritsLoose-c82a83d4.js";import"./TransitionGroupContext-f2b81dde.js";import"./useForkRef-f2aa3d66.js";import"./useIsFocusVisible-bbf13f29.js";import"./Typography-d16533eb.js";import"./extendSxProp-e5d44a75.js";import"./Stack-c9edc483.js";import"./Box-49321e59.js";import"./useTheme-68d5aa8d.js";import"./Grow-adae5ed8.js";import"./isHostComponent-fa76b8d9.js";import"./index-8ce4a492.js";import"./utils-87fd7144.js";import"./ClickAwayListener-36b79525.js";import"./Tooltip-39e0afa2.js";import"./Button-c45f00b4.js";import"./Link-fc5d7a73.js";import"./_getTag-39555acc.js";import"./isArray-5e3f9107.js";import"./StringUtils-2ea3ab4d.js";import"./dayjs.min-59ef0ea6.js";import"./index-58d3fd43.js";import"./tiny-invariant-dd7d57d2.js";import"./CheckCircleTwoTone-784a445a.js";import"./inputBaseClasses-f05f2ac2.js";import"./Fade-26b5aaed.js";import"./mock_user_profile-0f418f65.js";import"./mockProject-c04efff7.js";import"./times-9cad1363.js";import"./_baseTimes-8715be3e.js";import"./identity-46f208ab.js";import"./isSymbol-7c514724.js";import"./mockWiki-e45a69ce.js";import"./mock_file_handle-5cb65068.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./cloneDeep-2774ded5.js";import"./_baseClone-daafcb33.js";import"./_Uint8Array-81ff25c8.js";import"./DateFormatter-9449c57c.js";import"./useDataAccessSubmission-b69e5bf4.js";import"./useMutation-135e06fb.js";import"./useInfiniteQuery-057dc2fd.js";import"./useAccessRequirements-f1509772.js";import"./sortBy-66c7c630.js";import"./hasIn-d5ffa125.js";import"./_getMatchData-c26eb7a1.js";import"./_cacheHas-432cce39.js";import"./_setToArray-3d6ec6fd.js";import"./_baseFor-d254fa1e.js";import"./_baseRest-2c0b1ec4.js";import"./_overRest-6b5900af.js";import"./_isIterateeCall-44d71915.js";import"./SynapseTableCell-46175dc9.js";import"./IconSvg-4a986b10.js";import"./ErrorOutlined-dd0fb706.js";import"./GetAppTwoTone-325427e5.js";import"./InfoOutlined-3b5cb253.js";import"./SynapseTableConstants-5f56c39f.js";import"./UserBadge-20d71811.js";import"./Popover-9afe50c5.js";import"./Modal-5d1d85a5.js";import"./Backdrop-7ef683b4.js";import"./getScrollbarSize-ac846fe6.js";import"./ownerWindow-2c76219e.js";import"./createChainedFunction-0bab83cf.js";import"./SkeletonTable-f13a2e9d.js";import"./Skeleton-2bd04c38.js";import"./ToastMessage-1ad52132.js";import"./hasClass-ec9efd32.js";import"./Avatar-281ced81.js";import"./EntityLink-3ea78e6b.js";import"./useEntity-dc1412b4.js";import"./pick-e68090dd.js";import"./_baseSlice-cf92e063.js";import"./isPlainObject-b0225e48.js";import"./useGetEntityHeaders-5df1086e.js";import"./EntityIcon-7d0ebdcb.js";import"./ErrorChip-a7540744.js";import"./index-95cfb7c2.js";import"./RegularExpressions-bc0adf55.js";import"./SqlFunctions-eaebc307.js";import"./UserSearchBoxV2-da70a882.js";import"./Select-ce3716e1.esm-2948b13e.js";import"./isNativeReflectConstruct-e378569d.js";import"./use-deep-compare-effect.esm-7a830988.js";import"./uniq-a197bf03.js";import"./without-7e76d1c1.js";import"./isArrayLikeObject-a31b0675.js";import"./UserOrTeamBadge-8ae0ccbf.js";import"./index-11f39476.js";import"./Icon-762f387a.js";import"./WideButton-5de1b154.js";import"./LoadingScreen-a23a06c8.js";import"./LinearProgress-f638b645.js";import"./useTeamMembers-51ee76f4.js";import"./ObservationCard-9f53ffb6.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./uniq-fe955338.js";import"./mapValues-dee13770.js";import"./isPlainObject-1dec192d.js";import"./now-beb31482.js";import"./ThemesPlot-c45d8bd1.js";import"./ElementWithTooltip-053d24d7.js";import"./Dropdown-7674e440.js";import"./ThemeProvider-c7f6a893.js";import"./createWithBsPrefix-d02901e3.js";import"./factory-275e83af.js";import"./merge-2642e70f.js";import"./isNil-53e0d334.js";import"./useGetQueryResultBundle-3f6dccc0.js";import"./NoSearchResults-460db635.js";import"./NoData-59ea70fa.js";import"./queryUtils-98db83cd.js";import"./LastLoginInfo-abca263a.js";import"./jsx-runtime_commonjs-proxy-c97ba25c.js";import"./isMuiElement-08f54e3c.js";import"./Dialog-b154ee51.js";import"./DialogTitle-0b7c1528.js";import"./TextField-612b027b.js";import"./InputLabel-b63da0ce.js";import"./Select-3485fe5f.js";import"./index-953d39fd.js";import"./MenuList-06d3cd4c.js";import"./tslib.es6-9c2726d7.js";import"./lodash-e374147d.js";import"./StandaloneLoginForm-34374fb2.js";import"./LoginFlowBackButton-2009f6e0.js";import"./TextField-5b357a12.js";import"./StyledFormControl-cc164a94.js";import"./LoginMethodButton-1aafcef6.js";import"./Grid-3201877c.js";import"./RadioGroup-b7f85712.js";import"./Form-93e8509c.js";import"./Col-80cc1e4a.js";import"./FileUpload-14097bc3.js";import"./Divider-c7474078.js";import"./dividerClasses-94cb8e7e.js";import"./AuthenticatedRequirement-ab18a96d.js";import"./RequirementItem-724a29d5.js";import"./ConditionalWrapper-51b8d1ed.js";import"./CheckTwoTone-8be00e66.js";import"./CertificationRequirement-7a54a1c3.js";import"./ValidationRequirement-8c12e7d9.js";import"./TwoFactorAuthEnabledRequirement-b99560ad.js";import"./TwoFactorEnrollmentForm-549d9145.js";import"./LeftRightPanel-908871dc.js";import"./ActionRequiredCard-7c7b9589.js";import"./RequestDownloadCard-7db25546.js";import"./Tabs-9b8cc802.js";import"./QueryCount-8dab2b9b.js";import"./SkeletonButton-53ae0bfd.js";import"./EnumFacetFilterUI-621a64e2.js";import"./RangeSlider-c06226d1.js";import"./react-sizeme-5bfc490a.js";import"./ColorGradient-3d3e1969.js";import"./colorPalette-c43701fe.js";import"./SelectionCriteriaPill-b681015a.js";import"./useDownloadList-78bd6de2.js";import"./UpsetPlot-c5981e51.js";import"./LargeButton-358c5a12.js";import"./SynapseVideo-1d35ca5e.js";import"./IconList-c3db519a.js";import"./UserCardList-fe3d0b66.js";import"./WarningDialog-0b3195ef.js";import"./RejectDataAccessRequestModal-527c8a08.js";import"./immutable.es-400ccb6d.js";import"./FormControlLabel-4d3908a7.js";import"./mockEntity-33c33dc1.js";import"./mockFileEntity-dec5fa6d.js";const ri={title:"Governance/SubmissionPage",component:g,parameters:{stack:"mock"}},p={name:"SubmissionPage",parameters:{msw:{handlers:[...C(i),...E(i),m.rest.get(`${i}${s(":id")}`,async(o,t,r)=>{const d=S.find(u=>o.params.id===u.id);return t(r.status(200),r.json(d))}),m.rest.get(`${i}${I(":id")}`,async(o,t,r)=>t(r.status(200),r.json(e))),m.rest.get(`${i}${_(":id")}`,async(o,t,r)=>t(r.status(200),r.json({wikiPageId:123,ownerObjectId:e.id,ownerObjectType:"ACCESS_REQUIREMENT"}))),m.rest.get(`${i}/repo/v1/accessRequirement/:id/acl`,async(o,t,r)=>t(r.status(200),r.json({id:o.id,creationDate:"2022-05-20T14:32:31.665Z",etag:"f4fbd4f2-751d-40dd-9421-1d2693231217",resourceAccess:[{principalId:3350396,accessType:["REVIEW_SUBMISSIONS"]}]}))),...R(O),m.rest.put(`${i}${s(":id")}`,async(o,t,r)=>t(r.status(201),r.json(await o.json())))]}},args:{submissionId:1}};var n,a,c;p.parameters={...p.parameters,docs:{...(n=p.parameters)==null?void 0:n.docs,source:{originalSource:`{
  name: 'SubmissionPage',
  parameters: {
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), ...getWikiHandlers(MOCK_REPO_ORIGIN),
      // Return submission based on ID
      rest.get(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        const submission = mockSubmissions.find(submission => req.params.id === submission.id);
        return res(ctx.status(200), ctx.json(submission));
      }),
      // Return a mocked access requirement
      rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json(mockManagedACTAccessRequirement));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_WIKI_PAGE_KEY(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          wikiPageId: 123,
          ownerObjectId: mockManagedACTAccessRequirement.id,
          ownerObjectType: 'ACCESS_REQUIREMENT'
        }));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}/repo/v1/accessRequirement/:id/acl\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          id: req.id,
          creationDate: '2022-05-20T14:32:31.665Z',
          etag: 'f4fbd4f2-751d-40dd-9421-1d2693231217',
          resourceAccess: [{
            principalId: 3350396,
            accessType: ['REVIEW_SUBMISSIONS']
          }]
        }));
      }), ...getHandlersForTableQuery(mockRejectionReasonsTableQueryResultBundle), rest.put(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(201), ctx.json(await req.json()));
      })]
    }
  },
  args: {
    submissionId: 1
  }
}`,...(c=(a=p.parameters)==null?void 0:a.docs)==null?void 0:c.source}}};const ti=["Demo"];export{p as Demo,ti as __namedExportsOrder,ri as default};
//# sourceMappingURL=SubmissionPage.stories-d3e68c3b.js.map
