import{a as E,F as S,j as s}from"./jsx-runtime-095bf462.js";import{l as m}from"./index-f7eb0112.js";import{b as R,cG as e,ab as O,ac as g}from"./SynapseClient-11177bbe.js";import{g as C,a as b}from"./MockSubmission-628ea882.js";import{m as n}from"./mockAccessRequirements-44372dc4.js";import{M as i}from"./getEndpoint-ac94413e.js";import{g as l,m as A}from"./mockRejectionReasonsTableQueryResultBundle-7cfc67f8.js";import{S as a}from"./SubmissionPage-6a88e1c3.js";import{a as M}from"./userProfileHandlers-64bae3e3.js";import"./index-8db94870.js";import"./_commonjsHelpers-042e6b4d.js";import"./util-441245ad.js";import"./SynapseConstants-1ebc8be6.js";import"./inheritsLoose-c82a83d4.js";import"./index-8ce4a492.js";import"./extends-98964cd2.js";import"./Link-255af83b.js";import"./objectWithoutPropertiesLoose-4f48578a.js";import"./styled-8ebe2b7d.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-29d231ba.js";import"./Typography-fa1f2f14.js";import"./extendSxProp-8b7baf65.js";import"./useIsFocusVisible-bbf13f29.js";import"./useForkRef-2674f3de.js";import"./Button-5637ed55.js";import"./utils-34c6eda8.js";import"./TransitionGroupContext-1e5fd21a.js";import"./useTheme-df5273c4.js";import"./createWithBsPrefix-0fdadc7a.js";import"./index-58d3fd43.js";import"./isArray-5e3f9107.js";import"./dayjs.min-8d4ef725.js";import"./hoist-non-react-statics.cjs-3f8ebaa8.js";import"./createSvgIcon-075f7759.js";import"./SvgIcon-147e032d.js";import"./CheckCircleTwoTone-64ad58ef.js";import"./inputBaseClasses-29b56ac5.js";import"./Fade-3d404265.js";import"./mockWiki-e685a465.js";import"./mock_user_profile-6d8f2f92.js";import"./mock_file_handle-98992568.js";import"./times-6fdec5ea.js";import"./_baseTimes-8cccc40f.js";import"./isSymbol-7c514724.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./cloneDeep-b921bf8e.js";import"./_baseClone-174525f0.js";import"./_Uint8Array-06cf9a3a.js";import"./_MapCache-5b045977.js";import"./_isIndex-af14b756.js";import"./DateFormatter-53d59e84.js";import"./useDataAccessSubmission-c233786b.js";import"./useMutation-876bc468.js";import"./useInfiniteQuery-93c155a3.js";import"./useAccessRequirements-95a65383.js";import"./sortBy-0ef20271.js";import"./hasIn-49823496.js";import"./_cacheHas-6a5c2919.js";import"./_setToArray-3d6ec6fd.js";import"./_baseFor-d254fa1e.js";import"./_baseRest-d28223b8.js";import"./_isIterateeCall-a17aab80.js";import"./ConfirmationDialog-10527c6f.js";import"./jsx-runtime_commonjs-proxy-450181a8.js";import"./createChainedFunction-0bab83cf.js";import"./ownerWindow-698471fc.js";import"./ownerDocument-613eb639.js";import"./isMuiElement-08f54e3c.js";import"./useEnhancedEffect-c45cae33.js";import"./useControlled-be22aa93.js";import"./useEventCallback-65e61675.js";import"./WideButton-ac8da820.js";import"./Button-67a253be.js";import"./ButtonBase-bf986186.js";import"./emotion-react.browser.esm-06bfa7ab.js";import"./assertThisInitialized-081f9914.js";import"./IsType-3db95b50.js";import"./LoadingScreen-37daef82.js";import"./LinearProgress-a1a1a756.js";import"./Backdrop-1a21de0b.js";import"./Box-bbfe1a31.js";import"./UserCard-50ca6bea.js";import"./SkeletonTable-c9b31eca.js";import"./Skeleton-b67e7704.js";import"./IconSvg-85b31dd6.js";import"./Tooltip-450b9b95.js";import"./Grow-493ac784.js";import"./isHostComponent-73d6e646.js";import"./ErrorOutlined-0f626467.js";import"./InfoOutlined-3ee3099a.js";import"./ToastMessage-1cb54aad.js";import"./FullWidthAlert-c7737941.js";import"./ClickAwayListener-73754b4f.js";import"./Paper-ca64eb44.js";import"./Alert-1946624e.js";import"./IconButton-99e0aa6b.js";import"./Stack-c93972f5.js";import"./AlertTitle-bb1c2b5c.js";import"./hasClass-ec9efd32.js";import"./Popover-2dfb81bf.js";import"./Modal-74456109.js";import"./getScrollbarSize-ac846fe6.js";import"./RegularExpressions-bc0adf55.js";import"./react-intersection-observer.modern-64b519d2.js";import"./EntityTypeUtils-b661b551.js";import"./EntityIcon-24e1b7cd.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./index.modern-3065d269.js";import"./mapValues-983fc0db.js";import"./isPlainObject-419b8fb9.js";import"./now-7dd5f6e5.js";import"./unCamelCase-189a2afa.js";import"./without-e20ddca7.js";import"./isArrayLikeObject-c2ea41e5.js";import"./pick-25aea34b.js";import"./_baseSlice-cf92e063.js";import"./uniq-f1e5d052.js";import"./RequestDownloadCard-1e1c3050.js";import"./ActionRequiredCard-17d46a84.js";import"./Icon-79adb8c3.js";import"./factory-837f2467.js";import"./SqlFunctions-e998ee98.js";import"./useEntity-e05e1dc0.js";import"./SynapseTableConstants-942d2b0b.js";import"./use-deep-compare-effect.esm-08e85271.js";import"./index-5d0cf067.js";import"./useDownloadList-7c8c8474.js";import"./useGetQueryResultBundle-34fbba27.js";import"./merge-df7bab09.js";import"./NoSearchResults-460db635.js";import"./NoData-59ea70fa.js";import"./index-953d39fd.js";import"./queryUtils-f1b90a0f.js";import"./UserSearchBoxV2-2730b431.js";import"./Select-457c486b.esm-e247e4c0.js";import"./isNativeReflectConstruct-e378569d.js";import"./UserOrTeamBadge-3c7c414e.js";import"./StandaloneLoginForm-349e27a4.js";import"./LoginFlowBackButton-886e83eb.js";import"./TextField-17ae1aac.js";import"./InputLabel-acd75826.js";import"./MenuList-cb760a10.js";import"./TextField-ecd1ece0.js";import"./DialogTitle-2d245e94.js";import"./ResearchProjectForm-e43e2928.js";import"./DataAccessRequestAccessorsFilesForm-8ca27255.js";import"./RadioGroup-bf0fed90.js";import"./Form-2769eaa7.js";import"./FormLabel-41edc2c9.js";import"./Col-8dbe8567.js";import"./FileUpload-3120f42e.js";import"./Divider-110b9a1e.js";import"./dividerClasses-017f8642.js";import"./AuthenticatedRequirement-c73b0c88.js";import"./RequirementItem-076593bd.js";import"./ConditionalWrapper-51b8d1ed.js";import"./Avatar-fd80ae14.js";import"./CertificationRequirement-59e7e294.js";import"./ValidationRequirement-dbde7e8d.js";import"./TwoFactorAuthEnabledRequirement-5176021a.js";import"./TwoFactorEnrollmentForm-350e69bb.js";import"./LeftRightPanel-22e13928.js";import"./Dialog-1f02f144.js";import"./ElementWithTooltip-e5c7139d.js";import"./Tabs-1452bb6b.js";import"./QueryCount-18eead7c.js";import"./RangeSlider-8c7ff3ec.js";import"./react-sizeme-0d7fb727.js";import"./ColorGradient-fc5a110b.js";import"./colorPalette-43310703.js";import"./SelectionCriteriaPill-75214e6a.js";import"./ErrorChip-eae4b1f1.js";import"./IconList-43fea8d9.js";import"./UserCardList-99a94a71.js";import"./EntityLink-75ae9093.js";import"./SynapseVideo-3d9e7567.js";import"./WarningDialog-f04fa925.js";import"./RejectDataAccessRequestModal-fcdb7d42.js";import"./immutable.es-400ccb6d.js";import"./FormControlLabel-df613bd9.js";import"./upperFirst-79e605a3.js";import"./toLower-271fcf43.js";import"./mockFileEntity-17769386.js";const Vo={title:"Governance/SubmissionPage",component:a,render:t=>E(S,{children:[s("p",{children:"First, use the StackChanger component to switch to the Mock Data stack"}),s(R,{children:s(a,{...t})})]})},p={name:"SubmissionPage",parameters:{msw:{handlers:[...M(i),...C(i),m.rest.get(`${i}${e(":id")}`,async(t,o,r)=>{const I=b.find(_=>t.params.id===_.id);return o(r.status(200),r.json(I))}),m.rest.get(`${i}${O(":id")}`,async(t,o,r)=>o(r.status(200),r.json(n))),m.rest.get(`${i}${g(":id")}`,async(t,o,r)=>o(r.status(200),r.json({wikiPageId:123,ownerObjectId:n.id,ownerObjectType:"ACCESS_REQUIREMENT"}))),m.rest.get(`${i}/repo/v1/accessRequirement/:id/acl`,async(t,o,r)=>o(r.status(200),r.json({id:t.id,creationDate:"2022-05-20T14:32:31.665Z",etag:"f4fbd4f2-751d-40dd-9421-1d2693231217",resourceAccess:[{principalId:3350396,accessType:["REVIEW_SUBMISSIONS"]}]}))),...l(A),m.rest.put(`${i}${e(":id")}`,async(t,o,r)=>o(r.status(201),r.json(await t.json())))]}},args:{submissionId:1}};var c,d,u;p.parameters={...p.parameters,docs:{...(c=p.parameters)==null?void 0:c.docs,source:{originalSource:`{
  name: 'SubmissionPage',
  parameters: {
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), ...getWikiHandlers(MOCK_REPO_ORIGIN),
      // Return submission based on ID
      rest.get(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        const submission = mockSubmissions.find(submission => req.params.id === submission.id);
        return res(ctx.status(200), ctx.json(submission));
      }),
      // Return a mocked access requirement
      rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json(mockManagedACTAccessRequirement));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_WIKI_PAGE_KEY(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          wikiPageId: 123,
          ownerObjectId: mockManagedACTAccessRequirement.id,
          ownerObjectType: 'ACCESS_REQUIREMENT'
        }));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}/repo/v1/accessRequirement/:id/acl\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          id: req.id,
          creationDate: '2022-05-20T14:32:31.665Z',
          etag: 'f4fbd4f2-751d-40dd-9421-1d2693231217',
          resourceAccess: [{
            principalId: 3350396,
            accessType: ['REVIEW_SUBMISSIONS']
          }]
        }));
      }), ...getHandlersForTableQuery(mockRejectionReasonsTableQueryResultBundle), rest.put(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(201), ctx.json(await req.json()));
      })]
    }
  },
  args: {
    submissionId: 1
  }
}`,...(u=(d=p.parameters)==null?void 0:d.docs)==null?void 0:u.source}}};const Zo=["Demo"];export{p as Demo,Zo as __namedExportsOrder,Vo as default};
//# sourceMappingURL=SubmissionPage.stories-59d708c1.js.map
