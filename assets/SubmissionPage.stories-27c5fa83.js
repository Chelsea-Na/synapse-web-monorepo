import{l as m}from"./index-011352a6.js";import{D as s,A as I,c as _}from"./SynapseClient-6ec481a7.js";import{g as E,m as S,a as e}from"./wikiHandlers-1da3cfc7.js";import{M as i}from"./getEndpoint-ac94413e.js";import{g as R}from"./tableQueryHandlers-1ed2bfb2.js";import{m as O}from"./mockRejectionReasonsTableQueryResultBundle-59be1fd8.js";import{S as g}from"./SubmissionPage-7b33d717.js";import{g as C}from"./userProfileHandlers-64f6ca7c.js";import"./_commonjsHelpers-042e6b4d.js";import"./util-f846e4fa.js";import"./SynapseConstants-ced6634e.js";import"./OrientationBanner-d057b0e6.js";import"./jsx-runtime-095bf462.js";import"./index-8db94870.js";import"./FullWidthAlert-7e419f2a.js";import"./AlertTitle-d92dfb78.js";import"./styled-96220216.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-4abd396b.js";import"./createSvgIcon-102248e7.js";import"./Paper-8ac7942c.js";import"./IconButton-1e0dd4f6.js";import"./ButtonBase-0195d275.js";import"./emotion-react.browser.esm-8516f11f.js";import"./assertThisInitialized-081f9914.js";import"./inheritsLoose-c82a83d4.js";import"./TransitionGroupContext-f2b81dde.js";import"./useForkRef-f2aa3d66.js";import"./useIsFocusVisible-bbf13f29.js";import"./Typography-c5b8eeae.js";import"./extendSxProp-d749f662.js";import"./Stack-f7ee2fdc.js";import"./Box-891dc3c7.js";import"./useTheme-a5fe342b.js";import"./Grow-15d1c4f6.js";import"./isHostComponent-fa76b8d9.js";import"./index-8ce4a492.js";import"./utils-60a28f01.js";import"./ClickAwayListener-36b79525.js";import"./Tooltip-e6a8fad5.js";import"./Button-d3d5b3a8.js";import"./Link-9ad54ce1.js";import"./isArray-5e3f9107.js";import"./StringUtils-2ea3ab4d.js";import"./dayjs.min-59ef0ea6.js";import"./index-58d3fd43.js";import"./tiny-invariant-dd7d57d2.js";import"./CheckCircleTwoTone-cd25e954.js";import"./inputBaseClasses-f1eaf41c.js";import"./Fade-5a6f6506.js";import"./mock_user_profile-2c9f01a0.js";import"./mockProject-5848ecd4.js";import"./times-27568bd1.js";import"./_baseTimes-8cccc40f.js";import"./isSymbol-7c514724.js";import"./mockWiki-a37cc708.js";import"./mock_file_handle-53686311.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./cloneDeep-6dc7f4c6.js";import"./_baseClone-0628781e.js";import"./_Uint8Array-18a4cc48.js";import"./DateFormatter-61c140b0.js";import"./useDataAccessSubmission-8408314e.js";import"./useMutation-eee083bb.js";import"./useInfiniteQuery-cef95954.js";import"./useAccessRequirements-3d7c05c1.js";import"./sortBy-7a4a2682.js";import"./hasIn-f20c0400.js";import"./_baseIsEqual-d2bd218b.js";import"./_cacheHas-1aabaf70.js";import"./_setToArray-3d6ec6fd.js";import"./_baseFor-d254fa1e.js";import"./_baseRest-f640f6d4.js";import"./_overRest-b08a937a.js";import"./_isIterateeCall-86591b15.js";import"./SynapseTableCell-e8056b34.js";import"./IconSvg-209cfc57.js";import"./ErrorOutlined-b4a8c67a.js";import"./GetAppTwoTone-9a0869d1.js";import"./InfoOutlined-1265fd90.js";import"./SynapseTableConstants-5f56c39f.js";import"./UserBadge-eabe3df1.js";import"./Popover-3ba117be.js";import"./Modal-3a262027.js";import"./Backdrop-1b2a4bbc.js";import"./getScrollbarSize-ac846fe6.js";import"./ownerWindow-2c76219e.js";import"./createChainedFunction-0bab83cf.js";import"./SkeletonTable-72041e2e.js";import"./Skeleton-a24326d8.js";import"./ToastMessage-cdf61efe.js";import"./hasClass-ec9efd32.js";import"./Avatar-15b73dbe.js";import"./EntityLink-adf04ae1.js";import"./useEntity-7c186824.js";import"./pick-a6398c22.js";import"./_baseSlice-cf92e063.js";import"./isPlainObject-995d17c7.js";import"./useGetEntityHeaders-65f301dd.js";import"./EntityIcon-8f1322be.js";import"./ErrorChip-c22b2c24.js";import"./index-95cfb7c2.js";import"./RegularExpressions-bc0adf55.js";import"./SqlFunctions-06f82f35.js";import"./UserSearchBoxV2-4c5a722b.js";import"./Select-ce3716e1.esm-8435c103.js";import"./isNativeReflectConstruct-e378569d.js";import"./use-deep-compare-effect.esm-7a830988.js";import"./uniq-b157d1f8.js";import"./without-31a6a8fb.js";import"./isArrayLikeObject-9918d392.js";import"./UserOrTeamBadge-68efbb12.js";import"./ElementWithTooltip-ba258e60.js";import"./Icon-e41e40a7.js";import"./ThemeProvider-c7f6a893.js";import"./createWithBsPrefix-3758f106.js";import"./WideButton-45d668d2.js";import"./LoadingScreen-5786dec8.js";import"./LinearProgress-ddf61131.js";import"./useTeamMembers-6ffc1767.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./uniq-fe955338.js";import"./mapValues-dee13770.js";import"./isPlainObject-1dec192d.js";import"./now-beb31482.js";import"./unCamelCase-d93f5802.js";import"./isNil-94d2b05a.js";import"./factory-275e83af.js";import"./NoSearchResults-460db635.js";import"./NoData-59ea70fa.js";import"./queryUtils-b39c4627.js";import"./LastLoginInfo-a17caead.js";import"./jsx-runtime_commonjs-proxy-0d22bf03.js";import"./isMuiElement-08f54e3c.js";import"./DialogTitle-41c5a17f.js";import"./useGetQueryResultBundle-b3aac95f.js";import"./merge-baca531e.js";import"./TextField-46d1fd36.js";import"./InputLabel-e8578cb2.js";import"./index-953d39fd.js";import"./MenuList-f2b66e01.js";import"./tslib.es6-9c2726d7.js";import"./lodash-e374147d.js";import"./StandaloneLoginForm-c38f460d.js";import"./LoginFlowBackButton-29a18a8c.js";import"./TextField-8554ccaa.js";import"./LoginMethodButton-52ea8787.js";import"./Grid-c86b3808.js";import"./RadioGroup-eb876a69.js";import"./Form-b48723b2.js";import"./Col-9f9a4d0f.js";import"./FileUpload-84a7fce2.js";import"./Divider-a5888bbc.js";import"./dividerClasses-30b81617.js";import"./AuthenticatedRequirement-2979e0f4.js";import"./RequirementItem-24c0533f.js";import"./ConditionalWrapper-51b8d1ed.js";import"./CheckTwoTone-8ffb1a26.js";import"./CertificationRequirement-2aadfe55.js";import"./ValidationRequirement-8969115a.js";import"./TwoFactorAuthEnabledRequirement-464f8452.js";import"./TwoFactorEnrollmentForm-ed425b21.js";import"./LeftRightPanel-6384c215.js";import"./ActionRequiredCard-78984851.js";import"./RequestDownloadCard-f914b2ae.js";import"./Tabs-e906015a.js";import"./QueryCount-647e2b57.js";import"./SkeletonButton-1cc36769.js";import"./RangeSlider-e66fc33f.js";import"./react-sizeme-5bfc490a.js";import"./ColorGradient-3d3e1969.js";import"./colorPalette-c43701fe.js";import"./SelectionCriteriaPill-0854545d.js";import"./useDownloadList-d37bf3e8.js";import"./SynapseVideo-eca5ae44.js";import"./IconList-ab4eed02.js";import"./UserCardList-0760d40a.js";import"./WarningDialog-86724359.js";import"./RejectDataAccessRequestModal-b7d2d480.js";import"./immutable.es-400ccb6d.js";import"./FormControlLabel-efd88e37.js";import"./toLower-271fcf43.js";import"./mockFileEntity-a12899b8.js";const Ho={title:"Governance/SubmissionPage",component:g,parameters:{stack:"mock"}},p={name:"SubmissionPage",parameters:{msw:{handlers:[...C(i),...E(i),m.rest.get(`${i}${s(":id")}`,async(o,t,r)=>{const d=S.find(u=>o.params.id===u.id);return t(r.status(200),r.json(d))}),m.rest.get(`${i}${I(":id")}`,async(o,t,r)=>t(r.status(200),r.json(e))),m.rest.get(`${i}${_(":id")}`,async(o,t,r)=>t(r.status(200),r.json({wikiPageId:123,ownerObjectId:e.id,ownerObjectType:"ACCESS_REQUIREMENT"}))),m.rest.get(`${i}/repo/v1/accessRequirement/:id/acl`,async(o,t,r)=>t(r.status(200),r.json({id:o.id,creationDate:"2022-05-20T14:32:31.665Z",etag:"f4fbd4f2-751d-40dd-9421-1d2693231217",resourceAccess:[{principalId:3350396,accessType:["REVIEW_SUBMISSIONS"]}]}))),...R(O),m.rest.put(`${i}${s(":id")}`,async(o,t,r)=>t(r.status(201),r.json(await o.json())))]}},args:{submissionId:1}};var n,a,c;p.parameters={...p.parameters,docs:{...(n=p.parameters)==null?void 0:n.docs,source:{originalSource:`{
  name: 'SubmissionPage',
  parameters: {
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), ...getWikiHandlers(MOCK_REPO_ORIGIN),
      // Return submission based on ID
      rest.get(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        const submission = mockSubmissions.find(submission => req.params.id === submission.id);
        return res(ctx.status(200), ctx.json(submission));
      }),
      // Return a mocked access requirement
      rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json(mockManagedACTAccessRequirement));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_WIKI_PAGE_KEY(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          wikiPageId: 123,
          ownerObjectId: mockManagedACTAccessRequirement.id,
          ownerObjectType: 'ACCESS_REQUIREMENT'
        }));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}/repo/v1/accessRequirement/:id/acl\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          id: req.id,
          creationDate: '2022-05-20T14:32:31.665Z',
          etag: 'f4fbd4f2-751d-40dd-9421-1d2693231217',
          resourceAccess: [{
            principalId: 3350396,
            accessType: ['REVIEW_SUBMISSIONS']
          }]
        }));
      }), ...getHandlersForTableQuery(mockRejectionReasonsTableQueryResultBundle), rest.put(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(201), ctx.json(await req.json()));
      })]
    }
  },
  args: {
    submissionId: 1
  }
}`,...(c=(a=p.parameters)==null?void 0:a.docs)==null?void 0:c.source}}};const Wo=["Demo"];export{p as Demo,Wo as __namedExportsOrder,Ho as default};
//# sourceMappingURL=SubmissionPage.stories-27c5fa83.js.map
