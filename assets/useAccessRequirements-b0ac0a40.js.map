{"version":3,"file":"useAccessRequirements-b0ac0a40.js","sources":["../../src/lib/utils/hooks/SynapseAPI/dataaccess/useAccessRequirements.ts"],"sourcesContent":["import {\n  UseInfiniteQueryOptions,\n  useInfiniteQuery,\n  useQuery,\n  UseQueryOptions,\n  useQueryClient,\n  useMutation,\n  UseMutationOptions,\n} from 'react-query'\nimport { SynapseClient } from '../../..'\nimport { SynapseClientError } from '../../../SynapseClientError'\nimport { useSynapseContext } from '../../../SynapseContext'\nimport {\n  AccessControlList,\n  AccessRequirement,\n  RestrictionInformationRequest,\n  RestrictionInformationResponse,\n  WikiPageKey,\n} from '../../../synapseTypes'\nimport {\n  AccessRequirementSearchRequest,\n  AccessRequirementSearchResponse,\n} from '../../../synapseTypes/AccessRequirement/AccessRequirementSearch'\nimport { entityQueryKeys } from '../entity/queryKeys'\n\nconst ACCESS_REQUIREMENT_QUERY_KEY = 'accessRequirement'\n\nexport function useGetAccessRequirements<T extends AccessRequirement>(\n  accessRequirementId: string | number,\n  options?: UseQueryOptions<T, SynapseClientError>,\n) {\n  const { accessToken } = useSynapseContext()\n\n  return useQuery<T, SynapseClientError>(\n    [ACCESS_REQUIREMENT_QUERY_KEY, accessRequirementId],\n    () =>\n      SynapseClient.getAccessRequirementById<T>(\n        accessToken,\n        accessRequirementId,\n      ),\n    options,\n  )\n}\n\nexport function useGetAccessRequirementWikiPageKey(\n  accessRequirementId: string,\n  options?: UseQueryOptions<WikiPageKey, SynapseClientError>,\n) {\n  const { accessToken } = useSynapseContext()\n  return useQuery<WikiPageKey, SynapseClientError>(\n    [ACCESS_REQUIREMENT_QUERY_KEY, accessRequirementId, 'wikiPageKey'],\n    () =>\n      SynapseClient.getWikiPageKeyForAccessRequirement(\n        accessToken,\n        accessRequirementId,\n      ),\n    options,\n  )\n}\n\nexport function useGetAccessRequirementACL(\n  accessRequirementId: string,\n  options?: UseQueryOptions<AccessControlList | null, SynapseClientError>,\n) {\n  const { accessToken } = useSynapseContext()\n  return useQuery<AccessControlList | null, SynapseClientError>(\n    [ACCESS_REQUIREMENT_QUERY_KEY, accessRequirementId, 'acl'],\n    () =>\n      SynapseClient.getAccessRequirementAcl(accessToken, accessRequirementId),\n    options,\n  )\n}\n\nexport function useSearchAccessRequirementsInfinite(\n  params: Omit<AccessRequirementSearchRequest, 'nextPageToken'>,\n  options?: UseInfiniteQueryOptions<\n    AccessRequirementSearchResponse,\n    SynapseClientError\n  >,\n) {\n  const { accessToken } = useSynapseContext()\n  return useInfiniteQuery<AccessRequirementSearchResponse, SynapseClientError>(\n    [ACCESS_REQUIREMENT_QUERY_KEY, 'search', params],\n    async context => {\n      return await SynapseClient.searchAccessRequirements(accessToken, {\n        ...params,\n        nextPageToken: context.pageParam,\n      })\n    },\n    {\n      ...options,\n      getNextPageParam: page => page.nextPageToken,\n    },\n  )\n}\n\nexport function useGetRestrictionInformation(\n  request: RestrictionInformationRequest,\n  options?: UseQueryOptions<RestrictionInformationResponse, SynapseClientError>,\n) {\n  const { accessToken } = useSynapseContext()\n  return useQuery<RestrictionInformationResponse, SynapseClientError>(\n    [ACCESS_REQUIREMENT_QUERY_KEY, 'restrictionInformation', request],\n    () => SynapseClient.getRestrictionInformation(request, accessToken),\n    options,\n  )\n}\n\nexport function useCreateLockAccessRequirement(\n  options?: UseMutationOptions<AccessRequirement, SynapseClientError, string>,\n) {\n  const { accessToken } = useSynapseContext()\n  const queryClient = useQueryClient()\n  return useMutation<AccessRequirement, SynapseClientError, string>({\n    ...options,\n    mutationFn: (entityId: string) =>\n      SynapseClient.createLockAccessRequirement(entityId, accessToken),\n    mutationKey: ['createLockAccessRequirement'],\n    onSuccess: async (data, variables, ctx) => {\n      // Invalidate all access requirement queries\n      await queryClient.invalidateQueries([ACCESS_REQUIREMENT_QUERY_KEY])\n      // Invalidate all entity queries (not just the current entity because the new AR may apply to this entity's children)\n      await queryClient.invalidateQueries(entityQueryKeys.all)\n      if (options?.onSuccess) {\n        return options.onSuccess(data, variables, ctx)\n      }\n    },\n  })\n}\n"],"names":["ACCESS_REQUIREMENT_QUERY_KEY","useGetAccessRequirements","accessRequirementId","options","accessToken","useSynapseContext","useQuery","SynapseClient.getAccessRequirementById","useGetAccessRequirementWikiPageKey","SynapseClient.getWikiPageKeyForAccessRequirement","useGetAccessRequirementACL","SynapseClient.getAccessRequirementAcl","useSearchAccessRequirementsInfinite","params","useInfiniteQuery","context","SynapseClient.searchAccessRequirements","page","useGetRestrictionInformation","request","SynapseClient.getRestrictionInformation","useCreateLockAccessRequirement","queryClient","useQueryClient","useMutation","entityId","SynapseClient.createLockAccessRequirement","data","variables","ctx","entityQueryKeys"],"mappings":"sPAyBA,MAAMA,EAA+B,oBAErB,SAAAC,EACdC,EACAC,EACA,CACM,KAAA,CAAE,YAAAC,GAAgBC,IAEjB,OAAAC,EACL,CAACN,EAA8BE,CAAmB,EAClD,IACEK,EACEH,EACAF,CACF,EACFC,CAAA,CAEJ,CAEgB,SAAAK,EACdN,EACAC,EACA,CACM,KAAA,CAAE,YAAAC,GAAgBC,IACjB,OAAAC,EACL,CAACN,EAA8BE,EAAqB,aAAa,EACjE,IACEO,EACEL,EACAF,CACF,EACFC,CAAA,CAEJ,CAEgB,SAAAO,EACdR,EACAC,EACA,CACM,KAAA,CAAE,YAAAC,GAAgBC,IACjB,OAAAC,EACL,CAACN,EAA8BE,EAAqB,KAAK,EACzD,IACES,EAAsCP,EAAaF,CAAmB,EACxEC,CAAA,CAEJ,CAEgB,SAAAS,EACdC,EACAV,EAIA,CACM,KAAA,CAAE,YAAAC,GAAgBC,IACjB,OAAAS,EACL,CAACd,EAA8B,SAAUa,CAAM,EAC/C,MAAME,GACG,MAAMC,EAAuCZ,EAAa,CAC/D,GAAGS,EACH,cAAeE,EAAQ,SAAA,CACxB,EAEH,CACE,GAAGZ,EACH,oBAA0Bc,EAAK,aACjC,CAAA,CAEJ,CAEgB,SAAAC,EACdC,EACAhB,EACA,CACM,KAAA,CAAE,YAAAC,GAAgBC,IACjB,OAAAC,EACL,CAACN,EAA8B,yBAA0BmB,CAAO,EAChE,IAAMC,EAAwCD,EAASf,CAAW,EAClED,CAAA,CAEJ,CAEO,SAASkB,EACdlB,EACA,CACM,KAAA,CAAE,YAAAC,GAAgBC,IAClBiB,EAAcC,IACpB,OAAOC,EAA2D,CAChE,GAAGrB,EACH,WAAasB,GACXC,EAA0CD,EAAUrB,CAAW,EACjE,YAAa,CAAC,6BAA6B,EAC3C,UAAW,MAAOuB,EAAMC,EAAWC,IAAQ,CAKzC,GAHA,MAAMP,EAAY,kBAAkB,CAACtB,CAA4B,CAAC,EAE5D,MAAAsB,EAAY,kBAAkBQ,EAAgB,GAAG,EACnD3B,GAAA,MAAAA,EAAS,UACX,OAAOA,EAAQ,UAAUwB,EAAMC,EAAWC,CAAG,CAEjD,CAAA,CACD,CACH"}