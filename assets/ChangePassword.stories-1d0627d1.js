import{j as o,a}from"./jsx-runtime-095bf462.js";import{r as t}from"./index-8db94870.js";import{d as n}from"./ToastMessage-c140bf59.js";import{u as x,f as b,h as F}from"./EntityTypeUtils-5f3d9964.js";import"./getEndpoint-ac94413e.js";import{F as d}from"./FormGroup-a255fd2e.js";import{F as c,a as l}from"./FormLabel-7b55e02a.js";import{B as I}from"./Button-5637ed55.js";import"./_commonjsHelpers-042e6b4d.js";import"./FullWidthAlert-1ef6b5f9.js";import"./Alert-86c69e9b.js";import"./extends-98964cd2.js";import"./objectWithoutPropertiesLoose-4f48578a.js";import"./hook-f132a7c0.js";import"./createWithBsPrefix-57e9f06a.js";import"./divWithClassName-ef75a7d1.js";import"./inheritsLoose-d541526f.js";import"./setPrototypeOf-0bb37fbe.js";import"./index-8ce4a492.js";import"./index-58d3fd43.js";import"./Typography-0933b2f6.js";import"./styled-f64e11ba.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-29d231ba.js";import"./extendSxProp-29a14132.js";import"./Clear-5ef00073.js";import"./useTheme-14d0ce71.js";import"./isHostComponent-fa76b8d9.js";import"./useForkRef-f2aa3d66.js";import"./TransitionGroupContext-0df7f063.js";import"./SvgIcon-4c933a0b.js";import"./assertThisInitialized-081f9914.js";import"./removeClass-164fd327.js";import"./hasClass-ec9efd32.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./isArray-5e3f9107.js";import"./isSymbol-7c514724.js";import"./SynapseConstants-06779f3a.js";import"./IconSvg-3a259b5a.js";import"./Box-13f1aabd.js";import"./Button-2d0b741e.js";import"./ButtonBase-a9ffb9ec.js";import"./emotion-react.browser.esm-4b1ddfee.js";import"./Col-8dbe8567.js";const w=()=>{const{accessToken:s}=x(),[u,_]=t.useState(""),[m,v]=t.useState(""),[h,S]=t.useState(""),[p,g]=t.useState();t.useEffect(()=>{async function r(){const e=await b(s);g(e)}s?r():g(void 0)},[s]);const P=async r=>{r.preventDefault();try{if(m!==h)n("New password and confirm password does not match.","danger");else if(s){const e={newPassword:m,concreteType:"org.sagebionetworks.repo.model.auth.ChangePasswordWithCurrentPassword",username:p==null?void 0:p.userName,currentPassword:u};await F(e,s).then(()=>n("Successfully changed","success")).catch(N=>n(N.reason,"danger"))}}catch(e){n(e.reason,"danger")}};return o("div",{className:"changePassword",children:a("form",{onSubmit:r=>{P(r)},children:[a(d,{controlId:"oldPassword",children:[o(c,{children:"Current Password"}),o(l,{type:"password",onChange:r=>_(r.target.value),value:u})]}),a(d,{controlId:"newPassword",children:[o(c,{children:"New Password"}),o(l,{type:"password",onChange:r=>v(r.target.value),value:m})]}),a(d,{controlId:"confirmPassword",children:[o(c,{children:"Confirm Password"}),o(l,{type:"password",onChange:r=>S(r.target.value),value:h})]}),o(I,{type:"submit",onSubmit:r=>{P(r)},children:"Change Password"})]})})};try{w.displayName="ChangePassword",w.__docgenInfo={description:"",displayName:"ChangePassword",props:{}}}catch{}const Cr={title:"Authentication/ChangePassword",component:w},i={};var f,C,y;i.parameters={...i.parameters,docs:{...(f=i.parameters)==null?void 0:f.docs,source:{originalSource:"{}",...(y=(C=i.parameters)==null?void 0:C.docs)==null?void 0:y.source}}};const yr=["ChangePasswordDemo"];export{i as ChangePasswordDemo,yr as __namedExportsOrder,Cr as default};
//# sourceMappingURL=ChangePassword.stories-1d0627d1.js.map
