{"version":3,"file":"useDataAccessSubmission-917a6e8f.js","sources":["../../src/lib/utils/hooks/SynapseAPI/dataaccess/useDataAccessSubmission.ts"],"sourcesContent":["import {\n  useInfiniteQuery,\n  UseInfiniteQueryOptions,\n  useMutation,\n  UseMutationOptions,\n  useQuery,\n  useQueryClient,\n  UseQueryOptions,\n} from 'react-query'\nimport { SynapseClient } from '../../..'\nimport { SynapseClientError } from '../../../SynapseClientError'\nimport { useSynapseContext } from '../../../SynapseContext'\nimport { Submission } from '../../../synapseTypes/AccessRequirement/Submission'\nimport { SubmissionStateChangeRequest } from '../../../synapseTypes/AccessRequirement/SubmissionStateChangeRequest'\nimport {\n  SubmissionSearchRequest,\n  SubmissionSearchResponse,\n} from '../../../synapseTypes/AccessSubmission'\n\nconst dataAccessSubmissionQueryKeys = {\n  submission: (id: string | number) => ['dataAccessSubmission', id],\n  search: (params?: SubmissionSearchRequest) =>\n    params ? ['accessSubmissionSearch', params] : ['accessSubmissionSearch'],\n}\n\nexport default function useGetDataAccessSubmission(\n  submissionId: string | number,\n  options?: UseQueryOptions<Submission, SynapseClientError>,\n) {\n  const { accessToken } = useSynapseContext()\n\n  return useQuery<Submission, SynapseClientError>(\n    dataAccessSubmissionQueryKeys.submission(submissionId),\n    () => SynapseClient.getSubmissionById(submissionId, accessToken),\n    options,\n  )\n}\n\nexport function useSearchAccessSubmissionsInfinite(\n  params: SubmissionSearchRequest,\n  options?: UseInfiniteQueryOptions<\n    SubmissionSearchResponse,\n    SynapseClientError\n  >,\n) {\n  const { accessToken } = useSynapseContext()\n\n  return useInfiniteQuery<SubmissionSearchResponse, SynapseClientError>(\n    dataAccessSubmissionQueryKeys.search(params),\n    async context => {\n      return await SynapseClient.searchAccessSubmission(\n        {\n          ...params,\n          nextPageToken: context.pageParam,\n        },\n        accessToken,\n      )\n    },\n    {\n      ...options,\n      getNextPageParam: page => page.nextPageToken,\n    },\n  )\n}\n\nexport function useUpdateDataAccessSubmissionState(\n  options?: UseMutationOptions<\n    Submission,\n    SynapseClientError,\n    SubmissionStateChangeRequest\n  >,\n) {\n  const queryClient = useQueryClient()\n  const { accessToken } = useSynapseContext()\n\n  return useMutation<\n    Submission,\n    SynapseClientError,\n    SubmissionStateChangeRequest\n  >(\n    (request: SubmissionStateChangeRequest): Promise<Submission> =>\n      SynapseClient.updateSubmissionStatus(request, accessToken),\n    {\n      ...options,\n      onSuccess: async (updatedSubmission, variables, ctx) => {\n        // Invalidate all searches, since updating the status will affect filtered search results\n        queryClient.invalidateQueries(dataAccessSubmissionQueryKeys.search())\n        // Update the query data for the updated submission\n        queryClient.setQueryData(\n          dataAccessSubmissionQueryKeys.submission(variables.submissionId),\n          updatedSubmission,\n        )\n\n        if (options?.onSuccess) {\n          await options.onSuccess(updatedSubmission, variables, ctx)\n        }\n      },\n    },\n  )\n}\n"],"names":["dataAccessSubmissionQueryKeys","id","params","useGetDataAccessSubmission","submissionId","options","accessToken","useSynapseContext","useQuery","SynapseClient.getSubmissionById","useSearchAccessSubmissionsInfinite","useInfiniteQuery","context","SynapseClient.searchAccessSubmission","page","useUpdateDataAccessSubmissionState","queryClient","useQueryClient","useMutation","request","SynapseClient.updateSubmissionStatus","updatedSubmission","variables","ctx"],"mappings":"2LAmBA,MAAMA,EAAgC,CACpC,WAAaC,GAAwB,CAAC,uBAAwBA,CAAE,EAChE,OAASC,GACPA,EAAS,CAAC,yBAA0BA,CAAM,EAAI,CAAC,wBAAwB,CAC3E,EAEwB,SAAAC,EACtBC,EACAC,EACA,CACM,KAAA,CAAE,YAAAC,GAAgBC,IAEjB,OAAAC,EACLR,EAA8B,WAAWI,CAAY,EACrD,IAAMK,EAAgCL,EAAcE,CAAW,EAC/DD,CAAA,CAEJ,CAEgB,SAAAK,EACdR,EACAG,EAIA,CACM,KAAA,CAAE,YAAAC,GAAgBC,IAEjB,OAAAI,EACLX,EAA8B,OAAOE,CAAM,EAC3C,MAAMU,GACG,MAAMC,EACX,CACE,GAAGX,EACH,cAAeU,EAAQ,SACzB,EACAN,CAAA,EAGJ,CACE,GAAGD,EACH,oBAA0BS,EAAK,aACjC,CAAA,CAEJ,CAEO,SAASC,EACdV,EAKA,CACA,MAAMW,EAAcC,IACd,CAAE,YAAAX,GAAgBC,IAEjB,OAAAW,EAKJC,GACCC,EAAqCD,EAASb,CAAW,EAC3D,CACE,GAAGD,EACH,UAAW,MAAOgB,EAAmBC,EAAWC,IAAQ,CAE1CP,EAAA,kBAAkBhB,EAA8B,OAAQ,CAAA,EAExDgB,EAAA,aACVhB,EAA8B,WAAWsB,EAAU,YAAY,EAC/DD,CAAA,EAGEhB,GAAA,MAAAA,EAAS,WACX,MAAMA,EAAQ,UAAUgB,EAAmBC,EAAWC,CAAG,CAE7D,CACF,CAAA,CAEJ"}