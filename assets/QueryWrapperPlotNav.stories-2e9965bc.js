import{j as R}from"./jsx-runtime-670450c2.js";import{Q as w}from"./AccessRequirementList-4c055ada.js";import{G as F,W as P,t as v}from"./SynapseConstants-f1d07af3.js";import"./index-f1f749bf.js";import"./_commonjsHelpers-042e6b4d.js";import"./index-22b033bd.js";import"./index-96c5f47c.js";import"./extends-98964cd2.js";import"./inheritsLoose-d541526f.js";import"./setPrototypeOf-0bb37fbe.js";import"./Button-7d415009.js";import"./objectWithoutPropertiesLoose-4f48578a.js";import"./styled-9ea72d20.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-eaaa54fe.js";import"./Tooltip-e2a21fb8.js";import"./SvgIcon-d8836e03.js";import"./useTheme-a927bea5.js";import"./TransitionGroupContext-ab7f4b4e.js";import"./useIsFocusVisible-c754a498.js";import"./FullWidthAlert-10bb9b65.js";import"./hook-c05d8d9f.js";import"./createWithBsPrefix-e09f51dd.js";import"./divWithClassName-ace3d0f1.js";import"./index-4d501b15.js";import"./Typography-70326f55.js";import"./Fade-2c9937b4.js";import"./isArray-a82322d9.js";import"./getEndpoint-5374ab4d.js";import"./IconSvg-cf287ff5.js";import"./IconButton-7162f347.js";import"./ButtonBase-99361597.js";import"./emotion-react.browser.esm-c209b88a.js";import"./assertThisInitialized-081f9914.js";import"./Link-ce18840d.js";import"./Button-445c67f6.js";import"./useGetInfoFromIds-dcffbe88.js";import"./use-deep-compare-effect.esm-2b920fea.js";import"./index-5d0cf067.js";import"./uniq-c4bbff76.js";import"./_baseSlice-cf92e063.js";import"./toInteger-63904031.js";import"./isSymbol-b6149709.js";import"./_cacheHas-b64d8be3.js";import"./without-cccb87d0.js";import"./toString-3056297c.js";import"./_Set-753bc494.js";import"./_setToArray-3d6ec6fd.js";import"./queryKeys-dd803d9a.js";import"./LoadingScreen-df094095.js";import"./Modal-346748ce.js";import"./contains-60f9209b.js";import"./useWillUnmount-7fb15b8a.js";import"./usePrevious-9f30f8c7.js";import"./removeClass-164fd327.js";import"./hasClass-ec9efd32.js";import"./useWaitForDOMRef-54076dc2.js";import"./UserCard-082ed245.js";import"./IconCopy-9a72c17a.js";import"./SkeletonTable-64b9e293.js";import"./times-83d022c2.js";import"./Skeleton-4064b2ac.js";import"./ToastMessage-8fc96da8.js";import"./uniqueId-9feaf103.js";import"./Overlay-529574f8.js";import"./usePopperMarginModifiers-363ddb1c.js";import"./RegularExpressions-efc8426f.js";import"./react-intersection-observer.esm-8bf16175.js";import"./useInfiniteQuery-074e39ad.js";import"./DateFormatter-96445055.js";import"./dayjs.min-c95aebbe.js";import"./utc-8a3e1a17.js";import"./EntityIcon-92bdf0f2.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./uniq-04f137ae.js";import"./_equalByTag-b9a89bb4.js";import"./_baseToString-34430836.js";import"./_baseUniq-4dd7dacf.js";import"./hasIn-78e1b520.js";import"./_baseIteratee-3a86f617.js";import"./index.browser-57d5884d.js";import"./core.esm-d87f1824.js";import"./pick-4c53dbec.js";import"./_baseClone-5e2eff8d.js";import"./isEmpty-4d48418d.js";import"./isEqual-48008927.js";import"./isPlainObject-6c541f89.js";import"./union-7efaecba.js";import"./CustomSelectWidget-9b977eff.js";import"./_basePickBy-d5b95ae3.js";import"./Select-40119e12.esm-76c72f02.js";import"./toConsumableArray-85fcc1b5.js";import"./getPrototypeOf-e4242ba0.js";import"./isNativeReflectConstruct-ff095bc2.js";import"./isString-ef2c1639.js";import"./now-c6b4f1a9.js";import"./mapValues-79b7ee06.js";import"./factory-76e91d33.js";import"./sqlFunctions-3ed2e1cb.js";import"./QueryFilter-ce6a3c9d.js";import"./useEntity-c2fb5023.js";import"./useMutation-37c862b5.js";import"./SynapseTableConstants-942d2b0b.js";import"./FacetNav-66cd75c5.js";import"./queryUtils-1f57ee00.js";import"./cloneDeep-9b395b5a.js";import"./NoSearchResults-597d4337.js";import"./NoData-0f1b3dd6.js";import"./unCamelCase-ec1c2b3d.js";import"./ColumnType-3c5058f3.js";import"./useGetQueryResultBundle-3955413f.js";import"./ElementWithTooltip-09590239.js";import"./Dropdown-83007dcc.js";import"./isRequiredForA11y-0a29da5f.js";import"./Checkbox-44f336ac.js";import"./RadioGroup-21807f37.js";import"./RangeSlider-48927c23.js";import"./react-sizeme-2217af01.js";import"./ColorGradient-fc5a110b.js";import"./colorPalette-43310703.js";import"./SelectionCriteriaPill-95d75964.js";import"./Close-58560370.js";import"./relativeTime-93b00284.js";import"./useDownloadList-7aceb126.js";import"./QueryCount-10cb8ce8.js";import"./react-select.esm-fb33f5c9.js";import"./IconList-984dd3dc.js";import"./UserCardList-881fa594.js";import"./useAccessRequirements-c16c500f.js";import"./RestrictionInformation-4ed2591e.js";import"./ManagedACTAccessRequirementStatus-9671fe8d.js";import"./FileUpload-88c0cbe2.js";import"./UserSearchBox-0227c93d.js";import"./UserOrTeamBadge-21267b7b.js";import"./EntityLink-6479a69c.js";import"./ErrorChip-028f0529.js";import"./SynapseVideo-ff89b5c8.js";const ne={title:"Explore/QueryWrapperPlotNav",component:w,argTypes:{}},e=M=>R(w,{...M}),t=e.bind({});t.args={name:"Tools",sql:"SELECT * FROM syn26438037",limit:5,defaultShowFacetVisualization:!1,defaultShowSearchBox:!0,shouldDeepLink:!0,searchConfiguration:{fullTextSearchHelpURL:"https://help.nf.synapse.org/NFdocs/Tips-for-Search.2640478225.html"},cardConfiguration:{type:F,titleLinkConfig:{isMarkdown:!1,baseURL:"Explore/Tools/DetailsPage",URLColumnName:"resourceId",matchColumnName:"resourceId",overrideLinkURLColumnName:"biobankURL"},secondaryLabelLimit:4,genericCardSchema:{type:P,title:"resourceName",subTitle:"resourceType",description:"description",secondaryLabels:["rrid","synonyms","cellLineCategory","cellLineDisease","modelofManifestation","backgroundStrain","backgroundSubstrain","animalModelDisease","animalModelOfManifestation","targetAntigen","reactiveSpecies","hostOrganism","specimenTissueType","specimenPreparationMethod","diseaseType","tumorType","specimenFormat","specimenType"]},labelLinkConfig:[{isMarkdown:!0,matchColumnName:"rrid",tooltipText:"This is to demo a custom tooltip that describes column data"}]}};const r=e.bind({});r.args={tableConfiguration:{showAccessColumn:!0,showDownloadColumn:!0,columnLinks:[{matchColumnName:"study",isMarkdown:!1,baseURL:"Explore/Studies/DetailsPage",URLColumnName:"Study_Name",wrapValueWithParens:!0},{matchColumnName:"name",isMarkdown:!1,baseURL:"Explore/Files/DetailsPage",URLColumnName:"FileId",overrideValueWithRowID:!0,wrapValueWithParens:!1}]},searchConfiguration:{searchable:["study","dataType","assay","organ","tissue","species","diagnosis","sex","consortium","grant","modelSystemName","treatmentType","specimenID","individualID","individualIdSource","specimenIdSource","resourceType","dataSubtype","metadataType","assayTarget","analysisType","cellType","nucleicAcidSource","fileFormat","group","name","isModelSystem","isConsortiumAnalysis","isMultiSpecimen","metaboliteType","chromosome"]},shouldDeepLink:!0,visibleColumnCount:10,rgbIndex:1,name:"Data",sqlOperator:"=",sql:"SELECT * FROM syn11346063.28",hideSqlEditorControl:!1};const O={sql:"SELECT * FROM syn11346063.28",additionalFilters:[{concreteType:"org.sagebionetworks.repo.model.table.ColumnMultiValueFunctionQueryFilter",columnName:"study",function:"HAS_LIKE",values:["ADMC_ADNI_BakerLipidomics"]}]},o=e.bind({});o.args={...r.args,shouldDeepLink:!1,initQueryJson:JSON.stringify(O),lockedColumn:{columnName:"study",value:""}};const i=e.bind({});i.args={sql:"SELECT * FROM syn26302617",tableConfiguration:{showAccessColumn:!0,showDownloadColumn:!0},name:"Dataset Demo",sqlOperator:"=",hideSqlEditorControl:!1,shouldDeepLink:!1};const a=e.bind({});a.args={sql:"SELECT * FROM syn33199585",tableConfiguration:{showAccessColumn:!0,showDownloadColumn:!0},name:"Dataset Collection Demo",sqlOperator:"=",hideSqlEditorControl:!1,shouldDeepLink:!1};const s=e.bind({});s.args={sql:"SELECT * FROM syn13897207",name:"People Demo",sqlOperator:"=",hideSqlEditorControl:!1,shouldDeepLink:!1,cardConfiguration:{type:v}};var m,p,n;t.parameters={...t.parameters,docs:{...(m=t.parameters)==null?void 0:m.docs,source:{originalSource:"args => <QueryWrapperPlotNav {...args} />",...(n=(p=t.parameters)==null?void 0:p.docs)==null?void 0:n.source}}};var l,u,c;r.parameters={...r.parameters,docs:{...(l=r.parameters)==null?void 0:l.docs,source:{originalSource:"args => <QueryWrapperPlotNav {...args} />",...(c=(u=r.parameters)==null?void 0:u.docs)==null?void 0:c.source}}};var d,g,y,h,C;o.parameters={...o.parameters,docs:{...(d=o.parameters)==null?void 0:d.docs,source:{originalSource:"args => <QueryWrapperPlotNav {...args} />",...(y=(g=o.parameters)==null?void 0:g.docs)==null?void 0:y.source},description:{story:`This demo contains a filter on a locked column. This type of configuration should hide that the filter on the locked
column is applied, making it seem as if the total contents of the table are just the filtered results. Common in
DetailsPages in portals.`,...(C=(h=o.parameters)==null?void 0:h.docs)==null?void 0:C.description}}};var f,S,L;i.parameters={...i.parameters,docs:{...(f=i.parameters)==null?void 0:f.docs,source:{originalSource:"args => <QueryWrapperPlotNav {...args} />",...(L=(S=i.parameters)==null?void 0:S.docs)==null?void 0:L.source}}};var T,D,b;a.parameters={...a.parameters,docs:{...(T=a.parameters)==null?void 0:T.docs,source:{originalSource:"args => <QueryWrapperPlotNav {...args} />",...(b=(D=a.parameters)==null?void 0:D.docs)==null?void 0:b.source}}};var E,N,k;s.parameters={...s.parameters,docs:{...(E=s.parameters)==null?void 0:E.docs,source:{originalSource:"args => <QueryWrapperPlotNav {...args} />",...(k=(N=s.parameters)==null?void 0:N.docs)==null?void 0:k.source}}};const le=["Cards","FileView","FileViewWithLockedColumn","Dataset","DatasetCollection","People"];export{t as Cards,i as Dataset,a as DatasetCollection,r as FileView,o as FileViewWithLockedColumn,s as People,le as __namedExportsOrder,ne as default};
//# sourceMappingURL=QueryWrapperPlotNav.stories-2e9965bc.js.map
