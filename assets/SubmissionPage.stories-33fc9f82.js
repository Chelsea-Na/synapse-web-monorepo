import{l as m}from"./index-7770fa92.js";import{U as e,d as I,e as _}from"./ApplicationSessionManager-2e1d5529.js";import{g as E,j as S,m as s}from"./MockSubmission-e71f210c.js";import{M as i}from"./getEndpoint-ac94413e.js";import{g as R}from"./tableQueryHandlers-b99ef8c0.js";import{m as O}from"./mockRejectionReasonsTableQueryResultBundle-59be1fd8.js";import{S as g}from"./SubmissionPage-7f362c0c.js";import{a as C}from"./userProfileHandlers-5cbfa2e1.js";import"./_commonjsHelpers-de833af9.js";import"./util-1969ce74.js";import"./index-17a77bb8.js";import"./jsx-runtime-9dc53467.js";import"./index-76fb7be0.js";import"./SynapseConstants-0078d114.js";import"./OrientationBanner-450e6652.js";import"./FullWidthAlert-149d754f.js";import"./Alert-fd45ce28.js";import"./createTheme-d609db80.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-55b21f7f.js";import"./styled-bb145c31.js";import"./createSvgIcon-b657d91b.js";import"./Paper-35c12a01.js";import"./IconButton-9b53499e.js";import"./ButtonBase-0719e676.js";import"./emotion-react.browser.esm-ca9fe929.js";import"./TransitionGroupContext-e6fd87c7.js";import"./useForkRef-8feb2ebf.js";import"./assertThisInitialized-081f9914.js";import"./inheritsLoose-c82a83d4.js";import"./useIsFocusVisible-18cd238e.js";import"./Stack-9fb6382b.js";import"./extendSxProp-7fb4e09f.js";import"./Box-f6adec47.js";import"./AlertTitle-9139c2ff.js";import"./Typography-f217f607.js";import"./useTheme-a28bb397.js";import"./Grow-2f9de6a4.js";import"./isHostComponent-fa76b8d9.js";import"./index-d3ea75b5.js";import"./utils-19a63403.js";import"./ClickAwayListener-3b20c94f.js";import"./Tooltip-248f4fe4.js";import"./Button-065a21d4.js";import"./tinycolor-ea5bcbb6.js";import"./InfoTwoTone-aaf78040.js";import"./CheckCircleTwoTone-6570b572.js";import"./inputBaseClasses-8d4a6788.js";import"./Fade-05777e49.js";import"./Link-5cdd275a.js";import"./_getTag-b87d0382.js";import"./_Map-92f6da1c.js";import"./isArray-5e3f9107.js";import"./StringUtils-2ea3ab4d.js";import"./index-4a1b1a67.js";import"./dayjs.min-f79c4412.js";import"./index-9d475cdf.js";import"./tiny-invariant-dd7d57d2.js";import"./mockProject-4d45213a.js";import"./mock_user_profile-cefba5e4.js";import"./fakerUtils-9367b81c.js";import"./times-8d386772.js";import"./_baseTimes-8715be3e.js";import"./identity-46f208ab.js";import"./toInteger-5bb233f4.js";import"./isSymbol-7c514724.js";import"./mockWiki-348abac7.js";import"./mock_file_handle-7ef5e7be.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./cloneDeep-10deac57.js";import"./_baseClone-d4db307e.js";import"./_Uint8Array-df44b265.js";import"./_initCloneObject-c3239c20.js";import"./_getAllKeys-af1012ce.js";import"./DateFormatter-04dc892b.js";import"./timezone-f53425a4.js";import"./useDataAccessSubmission-aafd11e7.js";import"./useMutation-68b4e1ea.js";import"./useInfiniteQuery-febb7083.js";import"./useAccessRequirements-0b4c7cfd.js";import"./useQueries-601e9a94.js";import"./useMediaQuery-ed422b8f.js";import"./sortBy-3287642e.js";import"./_baseFlatten-7b590484.js";import"./_baseIteratee-3e70e377.js";import"./_getMatchData-2c772eab.js";import"./_cacheHas-c48b7592.js";import"./_setToArray-3d6ec6fd.js";import"./_baseFor-d254fa1e.js";import"./_baseRest-c9d7baca.js";import"./_overRest-2155f832.js";import"./_isIterateeCall-9cddbe78.js";import"./QueryFilterUtils-26ac5fac.js";import"./isNumber-e963e862.js";import"./HelpPopover-887d892c.js";import"./WideButton-0af44728.js";import"./RequestDownloadCard-5c0f8fe9.js";import"./ActionRequiredCard-7b4b9029.js";import"./Icon-733ce2b5.js";import"./IconSvg-b557d255.js";import"./ErrorOutlined-5d3a6347.js";import"./GetAppTwoTone-6e3519f9.js";import"./InfoOutlined-aa78e498.js";import"./Skeleton-2007774f.js";import"./LoadingScreen-7bb66db3.js";import"./Backdrop-3c9a13b0.js";import"./LinearProgress-9c1f12c3.js";import"./UserBadge-499362c7.js";import"./Menu-fd3efe37.js";import"./index-c71daf5e.js";import"./Modal-38359b46.js";import"./getScrollbarSize-ac846fe6.js";import"./ownerWindow-2c76219e.js";import"./createChainedFunction-0bab83cf.js";import"./MenuList-acf5f616.js";import"./List-81115ae1.js";import"./SkeletonTable-3361182b.js";import"./ToastMessage-3dbe47cb.js";import"./CSSTransition-e180c3db.js";import"./hasClass-ec9efd32.js";import"./Divider-f85fbd3b.js";import"./dividerClasses-ed167313.js";import"./MenuItem-9dd34ee5.js";import"./Card-116c8a68.js";import"./Avatar-e1ef2d77.js";import"./useTeamMembers-0d59e991.js";import"./RegularExpressions-bc0adf55.js";import"./index-e4fc7078.js";import"./EntityIcon-e1fcedf6.js";import"./pluralize-9f2b9a2f.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./index.modern-ebb8621a.js";import"./mapValues-a94bd5d1.js";import"./isPlainObject-cb19acc1.js";import"./now-3316c47d.js";import"./ThemesPlot-4b4c99c4.js";import"./ElementWithTooltip-d5aaba48.js";import"./SynapseTableConstants-5f56c39f.js";import"./index-45e1dbd1.js";import"./ShowMore-0d3229ca.js";import"./Dropdown-38810c77.js";import"./ThemeProvider-ab8de9d2.js";import"./createWithBsPrefix-cb6f0557.js";import"./SqlFunctions-0e5057b4.js";import"./factory-33ef2009.js";import"./_baseUnset-96ca7447.js";import"./_baseSlice-cf92e063.js";import"./noop-cb277961.js";import"./without-7499eb19.js";import"./_baseIndexOf-c808ca38.js";import"./isArrayLikeObject-8a0d3588.js";import"./pick-828da15c.js";import"./isPlainObject-e233fb76.js";import"./merge-75f6c925.js";import"./isNil-2a082f40.js";import"./isEqualWith-63226cfe.js";import"./uniq-3970452c.js";import"./remove-6a5521d2.js";import"./EntityLink-774f3c9f.js";import"./useEntity-4c94f0da.js";import"./InfiniteQueryUtils-54ae7e6b.js";import"./ErrorChip-ea665d5b.js";import"./Chip-a105e3ef.js";import"./useGetQueryResultBundle-54076c3a.js";import"./useDownloadList-743eec7c.js";import"./use-deep-compare-effect.esm-3f8944c0.js";import"./NoSearchResults-37a4f967.js";import"./NoData-300108e2.js";import"./queryUtils-87041eea.js";import"./LastLoginInfo-890e480a.js";import"./jsx-runtime_commonjs-proxy-cf9930ed.js";import"./isMuiElement-bce4c331.js";import"./DialogTitle-d169fb05.js";import"./DialogContent-8470ed54.js";import"./Dialog-b996969a.js";import"./TextField-4e593128.js";import"./InputLabel-59e6a071.js";import"./useFormControl-41ba3265.js";import"./Select-3d2989f8.js";import"./tslib.es6-9c2726d7.js";import"./lodash-bd8c10bc.js";import"./StandaloneLoginForm-4af62871.js";import"./LoginFlowBackButton-fded2bca.js";import"./TextField-35127e91.js";import"./StyledFormControl-8337a369.js";import"./LoginMethodButton-6fa769f9.js";import"./Grid-b8689300.js";import"./RadioGroup-35987025.js";import"./UserSearchBoxV2-ec890661.js";import"./Select-ce3716e1.esm-7622664b.js";import"./isNativeReflectConstruct-05c29d01.js";import"./UserOrTeamBadge-95cbd6cf.js";import"./Form-5063bd72.js";import"./Col-d85ccfcb.js";import"./FileUpload-1bd01eba.js";import"./AuthenticatedRequirement-eee77585.js";import"./RequirementItem-d6be6424.js";import"./ConditionalWrapper-28a47e51.js";import"./CertificationRequirement-32c6f412.js";import"./ValidationRequirement-2e65f371.js";import"./TwoFactorAuthEnabledRequirement-93dfd85b.js";import"./TwoFactorEnrollmentForm-a3076baa.js";import"./LeftRightPanel-1bb2832a.js";import"./Tabs-939a17a0.js";import"./QueryCount-37e5179a.js";import"./SkeletonButton-4e246cf8.js";import"./Checkbox-33a3044c.js";import"./SelectionCriteriaPill-d900c4f9.js";import"./EnumFacetFilterUI-8aa6a7b0.js";import"./RangeSlider-860ab895.js";import"./react-sizeme-a86e205b.js";import"./ColorGradient-982494fb.js";import"./colorPalette-c43701fe.js";import"./UpsetPlot-a5436642.js";import"./lz-string-8d18d2e5.js";import"./LargeButton-41901d69.js";import"./IconList-c4614b9d.js";import"./Box-99497e95.js";import"./LightTooltip-de55a1d9.js";import"./UserCardList-971eeaa4.js";import"./SynapseVideo-836e7fdb.js";import"./WarningDialog-02ec738f.js";import"./RejectDataAccessRequestModal-a9cdf7b8.js";import"./immutable.es-400ccb6d.js";import"./FormControlLabel-b6802238.js";import"./mockEntity-f9fd7388.js";import"./mockFileEntity-b3c546d4.js";const ki={title:"Governance/SubmissionPage",component:g,parameters:{stack:"mock"}},p={name:"SubmissionPage",parameters:{msw:{handlers:[...C(i),...E(i),m.rest.get(`${i}${e(":id")}`,async(o,t,r)=>{const d=S.find(u=>o.params.id===u.id);return t(r.status(200),r.json(d))}),m.rest.get(`${i}${I(":id")}`,async(o,t,r)=>t(r.status(200),r.json(s))),m.rest.get(`${i}${_(":id")}`,async(o,t,r)=>t(r.status(200),r.json({wikiPageId:123,ownerObjectId:s.id,ownerObjectType:"ACCESS_REQUIREMENT"}))),m.rest.get(`${i}/repo/v1/accessRequirement/:id/acl`,async(o,t,r)=>t(r.status(200),r.json({id:o.id,creationDate:"2022-05-20T14:32:31.665Z",etag:"f4fbd4f2-751d-40dd-9421-1d2693231217",resourceAccess:[{principalId:3350396,accessType:["REVIEW_SUBMISSIONS"]}]}))),...R(O),m.rest.put(`${i}${e(":id")}`,async(o,t,r)=>t(r.status(201),r.json(await o.json())))]}},args:{submissionId:1}};var n,a,c;p.parameters={...p.parameters,docs:{...(n=p.parameters)==null?void 0:n.docs,source:{originalSource:`{
  name: 'SubmissionPage',
  parameters: {
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), ...getWikiHandlers(MOCK_REPO_ORIGIN),
      // Return submission based on ID
      rest.get(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        const submission = mockSubmissions.find(submission => req.params.id === submission.id);
        return res(ctx.status(200), ctx.json(submission));
      }),
      // Return a mocked access requirement
      rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json(mockManagedACTAccessRequirement));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_WIKI_PAGE_KEY(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          wikiPageId: 123,
          ownerObjectId: mockManagedACTAccessRequirement.id,
          ownerObjectType: 'ACCESS_REQUIREMENT'
        }));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}/repo/v1/accessRequirement/:id/acl\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          id: req.id,
          creationDate: '2022-05-20T14:32:31.665Z',
          etag: 'f4fbd4f2-751d-40dd-9421-1d2693231217',
          resourceAccess: [{
            principalId: 3350396,
            accessType: ['REVIEW_SUBMISSIONS']
          }]
        }));
      }), ...getHandlersForTableQuery(mockRejectionReasonsTableQueryResultBundle), rest.put(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(201), ctx.json(await req.json()));
      })]
    }
  },
  args: {
    submissionId: 1
  }
}`,...(c=(a=p.parameters)==null?void 0:a.docs)==null?void 0:c.source}}};const Ui=["Demo"];export{p as Demo,Ui as __namedExportsOrder,ki as default};
