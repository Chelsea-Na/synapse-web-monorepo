import{a as p,F as l,j as t}from"./jsx-runtime-9dc53467.js";import{r as n}from"./index-76fb7be0.js";import"./OrientationBanner-1c6f5b11.js";import"./getEndpoint-ac94413e.js";import{v as ie,a2 as W,be as Ie}from"./SynapseClient-1dd62219.js";import{T as k}from"./TextField-0ffe3a62.js";import{E as r,H as re,j as he}from"./index-3619b06a.js";import{W as oe,a as T,b as _}from"./WizardChoiceButtonGroup-ebc58599.js";import{L as I}from"./Link-980677d0.js";import{e as fe}from"./useEntity-7a1d0409.js";import{u as ye,T as Ve}from"./TableColumnSchemaForm-c7a352a9.js";import{E as Ce}from"./EntityViewScopeEditor-7a1c1d4a.js";import{B as C}from"./Box-ddce9904.js";import{T as ne}from"./Typography-10432b83.js";import{E as be}from"./EntityViewMaskEditor-0379ef6d.js";import{d as we}from"./SynapseTableCell-603406db.js";import{S as Le}from"./SubmissionViewScopeEditor-f34a8af2.js";import{A as K}from"./Alert-34cc4490.js";import{B as P}from"./Button-6cf38875.js";import"./_commonjsHelpers-de833af9.js";import"./FullWidthAlert-88a09c3d.js";import"./Stack-b0292d83.js";import"./styled-01bfb76d.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-55b21f7f.js";import"./extendSxProp-e91f91cb.js";import"./AlertTitle-1d33b140.js";import"./useTheme-541c21f5.js";import"./Grow-5b2ac6ed.js";import"./isHostComponent-fa76b8d9.js";import"./useForkRef-8feb2ebf.js";import"./index-d3ea75b5.js";import"./utils-7ba61cee.js";import"./inheritsLoose-c82a83d4.js";import"./TransitionGroupContext-1474f578.js";import"./Paper-b990f44f.js";import"./ClickAwayListener-3907f9d7.js";import"./Tooltip-3e2f7ab3.js";import"./useIsFocusVisible-e5f6c995.js";import"./SynapseConstants-567f6998.js";import"./createSvgIcon-af041161.js";import"./InfoTwoTone-1a20b6d6.js";import"./CheckCircleTwoTone-5c97bb6f.js";import"./inputBaseClasses-9710a733.js";import"./Fade-7e0b73d6.js";import"./_getTag-a0ec24ca.js";import"./isArray-5e3f9107.js";import"./StringUtils-2ea3ab4d.js";import"./dayjs.min-f79c4412.js";import"./index-9d475cdf.js";import"./tiny-invariant-dd7d57d2.js";import"./emotion-react.browser.esm-04dee135.js";import"./InputLabel-91f95ac8.js";import"./useFormControl-41ba3265.js";import"./ownerWindow-2c76219e.js";import"./isMuiElement-bce4c331.js";import"./Select-9a32f20b.js";import"./index-c71daf5e.js";import"./Popover-f3a8cf5d.js";import"./Modal-7f809725.js";import"./Backdrop-acbc2ec5.js";import"./getScrollbarSize-ac846fe6.js";import"./createChainedFunction-0bab83cf.js";import"./MenuList-7ef70bf3.js";import"./List-94bb762a.js";import"./IconSvg-9cb7df33.js";import"./ErrorOutlined-6b31cdea.js";import"./GetAppTwoTone-8acfb280.js";import"./InfoOutlined-1c91e984.js";import"./useMutation-fb195a91.js";import"./useInfiniteQuery-c210f1e8.js";import"./isEqual-592f8fa4.js";import"./_baseIsEqual-5ae1325b.js";import"./_Uint8Array-98add9bc.js";import"./_baseTimes-8715be3e.js";import"./_cacheHas-9c553a57.js";import"./_setToArray-3d6ec6fd.js";import"./InfiniteQueryUtils-54ae7e6b.js";import"./pick-ab089642.js";import"./toString-cc90cb98.js";import"./isSymbol-7c514724.js";import"./_baseClone-dc93fc3a.js";import"./hasIn-9f27088b.js";import"./_baseSlice-cf92e063.js";import"./isPlainObject-75ceb805.js";import"./_overRest-1404b737.js";import"./identity-46f208ab.js";import"./cloneDeep-8a8b372e.js";import"./Checkbox-47042b61.js";import"./uniqueId-4d05949d.js";import"./SchemaDrivenAnnotationEditor-dd178038.js";import"./ErrorListTemplate-0b29a3bc.js";import"./isPlainObject-ad60ab85.js";import"./mapValues-c1561695.js";import"./index.modern-42b48b42.js";import"./tslib.es6-9c2726d7.js";import"./jsx-runtime_commonjs-proxy-d6eb4d39.js";import"./IconButton-e4815158.js";import"./ButtonBase-f3be4fb1.js";import"./assertThisInitialized-081f9914.js";import"./Grid-3d403699.js";import"./ListItem-5947e5d7.js";import"./listItemButtonClasses-592b9053.js";import"./ListItemText-fe5379ca.js";import"./MenuItem-3d7f51a8.js";import"./dividerClasses-5829bcb2.js";import"./ContentCopy-b901e642.js";import"./Divider-db784af9.js";import"./FormControlLabel-f6a2de64.js";import"./FormGroup-4afb0bf2.js";import"./RangeSlider-c3a8abb9.js";import"./DateTimePicker-3ab07f7d.js";import"./timezone-f53425a4.js";import"./useMediaQuery-facaab58.js";import"./Tabs-736a2cbf.js";import"./CSSTransition-d4a63f6f.js";import"./hasClass-ec9efd32.js";import"./InputAdornment-f3513781.js";import"./DialogContent-d93df19b.js";import"./Chip-3ab3a829.js";import"./Dialog-38c3998f.js";import"./SelectionCriteriaPill-d88d38aa.js";import"./ElementWithTooltip-65e3e88d.js";import"./SynapseTableConstants-5f56c39f.js";import"./index-887d61c3.js";import"./RegularExpressions-bc0adf55.js";import"./Icon-dc4c2fbd.js";import"./ShowMore-0d3229ca.js";import"./Dropdown-eef3dde7.js";import"./ThemeProvider-ab8de9d2.js";import"./createWithBsPrefix-6bc11d95.js";import"./ThemesPlot-40d8b4eb.js";import"./SqlFunctions-ff660971.js";import"./factory-33ef2009.js";import"./sortBy-5833bcc7.js";import"./_getMatchData-806f8014.js";import"./_baseFor-d254fa1e.js";import"./_baseRest-b81a47b3.js";import"./_isIterateeCall-ce2bb82d.js";import"./uniq-44d6949f.js";import"./times-39c4125c.js";import"./without-ecf2a23f.js";import"./isArrayLikeObject-044d0a87.js";import"./merge-21407079.js";import"./isNil-dc54881d.js";import"./LoadingScreen-d62555af.js";import"./LinearProgress-8d1ab3ac.js";import"./use-deep-compare-effect.esm-3f8944c0.js";import"./ToastMessage-02301a16.js";import"./EntityFinderModal-d8505957.js";import"./WarningDialog-0ec53545.js";import"./useEntitySelection-3670daad.js";import"./immutable.es-400ccb6d.js";import"./pluralize-9f2b9a2f.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./Search-4b7f5640.js";import"./Select-ce3716e1.esm-6f08caf7.js";import"./react-sizeme-a86e205b.js";import"./Sort-f9010d36.js";import"./DateFormatter-5babad06.js";import"./index-e4fc7078.js";import"./EntityModal-a7e59af0.js";import"./SkeletonButton-0a3b2bad.js";import"./Skeleton-c327557e.js";import"./SkeletonTable-d1c3c025.js";import"./FileHandleUtils-ee9261af.js";import"./UserBadge-707016af.js";import"./Avatar-b9207744.js";import"./RequirementItem-a63d4244.js";import"./ConditionalWrapper-28a47e51.js";import"./CheckTwoTone-3ea78bb9.js";import"./EntityIcon-3ac93a02.js";import"./EntityLink-d304687d.js";import"./useGetEntityHeaders-4328e656.js";import"./ErrorChip-debe9caa.js";import"./Form-afa944a6.js";import"./Col-6a713b25.js";import"./useFavorites-37f7a014.js";import"./ButtonGroup-8e0782a1.js";import"./JSONArrayEditorModal-75604dfa.js";import"./papaparse.min-8c9ba15c.js";import"./EntityHeaderTable-03ed252a.js";import"./UserSearchBoxV2-844a4dae.js";import"./UserOrTeamBadge-982993db.js";import"./WideButton-2dd27cba.js";import"./useTeamMembers-be5a4dbb.js";import"./now-104568b6.js";import"./ObservationCard-4180f352.js";import"./useGetQueryResultBundle-dcdd6824.js";import"./NoSearchResults-37a4f967.js";import"./NoData-300108e2.js";import"./queryUtils-696af99b.js";import"./LastLoginInfo-dc355587.js";import"./DialogTitle-5867ee56.js";import"./lodash-bd8c10bc.js";import"./useAccessRequirements-8c20b4b3.js";import"./StandaloneLoginForm-bb853391.js";import"./LoginFlowBackButton-1af116e9.js";import"./TextField-2e900427.js";import"./StyledFormControl-539bab9f.js";import"./LoginMethodButton-bbc095ee.js";import"./useDataAccessSubmission-1819699f.js";import"./RadioGroup-13ffdadd.js";import"./FileUpload-96300159.js";import"./AuthenticatedRequirement-62a7be00.js";import"./CertificationRequirement-cf2201ea.js";import"./ValidationRequirement-c87f0114.js";import"./TwoFactorAuthEnabledRequirement-705d45f2.js";import"./TwoFactorEnrollmentForm-e0a22a92.js";import"./LeftRightPanel-44366a7b.js";import"./ActionRequiredCard-c800545a.js";import"./RequestDownloadCard-f20d1fca.js";import"./QueryCount-65450d4e.js";import"./EnumFacetFilterUI-965998d0.js";import"./ColorGradient-3d3e1969.js";import"./colorPalette-c43701fe.js";import"./useDownloadList-92399126.js";import"./UpsetPlot-83e59404.js";import"./lz-string-8d18d2e5.js";import"./LargeButton-c1a4d54e.js";import"./SynapseVideo-a21b7b0f.js";import"./IconList-3e12c4ee.js";import"./UserCardList-0ecda55c.js";import"./Box-12d95f26.js";import"./EvaluationFinder-47a66b1f.js";function g(e){const{name:i,setName:a,description:h,setDescription:b}=e,{isInExperimentalMode:s}=ie();return p(l,{children:[t(k,{required:!0,label:"Name",value:i,onChange:c=>{a(c.target.value)},fullWidth:!0}),s&&t(k,{label:"Description",value:h,onChange:c=>{b(c.target.value||void 0)},fullWidth:!0,multiline:!0,rows:3,sx:{my:2}})]})}try{g.displayName="TableNameForm",g.__docgenInfo={description:`React component for the naming a new table or view.
Renders UI to provide the name and description of a table or view.`,displayName:"TableNameForm",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},setName:{defaultValue:null,description:"",name:"setName",required:!0,type:{name:"Dispatch<SetStateAction<string>>"}},description:{defaultValue:null,description:"",name:"description",required:!0,type:{name:"string | undefined"}},setDescription:{defaultValue:null,description:"",name:"setDescription",required:!0,type:{name:"Dispatch<SetStateAction<string | undefined>>"}}}}}catch{}const ge=p(l,{children:[t(_,{children:"Synapse tables are used to organize web-accessible, sharable, and queryable data. Tables may be queried and edited with the Synapse UI, as well as with the Synapse programmatic clients."}),t(I,{href:"https://help.synapse.org/docs/Organizing-Data-With-Tables.2011038095.html",target:"_blank",onClick:e=>{e.stopPropagation()},children:"More about Tables"})]}),Ae=p(l,{children:[t(_,{children:"Views allow you to see and query groups of other objects in Synapse, such as files, tables, projects, or submissions and any associated annotations about those items."}),t(I,{href:"https://help.synapse.org/docs/Views.2011070739.html",target:"_blank",onClick:e=>{e.stopPropagation()},children:"More about Views"})]});function D(e){const{onTableSelected:i,onViewSelected:a}=e;return p(oe,{children:[t(T,{title:"Table",description:ge,onClick:()=>{i()}}),t(T,{title:"View",description:Ae,onClick:a})]})}try{D.displayName="TableTypeSelection",D.__docgenInfo={description:`React component for the first step of creating a new table or view.
The user will decide if they want to create a Table or a View`,displayName:"TableTypeSelection",props:{onTableSelected:{defaultValue:null,description:"",name:"onTableSelected",required:!0,type:{name:"() => void"}},onViewSelected:{defaultValue:null,description:"",name:"onViewSelected",required:!0,type:{name:"() => void"}}}}}catch{}const Oe=p(l,{children:[t(_,{children:"This view lists all files, folders, and/or tables in the selected folders or projects."}),t(I,{href:"https://help.synapse.org/docs/Views.2011070739.html#Views-CreatingaFileView",target:"_blank",onClick:e=>{e.stopPropagation()},children:"More about File Views"})]}),Ne=p(l,{children:[t(_,{children:"This view lists all (and only) your selected projects."}),t(I,{href:"https://help.synapse.org/docs/Views.2011070739.html#Views-CreatingaProjectView",target:"_blank",onClick:e=>{e.stopPropagation()},children:"More about Project Views"})]}),Be=p(l,{children:[t(_,{children:"This view lists all submissions within one or more evaluation queues."}),t(I,{href:"https://help.synapse.org/docs/Views.2011070739.html#Views-CreatingaSubmissionView",target:"_blank",onClick:e=>{e.stopPropagation()},children:"More about Submission Views"})]}),Me=p(l,{children:[t(_,{children:"The results of a query across multiple sources, defined by a SQL statement."}),t(I,{href:"https://help.synapse.org/docs/Combining-Data-from-Multiple-Table-Sources.2973270158.html",target:"_blank",onClick:e=>{e.stopPropagation()},children:"More about Materialized Views"})]}),ve=t(_,{children:"A saved query on another table or view where complex filters can be applied to aggregated results."});function Y(e){const{onTypeSelected:i}=e,{isInExperimentalMode:a}=ie();return p(oe,{children:[t(T,{title:"Files, Folders, and Other Objects",description:Oe,onClick:()=>{i(r.ENTITY_VIEW)}}),t(T,{title:"Projects",description:Ne,onClick:()=>{i(r.ENTITY_VIEW,re)}}),t(T,{title:"Challenge Submissions",description:Be,onClick:()=>{i(r.SUBMISSION_VIEW)}}),t(T,{title:"Materialized View",description:Me,onClick:()=>{i(r.MATERIALIZED_VIEW)}}),a&&t(T,{title:"Virtual Table",description:ve,onClick:()=>{i(r.VIRTUAL_TABLE)}})]})}try{Y.displayName="ViewTypeSelection",Y.__docgenInfo={description:`React component for selecting a View type in the View creation wizard.
Renders UI to show all view types where the user must choose one to continue.`,displayName:"ViewTypeSelection",props:{onTypeSelected:{defaultValue:null,description:"",name:"onTypeSelected",required:!0,type:{name:"(type: EntityType, viewTypeMask?: number | undefined) => void"}}}}}catch{}const We=p(C,{mb:2.5,children:[t(ne,{variant:"body1",color:"grey.700",mb:1.25,children:"If you store normalized data in Synapse tables, views, or datasets, you can combine separate data sources using Materialized Views. A materialized view is a type of Synapse table that is defined using a Synapse SQL statement, which can contain SQL keywords such as JOIN and UNION to combine existing Synapse tables."}),t(I,{href:"https://help.synapse.org/docs/Combining-Data-from-Multiple-Table-Sources.2973270158.html",target:"_blank",onClick:e=>{e.stopPropagation()},children:"More about Materialized Views"})]}),Pe=t(C,{mb:2.5,children:t(ne,{variant:"body1",color:"grey.700",mb:1.25,children:"A Synapse Virtual Table is a type of table that is defined by a Synapse SQL query. Any query on a Virtual Table will execute the defining SQL statement on the referenced table. The defining SQL of a Virtual Table cannot include JOIN clauses on multiple tables."})});function R(e){const{entityType:i,...a}=e;return p(l,{children:[i===r.MATERIALIZED_VIEW&&We,i===r.VIRTUAL_TABLE&&Pe,t(k,{label:"Defining SQL",placeholder:"SELECT * FROM syn123",fullWidth:!0,multiline:!0,required:!0,minRows:6,...a})]})}try{R.displayName="SqlDefinedTableEditor",R.__docgenInfo={description:"Component used to edit the SQL of a Synapse entity defined by SQL, such as a MaterializedView or VirtualTable",displayName:"SqlDefinedTableEditor",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any>"}},entityType:{defaultValue:null,description:"",name:"entityType",required:!1,type:{name:"enum",value:[{value:'"project"'},{value:'"folder"'},{value:'"file"'},{value:'"table"'},{value:'"link"'},{value:'"entityview"'},{value:'"dockerrepo"'},{value:'"submissionview"'},{value:'"dataset"'},{value:'"datasetcollection"'},{value:'"materializedview"'},{value:'"virtualtable"'}]}}}}}catch{}function ke(e,i){switch(e){case"CHOOSE_TABLE_TYPE":return"Create Table or View";case"CHOOSE_VIEW_TYPE":return"Create View";case"ENTITY_VIEW_SCOPE":case"SUBMISSION_VIEW_SCOPE":return`Define ${W(i)} Scope`;case"TABLE_SQL":return"Create a SQL-Defined View";case"TABLE_COLUMNS":return`Add Columns to ${W(i)}`;case"TABLE_NAME":return`Describe the ${W(i)}`}}function De(e,i){switch(e){case"CHOOSE_TABLE_TYPE":break;case"CHOOSE_VIEW_TYPE":return"CHOOSE_TABLE_TYPE";case"ENTITY_VIEW_SCOPE":case"SUBMISSION_VIEW_SCOPE":case"TABLE_SQL":return"CHOOSE_VIEW_TYPE";case"TABLE_COLUMNS":if(i===r.TABLE)return"CHOOSE_TABLE_TYPE";if(i===r.ENTITY_VIEW)return"ENTITY_VIEW_SCOPE";if(i===r.SUBMISSION_VIEW)return"SUBMISSION_VIEW_SCOPE";break;case"TABLE_NAME":if(i===r.TABLE||i===r.ENTITY_VIEW||i===r.SUBMISSION_VIEW)return"TABLE_COLUMNS";if(i===r.MATERIALIZED_VIEW||i===r.VIRTUAL_TABLE)return"TABLE_SQL";break}return console.warn(`Unknown previous step at ${e} for type ${i}`),"CHOOSE_TABLE_TYPE"}function G(e){return e==="TABLE_NAME"||e==="TABLE_SQL"}function Ye(e){return e===r.TABLE?"TABLE_COLUMNS":e===r.ENTITY_VIEW?"ENTITY_VIEW_SCOPE":e===r.SUBMISSION_VIEW?"SUBMISSION_VIEW_SCOPE":e===r.MATERIALIZED_VIEW||e===r.VIRTUAL_TABLE?"TABLE_SQL":"CHOOSE_TABLE_TYPE"}function Re(e,i,a){[r.TABLE,r.ENTITY_VIEW,r.SUBMISSION_VIEW,r.DATASET,r.DATASET_COLLECTION].includes(i)&&a.length>0&&(e.columnIds=a.map(h=>h.id))}function Ue(e,i,a){[r.ENTITY_VIEW,r.SUBMISSION_VIEW].includes(i)&&a.length>0&&(e.scopeIds=a)}function qe(e,i,a){i===r.ENTITY_VIEW&&(e.viewTypeMask=a)}function xe(e,i,a){[r.MATERIALIZED_VIEW,r.VIRTUAL_TABLE].includes(i)&&(e.definingSQL=a)}function U(e){const{open:i,parentId:a,onComplete:h,onCancel:b}=e,[s,c]=n.useState("CHOOSE_TABLE_TYPE"),[f,q]=n.useState(""),[y,x]=n.useState(void 0),[o,ae]=n.useState(void 0),[u,se]=n.useState([]),[E,pe]=n.useState([]),[d,H]=n.useState(he),A=d===re,[V,le]=n.useState([]),O=n.useRef(null),[w,me]=n.useState(""),z=n.useMemo(()=>{if(o===r.ENTITY_VIEW)return{scope:u,viewTypeMask:d,viewEntityType:o};if(o===r.SUBMISSION_VIEW)return{scope:E,viewEntityType:o}},[o,u,E,d]),{mutateAsync:F,error:N}=fe({onSuccess:m=>{h(m.id)}}),{mutateAsync:Q,error:B}=ye(),M=n.useCallback((m,S)=>{ae(m),S!=null&&H(S),c(Ye(m))},[]),j=n.useCallback(()=>{c("CHOOSE_VIEW_TYPE")},[]),Z=n.useCallback(async()=>{if(!o){console.error("entityType was not defined!"),c("CHOOSE_TABLE_TYPE");return}let m=[];if(V&&o!==r.MATERIALIZED_VIEW&&o!==r.VIRTUAL_TABLE)try{m=await Q(V)}catch{return}const S={name:f,description:y,parentId:a,concreteType:Ie(o)};Re(S,o,m),Ue(S,o,o===r.SUBMISSION_VIEW?E:u),qe(S,o,d),xe(S,o,w);try{await F(S)}catch{return}},[V,Q,F,y,o,f,a,u,E,w,d]),$=n.useCallback(m=>{le(m),c("TABLE_NAME")},[]),J=n.useCallback(()=>{O.current!=null&&O.current.submit()},[]),ce=s!=="CHOOSE_TABLE_TYPE",de=s!=="CHOOSE_TABLE_TYPE"&&s!=="CHOOSE_VIEW_TYPE",ue=n.useCallback(()=>{c(De(s,o))},[s,o]),Ee=n.useCallback(()=>{G(s)?Z():s==="TABLE_COLUMNS"?J():(s==="ENTITY_VIEW_SCOPE"||s==="SUBMISSION_VIEW_SCOPE")&&c("TABLE_COLUMNS")},[J,Z,s]),Se=n.useMemo(()=>s==="ENTITY_VIEW_SCOPE"?u.length===0||d===0:s==="SUBMISSION_VIEW_SCOPE"?E.length===0||d===0:!1,[u.length,E.length,s,d]),v=n.useMemo(()=>p(l,{children:[N&&t(K,{sx:{my:2},severity:"error",children:N.message}),B&&t(K,{sx:{my:2},severity:"error",children:B.message})]}),[B,N]),Te=n.useMemo(()=>{switch(s){case"CHOOSE_TABLE_TYPE":return t(D,{onTableSelected:()=>{M(r.TABLE)},onViewSelected:j});case"CHOOSE_VIEW_TYPE":return t(Y,{onTypeSelected:M});case"ENTITY_VIEW_SCOPE":return p(l,{children:[t(Ce,{scopeIds:u,onChange:se,isProjectView:A}),!A&&t(be,{value:d,onChange:H})]});case"SUBMISSION_VIEW_SCOPE":return t(Le,{evaluationIds:E,onChange:pe});case"TABLE_SQL":return p(l,{children:[t(g,{name:f,setName:q,description:y,setDescription:x}),t(C,{mt:1.25,children:t(R,{value:w,onChange:m=>me(m.target.value),entityType:o})}),v]});case"TABLE_COLUMNS":return t(Ve,{initialData:V,entityType:o,ref:O,onSubmit:$,viewScope:z});case"TABLE_NAME":return p(l,{children:[t(g,{name:f,setName:q,description:y,setDescription:x}),v]})}},[s,j,M,u,A,d,E,f,y,w,o,v,V,$,z]);return t(we,{open:i,onCancel:b,maxWidth:"md",title:ke(s,o),content:Te,actions:p(C,{display:"flex",width:"100%",gap:2.25,mt:2,children:[ce&&t(P,{variant:"outlined",onClick:ue,children:"Back"}),t(C,{m:"auto"}),t(P,{variant:"outlined",onClick:b,children:"Cancel"}),de&&t(P,{variant:"contained",onClick:Ee,disabled:Se,children:G(s)?"Finish":"Next"})]})})}try{U.displayName="CreateTableViewWizard",U.__docgenInfo={description:`Wizard to create a Synapse table, view, or other table type.

See the README.md in this folder for a visualization of the flowchart`,displayName:"CreateTableViewWizard",props:{open:{defaultValue:null,description:"",name:"open",required:!0,type:{name:"boolean"}},parentId:{defaultValue:null,description:"",name:"parentId",required:!0,type:{name:"string"}},onCancel:{defaultValue:null,description:"",name:"onCancel",required:!0,type:{name:"() => void"}},onComplete:{defaultValue:null,description:"",name:"onComplete",required:!0,type:{name:"(newEntityId: string) => void"}}}}}catch{}const Go={title:"Synapse/Create Table Wizard",component:U,tags:["autodocs"]},L={args:{open:!0,parentId:"syn23567475"}};var X,ee,te;L.parameters={...L.parameters,docs:{...(X=L.parameters)==null?void 0:X.docs,source:{originalSource:`{
  args: {
    open: true,
    parentId: 'syn23567475'
  }
}`,...(te=(ee=L.parameters)==null?void 0:ee.docs)==null?void 0:te.source}}};const Xo=["Demo"];export{L as Demo,Xo as __namedExportsOrder,Go as default};
//# sourceMappingURL=CreateTableViewWizard.stories-36cf159a.js.map
