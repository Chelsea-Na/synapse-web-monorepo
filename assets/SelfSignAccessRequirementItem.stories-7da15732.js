import{j as p}from"./jsx-runtime-095bf462.js";import{S as s,c as R}from"./ConfirmationDialog-09ea0e88.js";import{m as l,n as S,ao as A,A as f}from"./EntityTypeUtils-e0dec104.js";import{a as C}from"./mockAccessRequirements-73dad914.js";import{M as o}from"./getEndpoint-ac94413e.js";import{a as n}from"./index-826ce6bf.js";import{M as a}from"./mock_user_profile-fe4fca1f.js";import{g as O,c as _}from"./accessRequirementHandlers-05c0f6a1.js";import{g}from"./userProfileHandlers-65627a37.js";import"./index-8db94870.js";import"./_commonjsHelpers-042e6b4d.js";import"./jsx-runtime_commonjs-proxy-0f864cfe.js";import"./Clear-72bafe95.js";import"./extends-98964cd2.js";import"./SvgIcon-4c933a0b.js";import"./objectWithoutPropertiesLoose-4f48578a.js";import"./styled-f64e11ba.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-29d231ba.js";import"./createChainedFunction-0bab83cf.js";import"./ownerWindow-2c76219e.js";import"./isHostComponent-fa76b8d9.js";import"./useForkRef-f2aa3d66.js";import"./isMuiElement-08f54e3c.js";import"./Tooltip-1ed747d5.js";import"./useTheme-14d0ce71.js";import"./index-8ce4a492.js";import"./TransitionGroupContext-0df7f063.js";import"./utils-724ac38b.js";import"./inheritsLoose-c82a83d4.js";import"./WideButton-7f7b7884.js";import"./Button-891a522f.js";import"./ButtonBase-4f599170.js";import"./emotion-react.browser.esm-4b1ddfee.js";import"./assertThisInitialized-081f9914.js";import"./SynapseConstants-a1d83293.js";import"./LoadingScreen-f2cda167.js";import"./Backdrop-31335125.js";import"./Fade-f7811978.js";import"./Box-13f1aabd.js";import"./extendSxProp-29a14132.js";import"./Typography-0933b2f6.js";import"./LinearProgress-c62c2bf1.js";import"./UserCard-7279a03e.js";import"./SkeletonTable-d7d70d74.js";import"./times-dcdf2ebc.js";import"./_baseTimes-8cccc40f.js";import"./isSymbol-7c514724.js";import"./isArray-5e3f9107.js";import"./Skeleton-3aad52b9.js";import"./IconSvg-de31928b.js";import"./ToastMessage-97113c06.js";import"./FullWidthAlert-aed69b8f.js";import"./Alert-fbdd8ab9.js";import"./Button-5637ed55.js";import"./createWithBsPrefix-f259edae.js";import"./index-58d3fd43.js";import"./hasClass-ec9efd32.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./Popover-88ad1c7b.js";import"./Modal-c9106d18.js";import"./getScrollbarSize-ac846fe6.js";import"./Paper-2b624eab.js";import"./Link-2921f78c.js";import"./RegularExpressions-bc0adf55.js";import"./react-intersection-observer.modern-64b519d2.js";import"./useInfiniteQuery-1a9c1d45.js";import"./infiniteQueryBehavior-4a262dc1.js";import"./DateFormatter-dc9493c4.js";import"./dayjs.min-8d4ef725.js";import"./utc-c90baebf.js";import"./EntityIcon-31f5e493.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./uniq-9be8d437.js";import"./mapValues-dbdd34a4.js";import"./hasIn-e58ed343.js";import"./_basePickBy-29522542.js";import"./CustomSelectWidget-0bf0b3d7.js";import"./react-is.production.min-a192e302.js";import"./Select-457c486b.esm-39815c2e.js";import"./isNativeReflectConstruct-e378569d.js";import"./isPlainObject-40bb89bb.js";import"./now-6f267e96.js";import"./unCamelCase-f5b581c0.js";import"./without-09b77dea.js";import"./_cacheHas-0e199c27.js";import"./_MapCache-6a2f8d38.js";import"./_baseRest-763811f1.js";import"./isArrayLikeObject-12bcdc20.js";import"./hasIn-f8dcf6c3.js";import"./_Uint8Array-03d59c0a.js";import"./_isIndex-af14b756.js";import"./pick-213946b3.js";import"./_baseClone-47a9b440.js";import"./_baseSlice-cf92e063.js";import"./uniq-7de2e139.js";import"./_isIterateeCall-d4838a5e.js";import"./_setToArray-3d6ec6fd.js";import"./isEqual-83a5e0f0.js";import"./_baseMap-35f24fd0.js";import"./_baseFor-d254fa1e.js";import"./useGetEntityHeaders-508cb562.js";import"./factory-51364b46.js";import"./sqlFunctions-6e0023a1.js";import"./QueryFilter-088269ac.js";import"./useEntity-e174e0d8.js";import"./useMutation-c933e313.js";import"./mutation-3093a1dc.js";import"./SynapseTableConstants-942d2b0b.js";import"./use-deep-compare-effect.esm-cb3aaa60.js";import"./index-5d0cf067.js";import"./useDownloadList-dcd356ec.js";import"./useGetQueryResultBundle-4836959c.js";import"./merge-78ded8ea.js";import"./queryUtils-4820262f.js";import"./cloneDeep-50aaeba4.js";import"./NoSearchResults-460db635.js";import"./NoData-59ea70fa.js";import"./UserCardList-aec2f79b.js";import"./ElementWithTooltip-3f3c6c91.js";import"./Icon-48d89b61.js";import"./contains-584479aa.js";import"./QueryCount-c5fa45d1.js";import"./UserSearchBoxV2-8630095f.js";import"./UserOrTeamBadge-41e456a3.js";import"./RadioGroup-bf0fed90.js";import"./RangeSlider-81695221.js";import"./Stack-98e16f53.js";import"./react-sizeme-0d7fb727.js";import"./ColorGradient-fc5a110b.js";import"./colorPalette-43310703.js";import"./SelectionCriteriaPill-5155dab3.js";import"./Close-336bf9d0.js";import"./IconList-91a82de6.js";import"./useAccessRequirements-58e16e37.js";import"./sortBy-035e0d10.js";import"./RestrictionInformation-4ed2591e.js";import"./StandaloneLoginForm-f2491986.js";import"./LoginFlowBackButton-636e15f3.js";import"./TextField-1bf0282d.js";import"./InputLabel-2be762b1.js";import"./inputBaseClasses-2e8dfab0.js";import"./MenuList-bded4610.js";import"./TextField-1acfe50c.js";import"./IconButton-74239a2b.js";import"./DialogTitle-816e44c2.js";import"./DialogContent-a988373b.js";import"./Alert-61691a15.js";import"./ResearchProjectForm-3484736e.js";import"./DataAccessRequestAccessorsFilesForm-446fd7d2.js";import"./AccessorChange-69229743.js";import"./useDataAccessSubmission-fae8e501.js";import"./Form-ee9e64e2.js";import"./FormLabel-7b55e02a.js";import"./Col-8dbe8567.js";import"./FormGroup-a255fd2e.js";import"./FileUpload-e9bed3a9.js";import"./Divider-0430dee5.js";import"./AuthenticatedRequirement-a3e287d6.js";import"./RequirementItem-476964f5.js";import"./ConditionalWrapper-51b8d1ed.js";import"./Avatar-c25dcc6a.js";import"./CertificationRequirement-23ad0de8.js";import"./ValidationRequirement-eac52e9e.js";import"./TwoFactorAuthEnabledRequirement-bf4283d8.js";import"./TwoFactorEnrollmentForm-12e34c3e.js";import"./LeftRightPanel-909d1919.js";import"./Typography-fd50ec33.js";import"./Dialog-e3da4e40.js";import"./ManagedACTAccessRequirementStatus-9671fe8d.js";import"./EntityLink-d272e6d1.js";import"./ErrorChip-768465d2.js";import"./SynapseVideo-8729e978.js";import"./mock_file_handle-de382463.js";import"./mockWiki-95d9fc0b.js";import"./util-441245ad.js";import"./MockSubmission-8f06c8f1.js";const $i={title:"Governance/Data Access Request Flow/Requirements/SelfSignAccessRequirementItem",component:s,argTypes:{isAuthenticated:{control:{type:"boolean"},defaultValue:!0}},render:t=>p(l,{children:r=>p(S,{synapseContext:{...r,accessToken:t.isAuthenticated?r.accessToken??"fake token":void 0},children:p(s,{...t})})})},e={args:{accessRequirement:{...C,isCertifiedUserRequired:!0,isValidatedProfileRequired:!0}},parameters:{msw:{handlers:[...O(o),..._(o),g(o,!1,!1),n.rest.get(`${o}${A(":id")}`,async(t,r,i)=>{const m={accessRequirementId:t.params.id,concreteType:"org.sagebionetworks.repo.model.dataaccess.BasicAccessRequirementStatus",isApproved:!1};return r(i.status(200),i.json(m))}),n.rest.post(`${o}${f}`,async(t,r,i)=>{const m={submitterId:a.toString(),accessorId:a.toString(),state:R.APPROVED};return r(i.status(201),i.json(m))})]}}};var c,d,u;e.parameters={...e.parameters,docs:{...(c=e.parameters)==null?void 0:c.docs,source:{originalSource:`{
  args: {
    accessRequirement: {
      ...mockSelfSignAccessRequirement,
      isCertifiedUserRequired: true,
      isValidatedProfileRequired: true
    }
  },
  parameters: {
    msw: {
      handlers: [
      // ...getHandlers(MOCK_REPO_ORIGIN),
      ...getAccessRequirementHandlers(MOCK_REPO_ORIGIN), ...getWikiHandlers(MOCK_REPO_ORIGIN), getCurrentUserCertifiedValidatedHandler(MOCK_REPO_ORIGIN, false, false), rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_STATUS(':id')}\`, async (req, res, ctx) => {
        const response: AccessRequirementStatus = {
          accessRequirementId: (req.params.id as string),
          concreteType: 'org.sagebionetworks.repo.model.dataaccess.BasicAccessRequirementStatus',
          isApproved: false
        };
        return res(ctx.status(200), ctx.json(response));
      }), rest.post(\`\${MOCK_REPO_ORIGIN}\${ACCESS_APPROVAL}\`, async (req, res, ctx) => {
        const response: AccessApproval = {
          submitterId: MOCK_USER_ID.toString(),
          accessorId: MOCK_USER_ID.toString(),
          state: ApprovalState.APPROVED
        };
        return res(ctx.status(201), ctx.json(response));
      })]
    }
  }
}`,...(u=(d=e.parameters)==null?void 0:d.docs)==null?void 0:u.source}}};const Hi=["RequiresUnmetCertificationAndValidation"];export{e as RequiresUnmetCertificationAndValidation,Hi as __namedExportsOrder,$i as default};
//# sourceMappingURL=SelfSignAccessRequirementItem.stories-7da15732.js.map
