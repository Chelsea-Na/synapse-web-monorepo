import{l as m}from"./index-c23f6e43.js";import{aj as e,d as I,e as _}from"./SynapseClient-b65fe3d4.js";import{g as E,h as S,m as s}from"./MockSubmission-944f3231.js";import{M as i}from"./getEndpoint-ac94413e.js";import{g as R}from"./tableQueryHandlers-0570cc07.js";import{m as O}from"./mockRejectionReasonsTableQueryResultBundle-59be1fd8.js";import{S as g}from"./SubmissionPage-1e5e4ec3.js";import{a as C}from"./userProfileHandlers-1f3de9f6.js";import"./_commonjsHelpers-042e6b4d.js";import"./util-e166d72a.js";import"./SynapseConstants-86492207.js";import"./OrientationBanner-3e5e2da7.js";import"./jsx-runtime-095bf462.js";import"./index-8db94870.js";import"./FullWidthAlert-7a6f936f.js";import"./AlertTitle-d92dfb78.js";import"./styled-96220216.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-4abd396b.js";import"./createSvgIcon-102248e7.js";import"./Paper-8ac7942c.js";import"./IconButton-1e0dd4f6.js";import"./ButtonBase-0195d275.js";import"./emotion-react.browser.esm-8516f11f.js";import"./assertThisInitialized-081f9914.js";import"./inheritsLoose-c82a83d4.js";import"./TransitionGroupContext-f2b81dde.js";import"./useForkRef-f2aa3d66.js";import"./useIsFocusVisible-bbf13f29.js";import"./Typography-c5b8eeae.js";import"./extendSxProp-d749f662.js";import"./Stack-f7ee2fdc.js";import"./Box-891dc3c7.js";import"./useTheme-a5fe342b.js";import"./Grow-15d1c4f6.js";import"./isHostComponent-fa76b8d9.js";import"./index-8ce4a492.js";import"./utils-60a28f01.js";import"./ClickAwayListener-36b79525.js";import"./Tooltip-e6a8fad5.js";import"./Button-d3d5b3a8.js";import"./Link-9ad54ce1.js";import"./isArray-5e3f9107.js";import"./dayjs.min-59ef0ea6.js";import"./index-58d3fd43.js";import"./CheckCircleTwoTone-cd25e954.js";import"./inputBaseClasses-f1eaf41c.js";import"./Fade-5a6f6506.js";import"./mock_file_handle-472c8ed3.js";import"./mock_user_profile-c0857745.js";import"./times-d84ee6a5.js";import"./_baseTimes-8cccc40f.js";import"./isSymbol-7c514724.js";import"./mockWiki-ec0240ec.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./cloneDeep-e4749918.js";import"./_baseClone-4dbb8b5a.js";import"./_Uint8Array-0d1cae10.js";import"./_MapCache-24b6f2e4.js";import"./_isIndex-af14b756.js";import"./DateFormatter-22157eae.js";import"./useDataAccessSubmission-8b922a43.js";import"./useMutation-c908d327.js";import"./useInfiniteQuery-b15ebb52.js";import"./useAccessRequirements-baffcdb2.js";import"./sortBy-2235e7a6.js";import"./hasIn-7b636476.js";import"./_cacheHas-3627d5e5.js";import"./_setToArray-3d6ec6fd.js";import"./_baseFor-d254fa1e.js";import"./_baseRest-c70d1099.js";import"./_isIterateeCall-793f210f.js";import"./ConfirmationDialog-39455d1b.js";import"./jsx-runtime_commonjs-proxy-0d22bf03.js";import"./createChainedFunction-0bab83cf.js";import"./ownerWindow-2c76219e.js";import"./isMuiElement-08f54e3c.js";import"./WideButton-f0b8b47c.js";import"./LoadingScreen-2548bf16.js";import"./LinearProgress-ddf61131.js";import"./Backdrop-1b2a4bbc.js";import"./UserCard-9084419a.js";import"./SkeletonTable-c2ad006d.js";import"./Skeleton-a24326d8.js";import"./IconSvg-ef8b0139.js";import"./ErrorOutlined-b4a8c67a.js";import"./GetAppTwoTone-9a0869d1.js";import"./InfoOutlined-1265fd90.js";import"./ToastMessage-08f9c422.js";import"./hasClass-ec9efd32.js";import"./Popover-3ba117be.js";import"./Modal-3a262027.js";import"./getScrollbarSize-ac846fe6.js";import"./useTeamMembers-256a8091.js";import"./RegularExpressions-bc0adf55.js";import"./index-95cfb7c2.js";import"./EntityIcon-2c997855.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./index.modern-2873e19a.js";import"./mapValues-b26bbf14.js";import"./isPlainObject-c2262b51.js";import"./now-bf937ae8.js";import"./unCamelCase-d2743f74.js";import"./_baseSlice-cf92e063.js";import"./without-421c449d.js";import"./isArrayLikeObject-a54ed54f.js";import"./pick-188233ff.js";import"./uniq-90d7c317.js";import"./RequestDownloadCard-5f617020.js";import"./ActionRequiredCard-1a7c2757.js";import"./Icon-97d1a130.js";import"./factory-275e83af.js";import"./SqlFunctions-a455e0de.js";import"./useEntity-d4c5a12b.js";import"./use-deep-compare-effect.esm-7a830988.js";import"./NoSearchResults-460db635.js";import"./NoData-59ea70fa.js";import"./index-953d39fd.js";import"./queryUtils-68832341.js";import"./useGetQueryResultBundle-42a74307.js";import"./merge-0e09f471.js";import"./UserSearchBoxV2-620796bc.js";import"./Select-ce3716e1.esm-8435c103.js";import"./isNativeReflectConstruct-e378569d.js";import"./UserOrTeamBadge-a8b354f2.js";import"./StandaloneLoginForm-bb8bc212.js";import"./LoginFlowBackButton-65bea595.js";import"./TextField-7d949b7a.js";import"./InputLabel-e8578cb2.js";import"./MenuList-f2b66e01.js";import"./TextField-65354e1c.js";import"./DialogTitle-87c8bdee.js";import"./RadioGroup-eb876a69.js";import"./Form-18a51c1e.js";import"./ThemeProvider-c7f6a893.js";import"./Col-9f9a4d0f.js";import"./createWithBsPrefix-3758f106.js";import"./FileUpload-8aebf3c2.js";import"./Divider-a5888bbc.js";import"./dividerClasses-30b81617.js";import"./AuthenticatedRequirement-1e1d9578.js";import"./RequirementItem-85495880.js";import"./ConditionalWrapper-51b8d1ed.js";import"./Avatar-15b73dbe.js";import"./CertificationRequirement-f71cbae5.js";import"./ValidationRequirement-0022e0ff.js";import"./TwoFactorAuthEnabledRequirement-98d4044c.js";import"./TwoFactorEnrollmentForm-bc227916.js";import"./LeftRightPanel-734e36bb.js";import"./ElementWithTooltip-3bb2e6ee.js";import"./SynapseTableConstants-942d2b0b.js";import"./Tabs-e906015a.js";import"./QueryCount-d4865668.js";import"./SkeletonButton-1cc36769.js";import"./RangeSlider-e66fc33f.js";import"./react-sizeme-5bfc490a.js";import"./ColorGradient-3d3e1969.js";import"./colorPalette-c43701fe.js";import"./SelectionCriteriaPill-1f2561e4.js";import"./ErrorChip-faa778ff.js";import"./IconList-fd6221c4.js";import"./UserCardList-c86f9e51.js";import"./useDownloadList-22150b05.js";import"./EntityLink-fb31c9ff.js";import"./SynapseVideo-d9f36a6f.js";import"./WarningDialog-b338adfe.js";import"./RejectDataAccessRequestModal-2c136cb1.js";import"./immutable.es-400ccb6d.js";import"./FormControlLabel-efd88e37.js";import"./toLower-271fcf43.js";import"./mockFileEntity-8830479a.js";const yo={title:"Governance/SubmissionPage",component:g,parameters:{stack:"mock"}},p={name:"SubmissionPage",parameters:{msw:{handlers:[...C(i),...E(i),m.rest.get(`${i}${e(":id")}`,async(o,t,r)=>{const d=S.find(u=>o.params.id===u.id);return t(r.status(200),r.json(d))}),m.rest.get(`${i}${I(":id")}`,async(o,t,r)=>t(r.status(200),r.json(s))),m.rest.get(`${i}${_(":id")}`,async(o,t,r)=>t(r.status(200),r.json({wikiPageId:123,ownerObjectId:s.id,ownerObjectType:"ACCESS_REQUIREMENT"}))),m.rest.get(`${i}/repo/v1/accessRequirement/:id/acl`,async(o,t,r)=>t(r.status(200),r.json({id:o.id,creationDate:"2022-05-20T14:32:31.665Z",etag:"f4fbd4f2-751d-40dd-9421-1d2693231217",resourceAccess:[{principalId:3350396,accessType:["REVIEW_SUBMISSIONS"]}]}))),...R(O),m.rest.put(`${i}${e(":id")}`,async(o,t,r)=>t(r.status(201),r.json(await o.json())))]}},args:{submissionId:1}};var n,a,c;p.parameters={...p.parameters,docs:{...(n=p.parameters)==null?void 0:n.docs,source:{originalSource:`{
  name: 'SubmissionPage',
  parameters: {
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), ...getWikiHandlers(MOCK_REPO_ORIGIN),
      // Return submission based on ID
      rest.get(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        const submission = mockSubmissions.find(submission => req.params.id === submission.id);
        return res(ctx.status(200), ctx.json(submission));
      }),
      // Return a mocked access requirement
      rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json(mockManagedACTAccessRequirement));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_WIKI_PAGE_KEY(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          wikiPageId: 123,
          ownerObjectId: mockManagedACTAccessRequirement.id,
          ownerObjectType: 'ACCESS_REQUIREMENT'
        }));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}/repo/v1/accessRequirement/:id/acl\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          id: req.id,
          creationDate: '2022-05-20T14:32:31.665Z',
          etag: 'f4fbd4f2-751d-40dd-9421-1d2693231217',
          resourceAccess: [{
            principalId: 3350396,
            accessType: ['REVIEW_SUBMISSIONS']
          }]
        }));
      }), ...getHandlersForTableQuery(mockRejectionReasonsTableQueryResultBundle), rest.put(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(201), ctx.json(await req.json()));
      })]
    }
  },
  args: {
    submissionId: 1
  }
}`,...(c=(a=p.parameters)==null?void 0:a.docs)==null?void 0:c.source}}};const qo=["Demo"];export{p as Demo,qo as __namedExportsOrder,yo as default};
//# sourceMappingURL=SubmissionPage.stories-a330254e.js.map
