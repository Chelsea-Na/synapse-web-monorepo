import{r as g}from"./index-8db94870.js";import{u as S}from"./use-deep-compare-effect.esm-cb3aaa60.js";import{V as O,z as T,x as R,y as A}from"./SynapseConstants-06779f3a.js";import{u as _,b3 as h,bA as k,bZ as y}from"./EntityTypeUtils-2e4d4a81.js";import"./getEndpoint-ac94413e.js";import"./jsx-runtime-095bf462.js";import{u as F,c as N}from"./uniq-6ee225a2.js";import{w as b}from"./without-8da9b9e0.js";const D={ownerId:"",firstName:"Unknown",lastName:"Unknown",userName:"Unknown",isIndividual:!1},H={name:"Unknown",id:"unknown",type:"org.sagebionetworks.repo.model.FileEntity",versionNumber:0,versionLabel:"placeholder",benefactorId:0,createdOn:"null",modifiedOn:"null",createdBy:"null",modifiedBy:"null",isLatestVersion:!0},v={id:"unknown",etag:"Unknown",name:"Unknown",description:"Unknown",ownerId:"null",createdOn:"null",contentSource:"Unknown",submissionInstructionsMessage:"Unknown",submissionReceiptMessage:"Unknown"},L=async(a,c)=>{const e=await h(a,c),n=a.filter(t=>e.results.map(u=>u.id).indexOf(t.targetId)===-1).map(t=>({...H,id:t.targetId,name:`${t.targetId}`}));return[...e.results,...n]},P=async a=>{const c=(await k(a)).children,i=a.filter(n=>c.map(t=>t.ownerId).indexOf(n)===-1).map(n=>({...D,ownerId:n,name:`Unknown User (${n})`}));return[...c,...i]},x=async(a,c)=>{const e=await y(a,c),n=a.filter(t=>e.results.map(u=>u.id).indexOf(t)===-1).map(t=>({...v,id:t,name:t}));return[...e.results,...n]};function M(a){const{ids:c,type:e}=a,{accessToken:i}=_(),[n,t]=g.useState([]),u=o=>o==="USER_PROFILE"?"ownerId":"id",w=o=>{switch(o){case"USER_PROFILE":return A;case"ENTITY_HEADER":return R;case"EVALUATION_QUEUE":return T;default:return""}},p=n.map(o=>o[u(e)]),U=c.filter(o=>o!==O),I=F(b(U,...p));return g.useEffect(()=>{((l,r)=>{if(!l.length)return;const m=sessionStorage.getItem(w(r));try{const d=m?JSON.parse(m):[],E=d.map(s=>s[u(r)]);for(const s of l)E.includes(s[u(r)])||d.push(s);sessionStorage.setItem(w(r),JSON.stringify(d))}catch{sessionStorage.setItem(w(r),JSON.stringify(l))}})(n,e)},[n,e]),S(()=>{let o=!1;return(async()=>{if(I.length>0)try{const r=Array.from(I),m=e==="ENTITY_HEADER"?r.map(s=>({targetId:s})):r,d=N(m,45),E=[];for(const s of d){let f=[];switch(e){case"USER_PROFILE":f=await P(s);break;case"ENTITY_HEADER":f=await L(s,i);break;case"EVALUATION_QUEUE":f=await x(s,i);break}E.push(...f)}o||t(s=>s.concat(...E))}catch(r){console.error("Error on data retrieval",r)}})(),()=>{o=!0}},[i,e,I]),n}export{M as u};
//# sourceMappingURL=useGetInfoFromIds-29a0b687.js.map
