import{l as m}from"./index-01aed26e.js";import{cO as s,a6 as I,a7 as _}from"./SynapseClient-e7496728.js";import{g as E,h as S,m as e}from"./MockSubmission-60bed518.js";import{M as i}from"./getEndpoint-ac94413e.js";import{g as R}from"./tableQueryHandlers-c8a157fe.js";import{m as O}from"./mockRejectionReasonsTableQueryResultBundle-59be1fd8.js";import{S as g}from"./SubmissionPage-939e0e6c.js";import{a as C}from"./userProfileHandlers-d06ddd3c.js";import"./_commonjsHelpers-042e6b4d.js";import"./util-07d2b794.js";import"./SynapseConstants-80104a60.js";import"./OrientationBanner-892f3bb7.js";import"./jsx-runtime-095bf462.js";import"./index-8db94870.js";import"./FullWidthAlert-1b71408b.js";import"./AlertTitle-ed62ac3d.js";import"./styled-6ec5f85d.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-8498a53a.js";import"./createSvgIcon-e7cd5941.js";import"./Paper-586cb0df.js";import"./IconButton-2455b4de.js";import"./ButtonBase-43867210.js";import"./emotion-react.browser.esm-b991c11c.js";import"./assertThisInitialized-081f9914.js";import"./inheritsLoose-c82a83d4.js";import"./TransitionGroupContext-f2b81dde.js";import"./useForkRef-f2aa3d66.js";import"./useIsFocusVisible-bbf13f29.js";import"./Typography-65c9d67d.js";import"./extendSxProp-fe165b74.js";import"./Stack-f176d42e.js";import"./Box-3a3e81db.js";import"./useTheme-9d382341.js";import"./Grow-93737182.js";import"./isHostComponent-fa76b8d9.js";import"./index-8ce4a492.js";import"./utils-67eec175.js";import"./ClickAwayListener-36b79525.js";import"./Tooltip-add08016.js";import"./Button-ff2bc4b7.js";import"./Link-a20b00c0.js";import"./isArray-5e3f9107.js";import"./dayjs.min-8d4ef725.js";import"./index-58d3fd43.js";import"./CheckCircleTwoTone-108bcaf3.js";import"./inputBaseClasses-bfe9dd78.js";import"./Fade-fdeca465.js";import"./mock_file_handle-ce65a0e3.js";import"./mock_user_profile-7534a641.js";import"./times-f8aa1b30.js";import"./_baseTimes-8cccc40f.js";import"./isSymbol-7c514724.js";import"./mockWiki-6d302ab0.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./cloneDeep-5dc6c7c2.js";import"./_baseClone-a8ea31d6.js";import"./_Uint8Array-0a97416b.js";import"./_MapCache-450ffba8.js";import"./_isIndex-af14b756.js";import"./DateFormatter-df4c3362.js";import"./useDataAccessSubmission-b2a7f230.js";import"./useMutation-1f092bc9.js";import"./useInfiniteQuery-1dac5014.js";import"./useAccessRequirements-2481b497.js";import"./sortBy-070b0486.js";import"./hasIn-205f1b22.js";import"./_cacheHas-1562623e.js";import"./_setToArray-3d6ec6fd.js";import"./_baseFor-d254fa1e.js";import"./_baseRest-18453c78.js";import"./_isIterateeCall-2220cc84.js";import"./ConfirmationDialog-01d75f24.js";import"./jsx-runtime_commonjs-proxy-12346db3.js";import"./createChainedFunction-0bab83cf.js";import"./ownerWindow-2c76219e.js";import"./isMuiElement-08f54e3c.js";import"./WideButton-c1c8ffa4.js";import"./IsType-28b5f4b1.js";import"./LoadingScreen-cc567c55.js";import"./LinearProgress-1a0cec8f.js";import"./Backdrop-39ff4bad.js";import"./UserCard-9ba6d0f2.js";import"./SkeletonTable-65c8faef.js";import"./Skeleton-b660800e.js";import"./IconSvg-1d8aeeb4.js";import"./ErrorOutlined-ddaff4fd.js";import"./GetAppTwoTone-5ba04530.js";import"./InfoOutlined-eb1a3679.js";import"./ToastMessage-c23277fc.js";import"./hasClass-ec9efd32.js";import"./Popover-a913aaf6.js";import"./Modal-dddb4e29.js";import"./getScrollbarSize-ac846fe6.js";import"./useTeamMembers-3a337317.js";import"./RegularExpressions-bc0adf55.js";import"./react-intersection-observer.modern-64b519d2.js";import"./EntityTypeUtils-559f777b.js";import"./EntityIcon-8ec88c7d.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./index.modern-5c0c95f2.js";import"./mapValues-045bf44c.js";import"./isPlainObject-8268aa17.js";import"./now-ee4bdf74.js";import"./unCamelCase-a3df1943.js";import"./without-ae6c3911.js";import"./isArrayLikeObject-c50b4262.js";import"./pick-b0615955.js";import"./_baseSlice-cf92e063.js";import"./uniq-f9f8c821.js";import"./RequestDownloadCard-239fd33b.js";import"./ActionRequiredCard-12ab11b1.js";import"./Icon-53535838.js";import"./factory-837f2467.js";import"./SqlFunctions-0cff2964.js";import"./useEntity-ad442e29.js";import"./SynapseTableConstants-942d2b0b.js";import"./use-deep-compare-effect.esm-ca42afac.js";import"./useDownloadList-6726bce0.js";import"./useGetQueryResultBundle-ceaf037a.js";import"./merge-44ede69b.js";import"./NoSearchResults-460db635.js";import"./NoData-59ea70fa.js";import"./index-953d39fd.js";import"./queryUtils-884dba97.js";import"./UserSearchBoxV2-55139c60.js";import"./Select-457c486b.esm-378cd906.js";import"./isNativeReflectConstruct-e378569d.js";import"./UserOrTeamBadge-a2027645.js";import"./StandaloneLoginForm-3b0ce10e.js";import"./LoginFlowBackButton-d33a8df9.js";import"./TextField-d8f861f7.js";import"./InputLabel-a1775e89.js";import"./MenuList-449dd9dd.js";import"./TextField-501693e6.js";import"./DialogTitle-5fc439b5.js";import"./RadioGroup-eb876a69.js";import"./Form-8a9b2421.js";import"./ThemeProvider-c7f6a893.js";import"./Col-228b90ad.js";import"./createWithBsPrefix-ea1779c3.js";import"./FileUpload-0d60fa29.js";import"./Divider-509ab497.js";import"./dividerClasses-252d6ebf.js";import"./AuthenticatedRequirement-8fc64eb1.js";import"./RequirementItem-e8cfb127.js";import"./ConditionalWrapper-51b8d1ed.js";import"./Avatar-d8d273ae.js";import"./CertificationRequirement-d544402c.js";import"./ValidationRequirement-94778deb.js";import"./TwoFactorAuthEnabledRequirement-bef5098a.js";import"./TwoFactorEnrollmentForm-a94ae955.js";import"./LeftRightPanel-161ba802.js";import"./ElementWithTooltip-37e5474a.js";import"./Tabs-60aade7c.js";import"./QueryCount-adbc3c26.js";import"./RangeSlider-8977bc1b.js";import"./react-sizeme-0d7fb727.js";import"./ColorGradient-fc5a110b.js";import"./colorPalette-43310703.js";import"./SelectionCriteriaPill-c1f330d1.js";import"./ErrorChip-fafbbc76.js";import"./IconList-8a4ffb30.js";import"./UserCardList-1f60bb52.js";import"./EntityLink-146cdec7.js";import"./SynapseVideo-d3761b04.js";import"./WarningDialog-b87c00f4.js";import"./RejectDataAccessRequestModal-4d7de2bb.js";import"./immutable.es-400ccb6d.js";import"./FormControlLabel-00bcccf8.js";import"./upperFirst-79e605a3.js";import"./toLower-271fcf43.js";import"./mockFileEntity-cda1be27.js";const ko={title:"Governance/SubmissionPage",component:g,parameters:{stack:"mock"}},p={name:"SubmissionPage",parameters:{msw:{handlers:[...C(i),...E(i),m.rest.get(`${i}${s(":id")}`,async(o,t,r)=>{const d=S.find(u=>o.params.id===u.id);return t(r.status(200),r.json(d))}),m.rest.get(`${i}${I(":id")}`,async(o,t,r)=>t(r.status(200),r.json(e))),m.rest.get(`${i}${_(":id")}`,async(o,t,r)=>t(r.status(200),r.json({wikiPageId:123,ownerObjectId:e.id,ownerObjectType:"ACCESS_REQUIREMENT"}))),m.rest.get(`${i}/repo/v1/accessRequirement/:id/acl`,async(o,t,r)=>t(r.status(200),r.json({id:o.id,creationDate:"2022-05-20T14:32:31.665Z",etag:"f4fbd4f2-751d-40dd-9421-1d2693231217",resourceAccess:[{principalId:3350396,accessType:["REVIEW_SUBMISSIONS"]}]}))),...R(O),m.rest.put(`${i}${s(":id")}`,async(o,t,r)=>t(r.status(201),r.json(await o.json())))]}},args:{submissionId:1}};var n,a,c;p.parameters={...p.parameters,docs:{...(n=p.parameters)==null?void 0:n.docs,source:{originalSource:`{
  name: 'SubmissionPage',
  parameters: {
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), ...getWikiHandlers(MOCK_REPO_ORIGIN),
      // Return submission based on ID
      rest.get(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        const submission = mockSubmissions.find(submission => req.params.id === submission.id);
        return res(ctx.status(200), ctx.json(submission));
      }),
      // Return a mocked access requirement
      rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json(mockManagedACTAccessRequirement));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_WIKI_PAGE_KEY(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          wikiPageId: 123,
          ownerObjectId: mockManagedACTAccessRequirement.id,
          ownerObjectType: 'ACCESS_REQUIREMENT'
        }));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}/repo/v1/accessRequirement/:id/acl\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          id: req.id,
          creationDate: '2022-05-20T14:32:31.665Z',
          etag: 'f4fbd4f2-751d-40dd-9421-1d2693231217',
          resourceAccess: [{
            principalId: 3350396,
            accessType: ['REVIEW_SUBMISSIONS']
          }]
        }));
      }), ...getHandlersForTableQuery(mockRejectionReasonsTableQueryResultBundle), rest.put(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(201), ctx.json(await req.json()));
      })]
    }
  },
  args: {
    submissionId: 1
  }
}`,...(c=(a=p.parameters)==null?void 0:a.docs)==null?void 0:c.source}}};const Do=["Demo"];export{p as Demo,Do as __namedExportsOrder,ko as default};
//# sourceMappingURL=SubmissionPage.stories-0ed08210.js.map
