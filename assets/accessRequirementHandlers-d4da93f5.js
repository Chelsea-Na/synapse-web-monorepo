import{l as d}from"./index-475615e4.js";import{d as p,e as g,O as E,f as R,g as S,b as A}from"./SynapseClient-aebf6872.js";import{M as f}from"./getEndpoint-ac94413e.js";import{e as u,f as l,a as m}from"./MockSubmission-661c1c72.js";const C=o=>[d.rest.get(`${o}${p(":id")}`,async(t,s,n)=>{let a=404,e={reason:`Mock Service worker could not find an access requirement with ID ${t.params.id}`};const i=u.find(r=>r.id.toString()===t.params.id);return i&&(e=i,a=200),s(n.status(a),n.json(e))}),d.rest.get(`${o}${g(":id")}`,async(t,s,n)=>{let a=404,e={reason:`Mock Service worker could not find an access requirement wiki page key with AR ID ${t.params.id}`};const i=l.find(r=>(r.ownerObjectType===E.ACCESS_REQUIREMENT&&r.ownerObjectId.toString())===t.params.id);return i&&(e=i,a=200),s(n.status(a),n.json(e))})],_=(o,t=":entityId",s=u)=>[d.rest.get(`${f}${R(t)}`,async(n,a,e)=>{const r={results:s,totalNumberOfResults:s.length};return a(e.status(200),e.json(r))})],k=(o,t={})=>[d.rest.get(`${o}${S(":id")}`,async(s,n,a)=>{let e;const i=u.find(c=>s.params.id===c.id.toString());if(typeof s.params.id=="string"&&s.params.id in t&&(e=t[s.params.id]),!e&&i){const c=i.concreteType==="org.sagebionetworks.repo.model.ManagedACTAccessRequirement";e={accessRequirementId:s.params.id,concreteType:c?"org.sagebionetworks.repo.model.dataaccess.ManagedACTAccessRequirementStatus":"org.sagebionetworks.repo.model.dataaccess.BasicAccessRequirementStatus",isApproved:!0,currentSubmissionStatus:c?{submissionId:m.id,submittedBy:m.submittedBy,modifiedOn:m.modifiedOn,state:A.APPROVED}:void 0}}const r=e?200:404;return n(a.status(r),a.json(e))})];export{_ as a,k as b,C as g};
//# sourceMappingURL=accessRequirementHandlers-d4da93f5.js.map
