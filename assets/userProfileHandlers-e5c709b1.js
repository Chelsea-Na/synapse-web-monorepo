import{a as c}from"./index-f6707807.js";import{H as F,U as N,V as b,W as O,X as R,Y as D,Z as A,_ as B,$ as P,a0 as H,a1 as $}from"./index-292d735c.js";import{g as h,B as M}from"./getEndpoint-ac94413e.js";import{M as l,a as v,m as y,b as L,c as U}from"./mock_user_profile-768b7803.js";import{a as k,b as w,A as g,c as m,m as E,M as _}from"./mock_file_handle-bee1f6ad.js";import{R as j}from"./RestrictionInformation-4ed2591e.js";const p=E.id,V=E.name,u="syn123",f="My mock file entity",G="45745485",i={id:u,parentId:p,dataFileHandleId:_,name:f,concreteType:"org.sagebionetworks.repo.model.FileEntity",createdBy:l.toString(),modifiedBy:v.toString(),etag:"00000000-0000-0000-0000-000000000000",versionNumber:3,versionLabel:"a label for version 3",isLatestVersion:!0,createdOn:"2021-03-02T15:05:34.973Z",modifiedOn:"2021-03-05T11:31:24.521Z"},K=[{id:u,modifiedBy:l.toString(),versionNumber:1,versionLabel:"a label for version 1",versionComment:"a comment",contentSize:"100",contentMd5:"d836adae5632872014783b05cd2f76d7",modifiedByPrincipalId:l.toString(),modifiedOn:"2021-03-02T15:05:34.973Z",isLatestVersion:!1},{id:u,modifiedBy:l.toString(),versionNumber:3,versionLabel:"a label for version 3",versionComment:"a comment about version 3",contentSize:"100",contentMd5:"bc91a4a16ccb21944fcee55275dc4574",modifiedByPrincipalId:l.toString(),modifiedOn:"2021-03-05T11:31:24.521Z",isLatestVersion:!0}],W={3:{id:u,parentId:p,dataFileHandleId:_,name:f,concreteType:"org.sagebionetworks.repo.model.FileEntity",createdBy:l.toString(),modifiedBy:l.toString(),etag:"00000000-0000-0000-0000-000000000000",versionNumber:3,versionLabel:"a label for version 3",isLatestVersion:!0},1:{id:u,parentId:p,dataFileHandleId:_,name:f,concreteType:"org.sagebionetworks.repo.model.FileEntity",createdBy:l.toString(),modifiedBy:l.toString(),etag:"00000000-0000-0000-0000-000000000000",versionNumber:1,versionLabel:"a label for version 1",isLatestVersion:!1}},T={path:[{name:"root",id:"syn4489",type:"org.sagebionetworks.repo.model.Folder"},{name:V,id:p,type:"org.sagebionetworks.repo.model.Project"},{name:f,id:u,type:"org.sagebionetworks.repo.model.FileEntity"}]},q={entity:i,entityType:F.FILE,fileHandles:[k,w],annotations:{id:u,etag:"00000000-0000-0000-0000-000000000000",annotations:{myStringKey:{type:g.STRING,value:["myValue"]},myIntegerKey:{type:g.LONG,value:[4325435345213,4321]},myFloatKey:{type:g.LONG,value:[1.5,17/13]}}},rootWikiId:G,fileName:i.name,benefactorAcl:{id:p,creationDate:"2020-11-18T20:05:06.540Z",etag:"f143bbfd-ba09-4a42-b1e9-f9368777ad9b",resourceAccess:[{principalId:l,accessType:[m.DELETE,m.CHANGE_SETTINGS,m.MODERATE,m.CHANGE_PERMISSIONS,m.UPDATE,m.READ,m.DOWNLOAD,m.CREATE]},{principalId:273948,accessType:[m.READ]},{principalId:273949,accessType:[m.READ]}]},permissions:{canView:!0,canEdit:!0,canMove:!0,canAddChild:!0,canCertifiedUserEdit:!0,canCertifiedUserAddChild:!0,isCertifiedUser:!0,canChangePermissions:!0,canChangeSettings:!0,canDelete:!0,canDownload:!0,canUpload:!0,canEnableInheritance:!0,ownerPrincipalId:3350396,canPublicRead:!0,canModerate:!0,isCertificationRequired:!0,isEntityOpenData:!1},threadCount:5,path:T,restrictionInformation:{restrictionLevel:j.OPEN,hasUnmetAccessRequirement:!1}},Z={id:i.id,name:i.name,etag:i.etag,createdOn:i.createdOn,modifiedOn:i.modifiedOn,createdBy:i.createdBy,modifiedBy:i.modifiedBy,parentId:"syn4489",concreteType:"org.sagebionetworks.repo.model.Project",myStringKey:"myValue",myIntegerKey:[4325435345213,4321],myFloatKey:[1.5,17/13]},Y={id:i.id,name:i.name,type:i.concreteType,versionNumber:3,versionLabel:"a label for version 3",benefactorId:123,createdOn:i.createdOn,modifiedOn:i.modifiedOn,createdBy:l.toString(),modifiedBy:v.toString(),isLatestVersion:!0},C={id:u,name:f,entity:i,bundle:q,json:Z,versions:W,versionInfo:K,entityHeader:Y,path:T},J=E.id,I=E.entity;C.name;const z=C.entityHeader,X="syn1234",ae="A $@*#$% terribly named Project",S={id:X,parentId:J,name:"my folder name",concreteType:"org.sagebionetworks.repo.model.Folder"},Q={id:S.id,name:S.name,type:S.concreteType,versionNumber:1,versionLabel:"Version label",benefactorId:1234,createdOn:"",modifiedOn:"",createdBy:"",modifiedBy:""},x={totalNumberOfResults:2,results:[z,Q]};I.id,I.name,I.modifiedOn,l;const ie=d=>[c.rest.get(`${d}${N(":id")}`,async(n,r,e)=>{let t=404,o={reason:`Mock Service worker could not find a user profile with ID ${n.params.id}`};const s=y.find(a=>a.id.toString()===n.params.id);return s&&s.userProfile&&(o=s.userProfile,t=200),r(e.status(t),e.json(o))}),c.rest.get(`${d}${b}`,async(n,r,e)=>{const t=U,o=200;return r(e.status(o),e.json(t))}),c.rest.get(`${h(M.REPO_ENDPOINT)}${O}`,async(n,r,e)=>{const t=L;return r(e.status(200),e.json(t))}),c.rest.get(`${d}${R(":id")}`,async(n,r,e)=>{let t=404,o={reason:`Mock Service worker could not find a user bundle with ID ${n.params.id}`};const s=y.find(a=>a.id.toString()===n.params.id);return s&&s.userBundle&&(o=s.userBundle,t=200),r(e.status(t),e.json(o))}),c.rest.get(`${d}${D}`,async(n,r,e)=>r(e.status(200),e.json(x))),c.rest.get(`${d}${A}`,async(n,r,e)=>{const t=n.url.searchParams.get("ids").split(","),o={children:y.filter(s=>t.includes(s.id.toString())).map(s=>s.userGroupHeader)};return r(e.status(200),e.json(o))}),c.rest.post(`${d}${b}`,async(n,r,e)=>{const t=(await n.json()).list,o={list:y.filter(s=>t.includes(s.id.toString())).map(s=>s.userProfile).filter(s=>s!=null)};return r(e.status(200),e.json(o))}),c.rest.get(`${d}${B}`,async(n,r,e)=>{const t=(n.url.searchParams.get("prefix")??"").toLowerCase(),o=n.url.searchParams.get("typeFilter"),s={children:y.filter(a=>!o||o===P.ALL?!0:o===P.USERS_ONLY?a.userGroupHeader.isIndividual:!a.userGroupHeader.isIndividual).filter(a=>a.userGroupHeader.userName.toLowerCase().startsWith(t)||(a.userGroupHeader.firstName||"").toLowerCase().startsWith(t)||a.userGroupHeader.displayName.toLowerCase().startsWith(t)||(a.userGroupHeader.lastName||"").toLowerCase().startsWith(t)).map(a=>a.userGroupHeader)};return r(e.status(200),e.json(s))}),c.rest.get(`${d}${H(":userId")}`,async(n,r,e)=>r(e.status(404),e.json({reason:"user has no profile image"}))),c.rest.get(`${d}${$}`,async(n,r,e)=>{var t;return r(e.status(200),e.json({email:(t=L.userProfile)==null?void 0:t.email}))}),c.rest.get(`${d}/auth/v1/2fa`,async(n,r,e)=>{const t={status:"ENABLED"};return r(e.status(200),e.json(t))})];function de(d,n,r){return c.rest.get(`${d}${O}`,async(e,t,o)=>{let s=200,a={...L,isCertified:n,isVerified:r};return t(o.status(s),o.json(a))})}export{ae as M,de as a,X as b,ie as g,C as m};
//# sourceMappingURL=userProfileHandlers-e5c709b1.js.map
