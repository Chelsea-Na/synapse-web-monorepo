import{j as o,a}from"./jsx-runtime-670450c2.js";import{r as e}from"./index-f1f749bf.js";import{d as i}from"./ToastMessage-47a48bcd.js";import{a9 as b,h as x,ct as F}from"./SynapseContext-1052c859.js";import{F as d}from"./FormGroup-08e5002f.js";import{c,b as l}from"./FormLabel-897d2462.js";import{B as I}from"./Button-7d415009.js";import"./_commonjsHelpers-042e6b4d.js";import"./FullWidthAlert-9afcbd85.js";import"./Alert-4131c431.js";import"./extends-98964cd2.js";import"./objectWithoutPropertiesLoose-4f48578a.js";import"./hook-c05d8d9f.js";import"./createWithBsPrefix-e09f51dd.js";import"./divWithClassName-95211f4d.js";import"./Transition-550b3899.js";import"./inheritsLoose-d541526f.js";import"./setPrototypeOf-0bb37fbe.js";import"./index-96c5f47c.js";import"./TransitionGroupContext-ab7f4b4e.js";import"./index-4d501b15.js";import"./Typography-81d78865.js";import"./styled-42ab246b.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-eaaa54fe.js";import"./extendSxProp-63b32eb6.js";import"./Clear-16219090.js";import"./useTheme-dfe229ea.js";import"./isHostComponent-fa76b8d9.js";import"./useForkRef-dd8a6e5c.js";import"./useIsFocusVisible-83eed526.js";import"./SvgIcon-74ace867.js";import"./assertThisInitialized-081f9914.js";import"./removeClass-164fd327.js";import"./hasClass-ec9efd32.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./isArray-5e3f9107.js";import"./isSymbol-7c514724.js";import"./Fade-49f10167.js";import"./getEndpoint-5374ab4d.js";import"./SynapseConstants-41b9b1f3.js";import"./IconSvg-bec9c070.js";import"./Box-b7ffd230.js";import"./Button-86068eae.js";import"./ButtonBase-4a394d72.js";import"./emotion-react.browser.esm-e553699c.js";import"./Col-1f1afacc.js";const w=()=>{const{accessToken:s}=b(),[h,_]=e.useState(""),[m,v]=e.useState(""),[u,S]=e.useState(""),[p,g]=e.useState();e.useEffect(()=>{async function r(){const t=await x(s);g(t)}s?r():g(void 0)},[s]);const P=async r=>{r.preventDefault();try{if(m!==u)i("New password and confirm password does not match.","danger");else if(s){const t={newPassword:m,concreteType:"org.sagebionetworks.repo.model.auth.ChangePasswordWithCurrentPassword",username:p==null?void 0:p.userName,currentPassword:h};await F(t,s).then(()=>i("Successfully changed","success")).catch(N=>i(N.reason,"danger"))}}catch(t){i(t.reason,"danger")}};return o("div",{className:"changePassword",children:a("form",{onSubmit:r=>{P(r)},children:[a(d,{controlId:"oldPassword",children:[o(c,{children:"Current Password"}),o(l,{type:"password",onChange:r=>_(r.target.value),value:h})]}),a(d,{controlId:"newPassword",children:[o(c,{children:"New Password"}),o(l,{type:"password",onChange:r=>v(r.target.value),value:m})]}),a(d,{controlId:"confirmPassword",children:[o(c,{children:"Confirm Password"}),o(l,{type:"password",onChange:r=>S(r.target.value),value:u})]}),o(I,{type:"submit",onSubmit:r=>{P(r)},children:"Change Password"})]})})};try{w.displayName="ChangePassword",w.__docgenInfo={description:"",displayName:"ChangePassword",props:{}}}catch{}const vr={title:"Authentication/ChangePassword",component:w},n={};var f,C,y;n.parameters={...n.parameters,docs:{...(f=n.parameters)==null?void 0:f.docs,source:{originalSource:"{}",...(y=(C=n.parameters)==null?void 0:C.docs)==null?void 0:y.source}}};const Sr=["ChangePasswordDemo"];export{n as ChangePasswordDemo,Sr as __namedExportsOrder,vr as default};
//# sourceMappingURL=ChangePassword.stories-b5d56191.js.map
