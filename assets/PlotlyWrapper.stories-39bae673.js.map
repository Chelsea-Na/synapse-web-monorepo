{"version":3,"file":"PlotlyWrapper.stories-39bae673.js","sources":["../../src/lib/containers/PlotlyWrapper.tsx","../../stories/PlotlyWrapper.stories.ts"],"sourcesContent":["import Plotly from 'plotly.js-basic-dist'\nimport * as React from 'react'\nimport createPlotlyComponent from 'react-plotly.js/factory'\n\n// We must use the createPlotlyComponent factory method because we use plotly.js-basic-dist and not plotly.js\nconst Plot = createPlotlyComponent(Plotly)\n\nexport type PlotlyWrapperProps = {\n  data: Plotly.Data[]\n  layout?: Partial<Plotly.Layout>\n  config?: Partial<Plotly.Config>\n  useResizeHandler?: boolean\n  className?: string\n  containerWidth?: number\n  plotStyle?: React.CSSProperties\n}\n\nconst PlotlyWrapper: React.FC<PlotlyWrapperProps> = props => {\n  const {\n    data,\n    layout,\n    config,\n    className,\n    containerWidth,\n    useResizeHandler,\n    plotStyle,\n  } = props\n  const hasData = !!(data && data.length)\n\n  return (\n    <div className={className}>\n      {!hasData && (\n        <>\n          <div className={'chart-nodata'} style={{ width: containerWidth }}>\n            <span>Data Unavailable</span>\n          </div>\n        </>\n      )}\n      {hasData && (\n        <Plot\n          data={data}\n          layout={layout ?? {}}\n          config={config}\n          useResizeHandler={useResizeHandler}\n          style={plotStyle}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default PlotlyWrapper\n","import { Meta, StoryObj } from '@storybook/react';\nimport PlotlyWrapper from '../src/lib/containers/PlotlyWrapper';\nimport rawData from '../mocks/distribution_data.json';\nconst meta = ({\n  title: 'Components/PlotlyWrapper',\n  component: PlotlyWrapper\n} satisfies Meta);\nexport default meta;\ntype Story = StoryObj<typeof meta>;\nconst plotConfigs = {\n  displayModeBar: false\n};\nconst boxPlotData = [{\n  x: [1, 2, 3, 4, 4, 4, 8, 9, 10],\n  name: '',\n  marker: {\n    color: 'rgba(229, 220, 247, 1)' // \"rgba(166, 132, 238, 0.25)\",\n    // line: {\n    //   width: 1\n    // }\n  },\n\n  type: 'box',\n  boxmean: false,\n  orientation: 'h',\n  whiskerwidth: 1,\n  hoverinfo: 'x'\n}, {\n  x: [2.3],\n  y: [''],\n  name: '',\n  marker: {\n    symbol: 'line-ns',\n    color: 'rgba(166, 132, 238, 1)'\n  },\n  hovertemplate: 'Score: %{x}'\n}];\nconst boxPlotLayout = {\n  width: 300,\n  height: 110,\n  margin: {\n    t: 10\n  },\n  xaxis: {\n    visible: false\n  }\n};\nconst barColors = rawData.geneticsscore.distribution.map((item, ind) => ind === 1 ? 'rgba(166, 132, 238, 1)' : 'rgba(166, 132, 238, 0.25)');\nconst sharedBarData = {\n  type: 'bar',\n  marker: {\n    color: barColors\n  },\n  width: 0.2\n};\nconst geneticsscoreData = [{\n  x: Object.values(rawData.geneticsscore.bins).map(num => num.toFixed(2)),\n  y: Object.values(rawData.geneticsscore.distribution),\n  ...sharedBarData\n}];\n\n// Additional info to customize axis: https://plotly.com/javascript/axes/\nconst barLayout = {\n  width: 300,\n  xaxis: {\n    title: 'Gene Score'.toUpperCase(),\n    titlefont: {\n      size: 12\n    },\n    tick0: 0,\n    dtick: 0.3\n  },\n  yaxis: {\n    title: 'Number of Genes'.toUpperCase(),\n    titlefont: {\n      size: 12\n    }\n  },\n  plot_bgcolor: 'rgba(236, 236, 236, 0.25)'\n};\nconst specialBarLayout = {\n  ...barLayout,\n  annotations: [{\n    x: 0.3,\n    y: 5149,\n    text: '2.5',\n    ax: 0,\n    ay: -10\n  }]\n};\nexport const BarChart: Story = {\n  args: {\n    data: geneticsscoreData,\n    layout: specialBarLayout,\n    containerWidth: 300,\n    config: plotConfigs\n  }\n};\nexport const BoxPlot: Story = {\n  args: {\n    data: boxPlotData,\n    layout: boxPlotLayout,\n    containerWidth: 300,\n    config: plotConfigs,\n    className: 'chart-boxplot'\n  }\n};\nexport const NoData: Story = {\n  args: {\n    data: [],\n    layout: specialBarLayout,\n    containerWidth: 300,\n    config: plotConfigs\n  }\n};\nBarChart.parameters = {\n  ...BarChart.parameters,\n  docs: {\n    ...BarChart.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    data: geneticsscoreData,\\n    layout: specialBarLayout,\\n    containerWidth: 300,\\n    config: plotConfigs\\n  }\\n}\",\n      ...BarChart.parameters?.docs?.source\n    }\n  }\n};\nBoxPlot.parameters = {\n  ...BoxPlot.parameters,\n  docs: {\n    ...BoxPlot.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    data: boxPlotData,\\n    layout: boxPlotLayout,\\n    containerWidth: 300,\\n    config: plotConfigs,\\n    className: 'chart-boxplot'\\n  }\\n}\",\n      ...BoxPlot.parameters?.docs?.source\n    }\n  }\n};\nNoData.parameters = {\n  ...NoData.parameters,\n  docs: {\n    ...NoData.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    data: [],\\n    layout: specialBarLayout,\\n    containerWidth: 300,\\n    config: plotConfigs\\n  }\\n}\",\n      ...NoData.parameters?.docs?.source\n    }\n  }\n};"],"names":["Plot","createPlotlyComponent","Plotly","PlotlyWrapper","props","data","layout","config","className","containerWidth","useResizeHandler","plotStyle","hasData","jsxs","jsx","Fragment","meta","plotConfigs","boxPlotData","boxPlotLayout","barColors","rawData","item","ind","sharedBarData","geneticsscoreData","num","barLayout","specialBarLayout","BarChart","BoxPlot","NoData","_a","_c","_b"],"mappings":"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"}