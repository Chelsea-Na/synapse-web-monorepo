import{A as p}from"./AccessRequirementSearchBox-bc9621c2.js";import{d as e}from"./ToastMessage-808a1c1f.js";import"./jsx-runtime-670450c2.js";import"./index-f1f749bf.js";import"./_commonjsHelpers-042e6b4d.js";import"./extends-98964cd2.js";import"./Select-40119e12.esm-b3b0de5c.js";import"./toConsumableArray-85fcc1b5.js";import"./assertThisInitialized-081f9914.js";import"./setPrototypeOf-0bb37fbe.js";import"./getPrototypeOf-e4242ba0.js";import"./isNativeReflectConstruct-ff095bc2.js";import"./emotion-react.browser.esm-515d14f4.js";import"./styled-9b57412c.js";import"./objectWithoutPropertiesLoose-4f48578a.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-eaaa54fe.js";import"./index-96c5f47c.js";import"./SynapseContext-3300ccd2.js";import"./inheritsLoose-d541526f.js";import"./Fade-d5cf0a46.js";import"./useTheme-5ece020a.js";import"./TransitionGroupContext-ab7f4b4e.js";import"./Clear-ddba1ff0.js";import"./useIsFocusVisible-c754a498.js";import"./SvgIcon-a4f5cf68.js";import"./isArray-a82322d9.js";import"./Button-7d415009.js";import"./index-4d501b15.js";import"./getEndpoint-5374ab4d.js";import"./IconSvg-55b995b5.js";import"./FullWidthAlert-bcde5cdd.js";import"./hook-c05d8d9f.js";import"./createWithBsPrefix-e09f51dd.js";import"./divWithClassName-f9d24722.js";import"./Typography-f91bff1f.js";import"./IconButton-6e69f6c0.js";import"./ButtonBase-a1be1f9a.js";import"./Link-ce35937e.js";import"./Button-475c86c5.js";import"./SynapseConstants-6db32387.js";import"./useAccessRequirements-594a389e.js";import"./useMutation-1c752b99.js";import"./useInfiniteQuery-d97d5171.js";import"./queryKeys-dd803d9a.js";import"./Skeleton-38aaf623.js";import"./removeClass-164fd327.js";import"./hasClass-ec9efd32.js";import"./uniqueId-9feaf103.js";import"./toString-3056297c.js";import"./isSymbol-b6149709.js";const io={title:"Governance/AccessRequirementSearchBox",component:p},o={args:{onChange:m=>{e("Selected id: "+m,"info")}}};var r,t,i;o.parameters={...o.parameters,docs:{...(r=o.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    onChange: id => {
      displayToast('Selected id: ' + id, 'info');
    }
  }
}`,...(i=(t=o.parameters)==null?void 0:t.docs)==null?void 0:i.source}}};const mo=["AccessRequirementSearchBoxDemo"];export{o as AccessRequirementSearchBoxDemo,mo as __namedExportsOrder,io as default};
//# sourceMappingURL=AccessRequirementSearchBox.stories-9418ac42.js.map
