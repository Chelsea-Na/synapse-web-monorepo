import{r as T}from"./index-76fb7be0.js";import{aZ as I,h as u,m,n as y,l as g,a_ as h}from"./SynapseClient-02f8db3d.js";import{u as E}from"./useMutation-6a9858d5.js";import{u as K}from"./useQueries-530dfb05.js";import{u as P}from"./useInfiniteQuery-bd64c694.js";import"./getEndpoint-ac94413e.js";import"./OrientationBanner-a1ca5cdb.js";import"./jsx-runtime-9dc53467.js";import{i as F}from"./isEqualWith-86a8a0b7.js";import{a as C}from"./isArray-5e3f9107.js";import{i as S}from"./_Map-02912bad.js";import{i as w,o as Q,p as v,a as q}from"./pick-e2ff1673.js";import{g as A}from"./InfiniteQueryUtils-54ae7e6b.js";const M=(e,t)=>{if(!(C(e)||C(t))&&!(!S(e)||!S(t))&&!(!w(e,void 0)&&!w(t,void 0)))return F(Q(e,a=>a===void 0),Q(t,a=>a===void 0),M)};function G(e,t){return F(e,t,M)}function J(e,t){const a=new Set;for(const s of e)a.add(s.id);for(const s of t)if(s.id!=null&&!a.has(s.id))throw new Error(`Proposed schema contains a new column model with ID ${s.id} that is not in the old schema.`)}async function U(e,t,a,s){J(a,s);const n=new Map;for(const o of a)n.set(o.id,o);let c=[];for(const o of s){const i={...o};if(i.id!=null){const d=n.get(i.id);d!=null&&!G(d,i)&&delete i.id}c.push(i)}const r=(await I(e,c)).list,l=[],f=new Set;for(let o=0;o<s.length;o++){const i=s[o].id??null,d=r[o].id;i!=null&&f.add(i),f.add(d),i!=null&&i!==d?l.push({oldColumnId:i,newColumnId:d}):i==null&&l.push({oldColumnId:null,newColumnId:d})}for(const o of a){const i=o.id;f.has(i)||l.push({oldColumnId:i,newColumnId:null})}return{concreteType:"org.sagebionetworks.repo.model.table.TableUpdateTransactionRequest",entityId:t,changes:[{concreteType:"org.sagebionetworks.repo.model.table.TableSchemaChangeRequest",entityId:t,changes:l,orderedColumnIds:r.map(o=>o.id)}]}}function k(e,t,a){return e.invalidateQueries(t.getEntityQueryKey(a))}function X(e,t,a){const{accessToken:s,keyFactory:n}=u();return m(n.getEntityVersionQueryKey(e,t),()=>y.getEntity(s,e,t==null?void 0:t.toString()),a)}function Y(e,t){const{accessToken:a,keyFactory:s}=u(),n=e.map(o=>o.id).join(),c=T.useMemo(()=>e.map(o=>({queryKey:s.getEntityVersionQueryKey(o.id,o.versionNumber),queryFn:()=>y.getEntity(a,o.id,o.versionNumber)})),[n]),r=K(c),l=r.some(o=>o.isLoading),f=r.filter(o=>o.data!==void 0).map(o=>o.data);return T.useMemo(()=>(!l&&(t!=null&&t.onSuccess)&&t.onSuccess(f),{isLoading:l,data:f}),[l,n])}function H(e){const t=g(),{accessToken:a,keyFactory:s}=u();return E(n=>y.createEntity(n,a),{onSuccess:async(n,c,r)=>{await k(t,s,n.id),t.setQueryData(s.getEntityQueryKey(n.id),n),e!=null&&e.onSuccess&&await e.onSuccess(n,c,r)}})}function p(e){const t=g(),{accessToken:a,keyFactory:s}=u();return E(n=>y.updateEntity(n,a),{...e,onSuccess:async(n,c,r)=>{await k(t,s,n.id),t.setQueryData(s.getEntityQueryKey(n.id),n),e!=null&&e.onSuccess&&await e.onSuccess(n,c,r)}})}function ee(e){const t=g(),{accessToken:a,keyFactory:s}=u();return E(n=>y.deleteEntity(a,n),{...e,onSuccess:async(n,c,r)=>{await k(t,s,c),e!=null&&e.onSuccess&&await e.onSuccess(n,c,r)}})}function te(e,t){const{accessToken:s,keyFactory:n}=u();return P(n.getEntityVersionsQueryKey(e),async c=>await y.getEntityVersions(e,s,c.pageParam,200),{...t,getNextPageParam:A})}function L(e){return v(e,h[e.concreteType])}function R(e){return q(e,h[e.concreteType])}function ne(e,t,a){const{accessToken:s,keyFactory:n}=u(),c=m(n.getEntityJsonQueryKey(e,t),()=>y.getEntityJson(e,t,s),a),r=T.useMemo(()=>(c==null?void 0:c.data)==null?void 0:L(c.data),[c.data]),l=T.useMemo(()=>(c==null?void 0:c.data)==null?void 0:R(c.data),[c.data]);return{...c,entityMetadata:r,annotations:l}}function se(e){const t=g(),{accessToken:a,keyFactory:s}=u();return E(n=>{const c=n.id;return y.updateEntityJson(c,n,a)},{...e,onSuccess:async(n,c,r)=>{const l=n.id;await k(t,s,l),t.setQueryData(s.getEntityJsonQueryKey(l,!1),n),e!=null&&e.onSuccess&&await e.onSuccess(n,c,r)}})}function ae(e,t){const{accessToken:a,keyFactory:s}=u();return m(s.getEntityPathQueryKey(e),()=>y.getEntityPath(e,a),t)}function ce(e,t){const{accessToken:a,keyFactory:s}=u();return m(s.getEntityPathQueryKey(e),()=>y.getEntityACL(e,a),t)}function oe(e,t){const{accessToken:a,keyFactory:s}=u();return m(s.getEntityAliasQueryKey(e),()=>y.getEntityAlias(e,a),t)}function re(e,t,a){const{accessToken:s,keyFactory:n}=u();return m(n.getEntityEvaluationsQueryKey(e),()=>y.getAllEntityEvaluations(e,t,s),a)}function ie(e,t){const{accessToken:a,keyFactory:s}=u();return m(s.getEntityAliasQueryKey(e),()=>y.getEntityPermissions(e,a),t)}function ue(e){const t=g(),{accessToken:a,keyFactory:s}=u();return E(n=>y.updateEntityACL(n,a),{...e,onSuccess:async(n,c,r)=>{await k(t,s,n.id),t.setQueryData(s.getEntityACLQueryKey(n.id),n),e!=null&&e.onSuccess&&await e.onSuccess(n,c,r)}})}function ye(e){const t=g(),{accessToken:a,keyFactory:s}=u();return E(async n=>{const c=await U(a,n.entityId,n.originalColumnModels,n.newColumnModels);return y.updateTable(c,a)},{...e,onSuccess:async(n,c,r)=>{await k(t,s,c.entityId),e!=null&&e.onSuccess&&await e.onSuccess(n,c,r)}})}export{ye as a,ae as b,p as c,ne as d,H as e,Y as f,re as g,ue as h,k as i,oe as j,ce as k,ie as l,se as m,ee as n,te as o,X as u};
