{"version":3,"file":"FileUpload-046c8685.js","sources":["../../src/lib/containers/FileUpload.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { uploadFile } from '../utils/SynapseClient'\nimport { useSynapseContext } from '../utils/SynapseContext'\nimport { FileUploadComplete, UploadCallbackResp } from '../utils/synapseTypes'\n\nexport type FileUploadProps = {\n  id?: string\n  label?: string\n  variant?: string // allow you to change the appearance of the button to link (see react bootstrap doc)\n  uploadCallback?: (response: UploadCallbackResp) => void\n  context?: any // to distinguish which file was uploaded if we have several FileUpload components on the same page\n}\n\nconst FileUpload: React.FC<FileUploadProps> = props => {\n  const { id, variant, label = 'Browse...', uploadCallback, context } = props\n  const { accessToken } = useSynapseContext()\n  const hiddenFileInput = React.useRef<HTMLInputElement>(null)\n\n  const clickHandler = () => {\n    if (hiddenFileInput?.current!) {\n      hiddenFileInput.current?.click()\n    }\n  }\n\n  const changeHandler = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      const file = e.target.files[0]\n      try {\n        const resp: FileUploadComplete = await uploadFile(\n          accessToken,\n          file.name,\n          file,\n        )\n        uploadCallback?.({\n          success: true,\n          resp: resp,\n          context: context,\n        })\n      } catch (e) {\n        console.log('FileUpload: fail to upload file', e)\n        uploadCallback?.({\n          success: false,\n          error: e,\n        })\n      }\n    }\n  }\n\n  return (\n    <>\n      <input\n        type={'file'}\n        ref={hiddenFileInput}\n        onChange={changeHandler}\n        style={{ display: 'none' }}\n      />\n      <Button id={id} variant={variant} onClick={clickHandler}>\n        {label}\n      </Button>\n    </>\n  )\n}\n\nexport default FileUpload\n"],"names":["FileUpload","props","id","variant","label","uploadCallback","context","accessToken","useSynapseContext","hiddenFileInput","React.useRef","jsxs","Fragment","jsx","e","file","resp","uploadFile","e2","Button","_a","FileUpload$1"],"mappings":"8LAcA,MAAAA,EAAAC,GAAA,CACE,KAAA,CAAA,GAAAC,EAAA,QAAAC,EAAA,MAAAC,EAAA,YAAA,eAAAC,EAAA,QAAAC,CAAA,EAAAL,EACA,CAAA,YAAAM,GAAAC,IACAC,EAAAC,SAAA,IAAA,EAgCA,OAAAC,EAAAC,EAAA,CAAA,SAAA,CAEIC,EAAA,QAAC,CAAA,KAAA,OACO,IAAAJ,EACD,SA5BX,MAAAK,GAAA,CACE,GAAAA,EAAA,OAAA,MAAA,CACE,MAAAC,EAAAD,EAAA,OAAA,MAAA,CAAA,EACA,GAAA,CACE,MAAAE,EAAA,MAAAC,EAAuCV,EACrCQ,EAAA,KACKA,CACL,EAEFV,GAAA,MAAAA,EAAA,CAAiB,QAAA,GACN,KAAAW,EACT,QAAAV,CACA,EACD,OAAAY,EAAA,CAED,QAAA,IAAA,kCAAAA,CAAA,EACAb,GAAA,MAAAA,EAAA,CAAiB,QAAA,GACN,MAAAa,CACF,EACR,CACH,CACF,EAQc,MAAA,CAAA,QAAA,MAAA,CACe,CAAA,EAC3BL,EAAAM,EAAA,CAAA,GAAAjB,EAAA,QAAAC,EAAA,QArCJ,IAAA,OACEM,GAAA,MAAAA,EAAA,WACEW,EAAAX,EAAA,UAAA,MAAAW,EAAA,QACF,EAkCE,SAAAhB,EAAA,CAGA,CAAA,CAAA,CAGN,EAEAiB,EAAArB"}