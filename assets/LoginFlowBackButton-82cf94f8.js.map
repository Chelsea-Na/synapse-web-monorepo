{"version":3,"file":"LoginFlowBackButton-82cf94f8.js","sources":["../../src/lib/utils/hooks/useLogin.ts","../../../../node_modules/.pnpm/mui-one-time-password-input@1.0.4_7tz6pw5yjfnj6pyam4y5hsxs3m/node_modules/mui-one-time-password-input/dist/mui-one-time-password-input.es.js","../../src/lib/containers/auth/TOTPForm.tsx","../../src/lib/containers/auth/UsernamePasswordForm.tsx","../../src/lib/containers/auth/LoginForm.tsx","../../src/lib/containers/auth/LoginFlowBackButton.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { SynapseClient } from '../index'\nimport { LoginResponse } from '../synapseTypes'\nimport {\n  TwoFactorAuthLoginRequest,\n  TwoFactorAuthOtpType,\n} from '../synapseTypes/TwoFactorAuthLoginRequest'\nimport { TwoFactorAuthErrorResponse } from '../synapseTypes/ErrorResponse'\nimport { AUTHENTICATION_RECEIPT_LOCALSTORAGE_KEY } from '../SynapseConstants'\n\nexport type UseLoginReturn = {\n  step:\n    | 'CHOOSE_AUTH_METHOD'\n    | 'USERNAME_PASSWORD'\n    | 'VERIFICATION_CODE'\n    | 'RECOVERY_CODE'\n    | 'LOGGED_IN'\n  onStepChange: Dispatch<SetStateAction<UseLoginReturn['step']>>\n  submitUsernameAndPassword: (\n    username: string,\n    password: string,\n  ) => Promise<void>\n  submitOneTimePassword: (\n    code: string,\n    /* The type of one time password code that can be used to authenticate through two-factor authentication. Default is based on current value of `step` */\n    otpType?: TwoFactorAuthOtpType,\n  ) => Promise<void>\n  errorMessage: string | undefined\n}\n\n/**\n * Stateful hook that manages logging into Synapse\n */\nexport default function useLogin(\n  sessionCallback?: () => void,\n  twoFaErrorResponse?: TwoFactorAuthErrorResponse,\n): UseLoginReturn {\n  const [step, setStep] = useState<UseLoginReturn['step']>('CHOOSE_AUTH_METHOD')\n  const [errorMessage, setErrorMessage] = useState<string>()\n  const [userId, setUserId] = useState<number>()\n  const [twoFaToken, setTwoFaToken] = useState<string>()\n\n  /*\n   * In SWC, if logging in with OAuth, the servlet will call POST /oauth2/session2 to get the access token.\n   *\n   * If the user has 2FA enabled, the servlet will receive a 401 with the userId and twoFaToken in the response.\n   * The servlet will then redirect the user to the login page with the userId and twoFaToken in the searchParams.\n   *\n   * This effect will check if the search params are present, and change the step to 'VERIFICATION_CODE' if they are.\n   */\n  useEffect(() => {\n    // Replace the hash with a slash to handle SWC, which uses a hash in the URL. Otherwise, the searchParams aren't found\n    const fullUrl: URL = new URL(window.location.href.replaceAll('#', '/'))\n\n    const { searchParams } = fullUrl\n    if (searchParams) {\n      const userId = searchParams.get('userId')\n      const twoFaToken = searchParams.get('twoFaToken')\n      if (userId && twoFaToken) {\n        setUserId(parseInt(userId, 10))\n        setTwoFaToken(twoFaToken)\n        if (\n          !['VERIFICATION_CODE', 'RECOVERY_CODE', 'LOGGED_IN'].includes(step)\n        ) {\n          setStep('VERIFICATION_CODE')\n        }\n      }\n    }\n  }, [step])\n\n  /*\n   * In client-only apps (like Portals), if logging in with OAuth, the client app will call POST /oauth2/session2 to get the access token.\n   *\n   * If the user has 2FA enabled, the client app will receive a 401 with the userId and twoFaToken in the response.\n   *\n   * The app can pass the error response as a prop/argument, and we'll use it here to jump straight to the VERIFICATION_CODE step.\n   */\n  useEffect(() => {\n    if (twoFaErrorResponse) {\n      setTwoFaToken(twoFaErrorResponse.twoFaToken)\n      setUserId(twoFaErrorResponse.userId)\n      if (!['VERIFICATION_CODE', 'RECOVERY_CODE', 'LOGGED_IN'].includes(step)) {\n        setStep('VERIFICATION_CODE')\n      }\n    }\n  }, [twoFaErrorResponse])\n\n  async function finishLogin(loginResponse: LoginResponse) {\n    await SynapseClient.setAccessTokenCookie(loginResponse.accessToken)\n    localStorage.setItem(\n      AUTHENTICATION_RECEIPT_LOCALSTORAGE_KEY,\n      loginResponse.authenticationReceipt,\n    )\n    setStep('LOGGED_IN')\n\n    if (sessionCallback) {\n      sessionCallback()\n    }\n  }\n\n  const submitUsernameAndPassword: UseLoginReturn['submitUsernameAndPassword'] =\n    async (username, password) => {\n      setErrorMessage(undefined)\n      try {\n        const authenticationReceipt = localStorage.getItem(\n          AUTHENTICATION_RECEIPT_LOCALSTORAGE_KEY,\n        )\n        const data = await SynapseClient.login(\n          username,\n          password,\n          authenticationReceipt,\n        )\n        if ('errorCode' in data) {\n          setStep('VERIFICATION_CODE')\n          setTwoFaToken(data.twoFaToken)\n          setUserId(data.userId)\n        } else {\n          await finishLogin(data)\n        }\n      } catch (err) {\n        setErrorMessage(err.reason)\n      }\n    }\n\n  const submitOneTimePassword: UseLoginReturn['submitOneTimePassword'] = async (\n    code,\n    otpType = step === 'RECOVERY_CODE' ? 'RECOVERY_CODE' : 'TOTP',\n  ) => {\n    setErrorMessage(undefined)\n    if (twoFaToken == null || userId == null) {\n      // This could happen if the 2FA component exists on its own route, and the user directly navigates to it without first logging in with credentials/OAuth\n      setErrorMessage(\n        'You did not first log in with your password or a third-party identity provider.',\n      )\n      return\n    }\n    const request: TwoFactorAuthLoginRequest = {\n      userId: userId,\n      twoFaToken: twoFaToken,\n      otpCode: code,\n      otpType: otpType,\n    }\n    try {\n      const loginResponse = await SynapseClient.loginWith2fa(request)\n      await finishLogin(loginResponse)\n    } catch (e) {\n      setErrorMessage(e.reason)\n      if (\n        // The twoFaToken wasn't transmitted correctly\n        e.reason.includes('The provided twoFaToken is invalid') ||\n        // The user waited too long to enter the code.\n        e.reason.includes('Token has expired')\n      ) {\n        console.warn(e)\n        // Instruct the user refresh to start over.\n        setErrorMessage('Something went wrong. Refresh the page and try again.')\n        // If the 2FA token is in the search parameters, remove it so the user doesn't just get the same error again.\n        if (window.location.href.includes('twoFaToken')) {\n          window.history.replaceState(\n            {},\n            document.title,\n            // using regex because SWC hashbang doesn't work with URLSearchParams\n            window.location.href.replaceAll(/(twoFaToken|userId)=[^&]*&?/g, ''),\n          )\n        }\n      }\n    }\n  }\n\n  return {\n    step,\n    onStepChange: setStep,\n    submitUsernameAndPassword,\n    submitOneTimePassword: submitOneTimePassword,\n    errorMessage,\n  }\n}\n","import T from \"react\";\nimport v from \"@mui/material/Box\";\nimport { styled as L } from \"@mui/material/styles\";\nimport W from \"@mui/material/TextField\";\nimport { jsx as C } from \"react/jsx-runtime\";\nconst q = L(W)`\n  input {\n    text-align: center;\n  }\n`, z = {\n  TextFieldStyled: q\n}, G = (n) => /* @__PURE__ */ C(z.TextFieldStyled, {\n  ...n\n}), F = {\n  left: \"ArrowLeft\",\n  right: \"ArrowRight\",\n  backspace: \"Backspace\"\n};\nfunction H(n, o) {\n  return n <= 0 ? [] : Array.from({ length: n }, o);\n}\nfunction J(n, o, i) {\n  return n.map((a, s) => o === s ? i : a);\n}\nfunction w(n) {\n  return n.join(\"\");\n}\nfunction B(n, o) {\n  return [...n, o];\n}\nfunction Q(n, o, i) {\n  return n.reduce(\n    (a, s, d) => {\n      const { characters: p, restArrayMerged: f } = a;\n      if (d < i)\n        return {\n          restArrayMerged: f,\n          characters: B(p, s)\n        };\n      const [h, ...g] = f;\n      return {\n        restArrayMerged: g,\n        characters: B(p, h || \"\")\n      };\n    },\n    {\n      restArrayMerged: o,\n      characters: []\n    }\n  ).characters;\n}\nfunction U(n) {\n  return n.split(\"\");\n}\nconst X = T.forwardRef((n, o) => {\n  const {\n    value: i,\n    length: a,\n    onChange: s,\n    TextFieldsProps: d,\n    onComplete: p,\n    validateChar: f,\n    className: h,\n    ...g\n  } = n, {\n    onPaste: P,\n    onFocus: R,\n    onKeyDown: S,\n    className: k,\n    ...M\n  } = d || {}, u = H(a, (e, r) => ({\n    character: i[r] || \"\",\n    inputRef: T.createRef()\n  })), m = (e) => u.findIndex(({\n    inputRef: r\n  }) => r.current === e), D = () => u.map(({\n    character: e\n  }) => e), E = (e, r) => {\n    const t = J(D(), e, r);\n    return w(t);\n  }, x = (e) => {\n    u[e]?.inputRef.current?.focus();\n  }, l = (e) => {\n    u[e]?.inputRef.current?.select();\n  }, y = (e) => {\n    e + 1 !== a && (u[e + 1].character ? l(e + 1) : x(e + 1));\n  }, N = (e) => {\n    e > 0 && l(e - 1);\n  }, K = (e) => {\n    const r = e.target.value[0] || \"\", t = m(e.target);\n    if (typeof f == \"function\" && !f(r, t))\n      return;\n    const c = E(t, r);\n    s?.(c), c.length === a && p?.(c), r !== \"\" ? c.length < a ? y(c.length - 1) : y(t) : c[t] ? l(t) : N(t);\n  }, V = (e) => {\n    e.preventDefault(), e.target.select(), R?.(e);\n  }, b = (e) => {\n    const r = e.target, t = m(r);\n    r.value === e.key ? (e.preventDefault(), y(t)) : !r.value && F.backspace === e.key || F.left === e.key ? (e.preventDefault(), l(t - 1)) : F.right === e.key && (e.preventDefault(), l(t + 1)), S?.(e);\n  }, j = (e) => {\n    e.preventDefault();\n    const r = e.target, t = e.clipboardData.getData(\"text/plain\"), c = m(r), $ = D(), A = Q($, U(t), c), O = A.findIndex((Y, _) => _ > c && Y === \"\"), I = w(A);\n    if (s?.(I), I.length === a) {\n      p?.(I), x(a - 1);\n      return;\n    }\n    O !== -1 && x(O), P?.(e);\n  };\n  return /* @__PURE__ */ C(v, {\n    display: \"flex\",\n    gap: \"20px\",\n    alignItems: \"center\",\n    ref: o,\n    className: `MuiOtpInput-Box ${h || \"\"}`,\n    ...g,\n    children: u.map(({\n      character: e,\n      inputRef: r\n    }, t) => /* @__PURE__ */ C(G, {\n      autoComplete: \"one-time-code\",\n      value: e,\n      inputRef: r,\n      className: `MuiOtpInput-TextField MuiOtpInput-TextField-${t + 1} ${k || \"\"}`,\n      onPaste: j,\n      onFocus: V,\n      onChange: K,\n      onKeyDown: b,\n      ...M\n    }, t))\n  });\n});\nX.defaultProps = {\n  value: \"\",\n  length: 4,\n  validateChar: () => !0,\n  onChange: () => {\n  },\n  onComplete: () => {\n  },\n  TextFieldsProps: {}\n};\nexport {\n  X as MuiOtpInput\n};\n","import React from 'react'\nimport { Box, Button } from '@mui/material'\nimport { MuiOtpInput } from 'mui-one-time-password-input'\n\nconst TOTP_LENGTH = 6\nconst DIGIT_CHARACTERS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\n\ntype TOTPFormProps = {\n  onSubmit: (value: string) => void\n}\n\nexport default function TOTPForm(props: TOTPFormProps) {\n  const { onSubmit } = props\n  const [verificationCode, setVerificationCode] = React.useState('')\n  return (\n    <Box>\n      <MuiOtpInput\n        length={TOTP_LENGTH}\n        value={verificationCode}\n        onChange={setVerificationCode}\n        onComplete={onSubmit}\n        validateChar={(character: string) => {\n          return DIGIT_CHARACTERS.includes(character) || character === ''\n        }}\n        gap={0}\n        sx={{\n          '.MuiFormControl-root:first-of-type > .MuiInputBase-root': {\n            borderTopRightRadius: 0,\n            borderBottomRightRadius: 0,\n          },\n          '.MuiFormControl-root:last-of-type > .MuiInputBase-root': {\n            borderTopLeftRadius: 0,\n            borderBottomLeftRadius: 0,\n          },\n          '.MuiFormControl-root:not(:first-of-type):not(:last-of-type) > .MuiInputBase-root':\n            {\n              borderRadius: 0,\n            },\n        }}\n      />\n\n      <Button\n        fullWidth\n        type=\"submit\"\n        color=\"primary\"\n        variant=\"contained\"\n        sx={{\n          height: '50px',\n          mt: 4,\n          mb: 2,\n        }}\n        disabled={verificationCode.length !== TOTP_LENGTH}\n        onClick={e => {\n          e.preventDefault()\n          onSubmit(verificationCode)\n        }}\n      >\n        Submit\n      </Button>\n    </Box>\n  )\n}\n","import { Button, Link } from '@mui/material'\nimport React, { useState } from 'react'\nimport {\n  BackendDestinationEnum,\n  getEndpoint,\n} from '../../utils/functions/getEndpoint'\nimport TextField from '../TextField'\n\ntype UsernamePasswordFormProps = {\n  onSubmit: (username: string, password: string) => void\n  resetPasswordUrl?: string\n}\n\nexport default function UsernamePasswordForm(props: UsernamePasswordFormProps) {\n  const {\n    resetPasswordUrl = `${getEndpoint(\n      BackendDestinationEnum.PORTAL_ENDPOINT,\n    )}#!PasswordReset:0`,\n    onSubmit,\n  } = props\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  function handleLogin(e: React.SyntheticEvent) {\n    e.preventDefault()\n    onSubmit(username, password)\n  }\n  return (\n    <form\n      onSubmit={e => {\n        handleLogin(e)\n      }}\n    >\n      <TextField\n        required\n        fullWidth\n        autoFocus\n        autoComplete=\"username\"\n        label=\"Username or Email Address\"\n        id=\"username\"\n        type=\"text\"\n        value={username}\n        onChange={e => setUsername(e.target.value)}\n      />\n      <TextField\n        required\n        fullWidth\n        autoComplete=\"current-password\"\n        label=\"Password\"\n        id=\"current-password\"\n        type=\"password\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n      />\n      <Link href={resetPasswordUrl}>Forgot password?</Link>\n      <Button\n        fullWidth\n        type=\"submit\"\n        color=\"primary\"\n        variant=\"contained\"\n        sx={{\n          height: '50px',\n          mt: 4,\n          mb: 2,\n        }}\n        onClick={e => {\n          handleLogin(e)\n        }}\n      >\n        Sign in\n      </Button>\n    </form>\n  )\n}\n","import React from 'react'\nimport {\n  BackendDestinationEnum,\n  getEndpoint,\n} from '../../utils/functions/getEndpoint'\nimport { Box, Link } from '@mui/material'\nimport FullWidthAlert from '../FullWidthAlert'\nimport { UseLoginReturn } from '../../utils/hooks'\nimport { TwoFactorAuthErrorResponse } from '../../utils/synapseTypes/ErrorResponse'\nimport TOTPForm from './TOTPForm'\nimport UsernamePasswordForm from './UsernamePasswordForm'\nimport AuthenticationMethodSelection from './AuthenticationMethodSelection'\n\ntype Props = {\n  ssoRedirectUrl?: string\n  registerAccountUrl?: string\n  resetPasswordUrl?: string\n  /* Invoked before redirecting to Google. Useful in portals where we may want to store the current URL to redirect back here. */\n  onBeginOAuthSignIn?: () => void\n  step: UseLoginReturn['step']\n  onStepChange: (step: UseLoginReturn['step']) => void\n  /* optionally pass the 2FA error response to directly start the 2FA challenge */\n  twoFactorAuthenticationRequired?: TwoFactorAuthErrorResponse\n  submitUsernameAndPassword: UseLoginReturn['submitUsernameAndPassword']\n  submitOneTimePassword: UseLoginReturn['submitOneTimePassword']\n  errorMessage: UseLoginReturn['errorMessage']\n}\n\nexport default function LoginForm(props: Props) {\n  const {\n    ssoRedirectUrl,\n    registerAccountUrl = `${getEndpoint(\n      BackendDestinationEnum.PORTAL_ENDPOINT,\n    )}#!RegisterAccount:0`,\n    resetPasswordUrl,\n    onBeginOAuthSignIn,\n    onStepChange,\n    step,\n    submitUsernameAndPassword,\n    submitOneTimePassword,\n    errorMessage,\n  } = props\n\n  return (\n    <>\n      {step == 'CHOOSE_AUTH_METHOD' && (\n        <AuthenticationMethodSelection\n          onSelectUsernameAndPassword={() => onStepChange('USERNAME_PASSWORD')}\n          onBeginOAuthSignIn={onBeginOAuthSignIn}\n          ssoRedirectUrl={ssoRedirectUrl}\n        />\n      )}\n      {step === 'USERNAME_PASSWORD' && (\n        <UsernamePasswordForm\n          resetPasswordUrl={resetPasswordUrl}\n          onSubmit={(username, password) => {\n            submitUsernameAndPassword(username, password)\n          }}\n        />\n      )}\n      {step === 'VERIFICATION_CODE' && (\n        <TOTPForm\n          onSubmit={totp => {\n            submitOneTimePassword(totp)\n          }}\n        />\n      )}\n      {(step === 'CHOOSE_AUTH_METHOD' || step === 'USERNAME_PASSWORD') && (\n        <Box display={'flex'} justifyContent={'center'}>\n          <Link href={registerAccountUrl} align={'center'}>\n            Don&apos;t have an account? Create one now\n          </Link>\n        </Box>\n      )}\n      {errorMessage && (\n        <FullWidthAlert\n          variant={'warning'}\n          isGlobal={false}\n          description={errorMessage}\n        />\n      )}\n    </>\n  )\n}\n","import { IconButton, SxProps } from '@mui/material'\nimport IconSvg from '../IconSvg'\nimport React from 'react'\nimport { UseLoginReturn } from '../../utils/hooks'\n\ntype LoginFormBackButtonProps = {\n  step: UseLoginReturn['step']\n  onStepChange: (step: UseLoginReturn['step']) => void\n  sx?: SxProps\n}\n\nfunction getPreviousStep(currentStep: UseLoginReturn['step']) {\n  switch (currentStep) {\n    case 'CHOOSE_AUTH_METHOD':\n      // Should never happen\n      return 'CHOOSE_AUTH_METHOD'\n    case 'USERNAME_PASSWORD':\n      return 'CHOOSE_AUTH_METHOD'\n    case 'VERIFICATION_CODE':\n      return 'USERNAME_PASSWORD'\n    case 'RECOVERY_CODE':\n      return 'VERIFICATION_CODE'\n    case 'LOGGED_IN':\n      // Should never happen\n      return 'LOGGED_IN'\n  }\n}\n\nexport default function LoginFlowBackButton(props: LoginFormBackButtonProps) {\n  const { step, onStepChange, sx } = props\n  const shouldRender =\n    step === 'USERNAME_PASSWORD' || step === 'VERIFICATION_CODE'\n\n  if (!shouldRender) {\n    return null\n  }\n  return (\n    <IconButton\n      type=\"button\"\n      onClick={() => {\n        onStepChange(getPreviousStep(step))\n      }}\n      sx={sx}\n    >\n      <IconSvg\n        icon=\"arrowBack\"\n        wrap={false}\n        sx={{ height: '24px', width: '24px' }}\n      />\n    </IconButton>\n  )\n}\n"],"names":["useLogin","sessionCallback","twoFaErrorResponse","step","setStep","useState","errorMessage","setErrorMessage","userId","setUserId","twoFaToken","setTwoFaToken","useEffect","fullUrl","searchParams","finishLogin","loginResponse","SynapseClient.setAccessTokenCookie","AUTHENTICATION_RECEIPT_LOCALSTORAGE_KEY","username","password","authenticationReceipt","data","SynapseClient.login","err","code","otpType","request","SynapseClient.loginWith2fa","e","q","L","W","z","G","n","C","F","H","o","J","a","w","B","Q","d","p","h","g","U","X","T","P","R","S","k","M","u","r","m","D","E","t","x","_b","_a","l","y","N","K","c","V","b","j","$","A","O","Y","_","I","v","TOTP_LENGTH","DIGIT_CHARACTERS","TOTPForm","props","onSubmit","verificationCode","setVerificationCode","React","jsxs","Box","jsx","MuiOtpInput","character","Button","UsernamePasswordForm","resetPasswordUrl","getEndpoint","BackendDestinationEnum","setUsername","setPassword","handleLogin","TextField","Link","LoginForm","ssoRedirectUrl","registerAccountUrl","onBeginOAuthSignIn","onStepChange","submitUsernameAndPassword","submitOneTimePassword","Fragment","AuthenticationMethodSelection","totp","FullWidthAlert","getPreviousStep","currentStep","LoginFlowBackButton","sx","IconButton","IconSvg"],"mappings":"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"}