import{a as b,j as t,F as H}from"./jsx-runtime-095bf462.js";import{r as w}from"./index-8db94870.js";import{x as Y}from"./SynapseClient-ddb0799f.js";import"./getEndpoint-ac94413e.js";import{b as j}from"./SynapseConstants-6bd6e040.js";import{a as I}from"./queryUtils-60986806.js";import{p as G,g as X}from"./SqlFunctions-046ae83c.js";import{a as z}from"./useGetQueryResultBundle-42117ede.js";import{c as J,P as Z}from"./factory-275e83af.js";import{d as ee}from"./dayjs.min-59ef0ea6.js";import{O as re,p as te,N as se}from"./ObservationCard-60fbafe3.js";import{D as oe}from"./Dialog-f0c80819.js";import{g as k}from"./ColorGradient-3d3e1969.js";import{r as ae}from"./react-sizeme-5bfc490a.js";import{B as c}from"./Box-074128da.js";import{T as ne}from"./Typography-c5b8eeae.js";import"./LeftRightPanel-6384c215.js";import{S as ie}from"./StyledFormControl-ec8e4e0d.js";import"./WideButton-21e8230b.js";import"./InputSizedButton-75fd41aa.js";import{I as le}from"./InputLabel-63a3d59c.js";import{S as ue}from"./Select-35930b21.js";import{M as de}from"./MenuItem-faea0340.js";import{S as M}from"./Skeleton-a24326d8.js";const ce="species",me="observationphase",U={concreteType:"org.sagebionetworks.repo.model.table.QueryResultBundle",queryResult:{concreteType:"org.sagebionetworks.repo.model.table.QueryResult",queryResults:{concreteType:"org.sagebionetworks.repo.model.table.RowSet",tableId:"syn52408661",etag:"a3270cb2-4373-4e12-9981-e12326e54ad1",headers:[{name:"species",columnType:"STRING",id:"152514"},{name:"observationPhase",columnType:"STRING",id:"197976"},{name:"observationPhaseOrder",columnType:"INTEGER",id:"198102"},{name:"observationTimeMax",columnType:"INTEGER",id:"198103"},{name:"observationTimeUnits",columnType:"STRING",id:"198101"}],rows:[{rowId:9,versionNumber:4,values:["Danio rerio","embryo","1","7","days"]},{rowId:10,versionNumber:4,values:["Danio rerio","larval","2","3","months"]},{rowId:11,versionNumber:4,values:["Danio rerio","juvenile","3","6","months"]},{rowId:12,versionNumber:4,values:["Danio rerio","adult","4","12","months"]},{rowId:16,versionNumber:4,values:["Drosophila","embryo","1","24","hours"]},{rowId:17,versionNumber:4,values:["Drosophila","larval","2","5","days"]},{rowId:18,versionNumber:4,values:["Drosophila","pupal","3","12","days"]},{rowId:19,versionNumber:4,values:["Drosophila","adult","4","5","weeks"]},{rowId:1,versionNumber:4,values:["Mus musculus","prenatal","1","21","days"]},{rowId:2,versionNumber:4,values:["Mus musculus","postnatal","2","6","months"]},{rowId:20,versionNumber:4,values:["Rattus norvegicus","prenatal","1","23","days"]},{rowId:21,versionNumber:4,values:["Rattus norvegicus","neonatal","2","4","weeks"]},{rowId:22,versionNumber:4,values:["Rattus norvegicus","weanling","3","2","months"]},{rowId:23,versionNumber:4,values:["Rattus norvegicus","juvenile","4","3","months"]},{rowId:24,versionNumber:4,values:["Rattus norvegicus","adolescent","5","6","months"]},{rowId:25,versionNumber:4,values:["Rattus norvegicus","adult","6","12","months"]},{rowId:13,versionNumber:4,values:["Saccharomyces","log phase","1","7","days"]},{rowId:14,versionNumber:4,values:["Saccharomyces","stationary phase","2","2","weeks"]},{rowId:15,versionNumber:4,values:["Saccharomyces","death phase","3","3","weeks"]},{rowId:3,versionNumber:4,values:["Sus scrofa","prenatal","1","115","days"]},{rowId:4,versionNumber:4,values:["Sus scrofa","neonatal","2","3","months"]},{rowId:5,versionNumber:4,values:["Sus scrofa","weanling","3","6","months"]},{rowId:6,versionNumber:4,values:["Sus scrofa","juvenile","4","12","months"]},{rowId:7,versionNumber:4,values:["Sus scrofa","adolescent","5","2","years"]},{rowId:8,versionNumber:4,values:["Sus scrofa","adult","6","3","years"]}]}}};var D;const pe=(D=U.queryResult)==null?void 0:D.queryResults.headers.findIndex(e=>e.name.toLowerCase()===ce);var Q;const T=(Q=U.queryResult)==null?void 0:Q.queryResults.headers.findIndex(e=>e.name.toLowerCase()===me),ve=J(Z),ye=(e,r,i,l)=>{let a=-1;return{timepoints:r.map((u,d)=>{const n=parseInt(u.values[i.time]),p=u.values[i.timeUnits];return u.rowId==l&&(a=d),e.add(n,p)}),hoverOverIndex:a}},C=e=>e.reduce((r,i)=>!r||i.isAfter(r)?i:r),fe=(e,r)=>e.timepoints.map((l,a)=>{const s=l.format(),u=a==e.hoverOverIndex,d=r[a].rowId;return{x:[s,s,s],y:[0,.5,1],mode:"lines",line:{color:u?"black":"gray",width:2},customdata:[d,d,d],hoverinfo:"none"}}),he=(e,r,i,l,a)=>{const s=[{x:e.add(1,"day").format(),y:-1,text:"                             ",showarrow:!1,textangle:"270",height:15}];if(l&&a){const u=e.add(l,a);s.push({x:u.format(),y:-1,text:`${l} ${te(a,l)}`,showarrow:!1,textangle:"270",height:15})}return{hovermode:"closest",dragmode:!1,showlegend:!1,xaxis:{showgrid:!1,showticklabels:!1,showline:!1,zeroline:!1},yaxis:{range:[-1,1],showgrid:!1,zeroline:!1,showline:!1,showticklabels:!1},annotations:s,shapes:[{type:"rect",x0:e.subtract(r.diff(e)/10).format(),x1:r.add(r.diff(e)/3).format(),y0:.25,y1:.75,fillcolor:i,opacity:.8,line:{width:0}}],margin:{l:0,r:0,t:60,b:60}}},P=({color:e,rowData:r,schema:i,widthPx:l})=>{const[a,s]=w.useState(),[u,d]=w.useState(),n=ee(),p=w.useRef(null),N=a==null?void 0:a.points[0].customdata,o=r.filter(v=>v.rowId===N)[0],h=u==null?void 0:u.points[0].customdata,g=r.filter(v=>v.rowId===h)[0],R=g?parseInt(g.values[i.time]):void 0,E=g?g.values[i.timeUnits]:void 0,_=ye(n,r,i,h),q=C(_.timepoints);return b("div",{ref:p,children:[t(ve,{style:{width:l,height:"220px"},data:fe(_,r),layout:he(n,q,e,R,E),config:{displayModeBar:!1},useResizeHandler:!0,onClick:v=>{s(v),d(void 0)},onHover:v=>{d(v)},onUnhover:()=>{d(void 0)}}),o&&t(oe,{onClose:()=>s(void 0),open:!!o,children:t(re,{data:o.values,schema:i,includePortalCardClass:!1})})]})};try{C.displayName="getMaxDate",C.__docgenInfo={description:"",displayName:"getMaxDate",props:{}}}catch{}try{P.displayName="TimelinePhase",P.__docgenInfo={description:"",displayName:"TimelinePhase",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},color:{defaultValue:null,description:"",name:"color",required:!0,type:{name:"string"}},rowData:{defaultValue:null,description:"",name:"rowData",required:!0,type:{name:"Row[]"}},schema:{defaultValue:null,description:"",name:"schema",required:!0,type:{name:"ObservationCardSchema"}},widthPx:{defaultValue:null,description:"",name:"widthPx",required:!0,type:{name:"number"}}}}}catch{}const A=({color:e,phaseName:r})=>b(c,{sx:{display:"flex",alignItems:"center",gap:"7px"},children:[t(c,{sx:{backgroundColor:e,width:"20px",height:"20px"}}),t(ne,{variant:"body1",children:r==null?void 0:r.toUpperCase()})]});try{A.displayName="TimelineLegendItem",A.__docgenInfo={description:"",displayName:"TimelineLegendItem",props:{color:{defaultValue:null,description:"",name:"color",required:!0,type:{name:"string"}},phaseName:{defaultValue:null,description:"",name:"phaseName",required:!0,type:{name:"string | null"}}}}}catch{}const L=({sql:e,additionalFilters:r=[],species:i,setSpecies:l})=>{var p,N;const a=G(e),s=z({entityId:a,query:{sql:`SELECT species FROM ${a} WHERE species IS NOT null GROUP BY species`,additionalFilters:r},partMask:j,concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest"}),{data:u,isLoading:d}=s,n=(N=(p=u==null?void 0:u.queryResult)==null?void 0:p.queryResults)==null?void 0:N.rows;return w.useEffect(()=>{n&&l(n.length>0?n[0].values[0]:null)},[n,l]),d||!n||n.length<2?t(H,{}):t(c,{children:b(ie,{children:[t(le,{children:"Species"}),t(ue,{sx:{marginLeft:"2px",marginBottom:"2px"},value:i,defaultValue:n[0].values[0],label:"Species",onChange:o=>l(o.target.value),children:n==null?void 0:n.map(o=>{const h=o.values[0];return t(de,{value:h,children:h},h)})})]})})};try{L.displayName="TimelinePlotSpeciesSelector",L.__docgenInfo={description:"",displayName:"TimelinePlotSpeciesSelector",props:{sql:{defaultValue:null,description:"",name:"sql",required:!0,type:{name:"string"}},additionalFilters:{defaultValue:{value:"[]"},description:"",name:"additionalFilters",required:!1,type:{name:"QueryFilter[]"}},species:{defaultValue:null,description:"",name:"species",required:!1,type:{name:"string | null"}},setSpecies:{defaultValue:null,description:"",name:"setSpecies",required:!0,type:{name:"Dispatch<SetStateAction<string | null | undefined>>"}}}}}catch{}const ge="phase",Ie="time",be="timeunits",Ne="submittername",we="text",_e="tag",xe="submitteruserid",F=({sql:e,searchParams:r,sqlOperator:i,defaultSpecies:l})=>{var V;const a=G(e),[s,u]=w.useState(l),d=X(a,r,i)??[],n=s?{columnName:"species",concreteType:"org.sagebionetworks.repo.model.table.ColumnSingleValueQueryFilter",values:[s],operator:Y.EQUAL}:void 0,p=[...d];n&&p.push(n);const N=z({entityId:a,query:{sql:`${e} WHERE observationTime IS NOT NULL`,sort:[{column:"observationTime",direction:"ASC"}],additionalFilters:p},partMask:j,concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest"},{enabled:!!s}),{data:o,isLoading:h}=N;if(h)return t(Se,{});const g=I(ge,o),R=I(Ie,o),E=I(be,o),_=I(Ne,o),q=I(we,o),v=I(_e,o),$=I(xe,o),W={submitterName:_,submitterUserId:$,tag:v,text:q,time:R,timeUnits:E};let x=[];if(s){const y=(V=U.queryResult)==null?void 0:V.queryResults.rows.filter(f=>f.values[pe]==s);if(!y||y.length==0)return t(H,{});x=y.filter(f=>{var S;const m=(S=o==null?void 0:o.queryResult)==null?void 0:S.queryResults.rows.filter(O=>O.values[g]==f.values[T]);return(m==null?void 0:m.length)&&(m==null?void 0:m.length)>0})}return s===null?t(se,{}):b(c,{children:[b(c,{sx:{display:"flex",justifyContent:"space-between"},children:[t(c,{children:!l&&t(L,{setSpecies:u,species:s,sql:e,additionalFilters:d})}),t(c,{sx:{display:"flex",justifyContent:"flex-end",gap:"25px"},children:x.map((y,f)=>{const{colorPalette:m}=k(f,1);return t(A,{color:m[0],phaseName:y.values[T]},y.rowId)})})]}),s&&t(ae.SizeMe,{monitorWidth:!0,noPlaceholder:!0,children:({size:y})=>t(c,{sx:{display:"flex"},className:"forcePlotlyDefaultCursor",children:x.map((f,m)=>{var B;const{colorPalette:S}=k(m,1),O=(B=o==null?void 0:o.queryResult)==null?void 0:B.queryResults.rows.filter(K=>K.values[g]==f.values[T]);return t(P,{name:f.values[T],color:S[0],rowData:O,schema:W,widthPx:y.width?y.width/x.length:0},f.rowId)})})})]})},Se=()=>b(c,{children:[b(c,{sx:{display:"flex",justifyContent:"flex-end",gap:"10px"},children:[t(M,{height:"45px",width:"80px"}),t(M,{height:"45px",width:"80px"})]}),t(c,{sx:{display:"flex"},children:t(M,{height:"150px",width:"100%"})})]});try{F.displayName="TimelinePlot",F.__docgenInfo={description:"",displayName:"TimelinePlot",props:{sql:{defaultValue:null,description:"",name:"sql",required:!0,type:{name:"string"}},searchParams:{defaultValue:null,description:"",name:"searchParams",required:!1,type:{name:"Record<string, string>"}},sqlOperator:{defaultValue:null,description:"",name:"sqlOperator",required:!1,type:{name:"enum",value:[{value:'"LIKE"'},{value:'"EQUAL"'},{value:'"IN"'},{value:'"HAS"'},{value:'"HAS_LIKE"'}]}},defaultSpecies:{defaultValue:null,description:"",name:"defaultSpecies",required:!1,type:{name:"string"}}}}}catch{}export{F as T};
//# sourceMappingURL=TimelinePlot-59a594e3.js.map
