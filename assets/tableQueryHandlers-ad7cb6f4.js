import{l as E}from"./index-2484f9c8.js";import{aj as i,ak as S,al as l}from"./SynapseClient-1c2fcc91.js";import{g as m,B as U}from"./getEndpoint-ac94413e.js";import{b as c,B as T,d as p,e as B,f as M,g as A,h as g,i as L}from"./SynapseConstants-c9342f94.js";import{u as N}from"./uniqueId-4d05949d.js";import{c as f}from"./cloneDeep-2774ded5.js";const R={[c]:"queryResult",[T]:"queryCount",[p]:"selectColumns",[B]:"maxRowsPerPage",[M]:"columnModels",[A]:"facets",[g]:"sumFileSizes",[L]:"lastUpdatedOn"};function d(u,r){const n=f(u);return Object.entries(R).forEach(([o,e])=>{r&parseInt(o)||delete n[e]}),n}function b(u,r=m(U.REPO_ENDPOINT)){const n=new Map;return[E.rest.post(`${r}${i(":id")}`,async(o,e,s)=>{const t=N();return n.set(t,await o.json()),e(s.status(201),s.json({token:t}))}),E.rest.get(`${r}${S(":id")}`,async(o,e,s)=>{const t=o.params.id,a=n.get(t);if(!t||!a)return e(s.status(404),s.json({message:"The mocked asynchronous job was not found"}));const _=d(u,a.partMask);return e(s.status(201),s.json({jobState:"COMPLETE",jobCanceling:!1,requestBody:a,etag:"00000000-0000-0000-0000-000000000000",jobId:t,responseBody:_,startedByUserId:0,startedOn:"",changedOn:"",progressMessage:"",progressCurrent:100,progressTotal:100,exception:"",errorMessage:"",errorDetails:"",runtimeMS:100}))}),E.rest.get(`${r}${l(":entityId",":asyncJobToken")}`,async(o,e,s)=>{const t=o.params.asyncJobToken,a=n.get(t);if(!t||!a)return e(s.status(404),s.json({message:"The mocked asynchronous job was not found"}));const _=d(u,a.partMask);return e(s.status(201),s.json(_))})]}export{b as g};
//# sourceMappingURL=tableQueryHandlers-ad7cb6f4.js.map
