import{a as I,j as o,F as S}from"./jsx-runtime-095bf462.js";import{r as T}from"./index-8db94870.js";import{I as re}from"./SynapseClient-263d1708.js";import"./getEndpoint-ac94413e.js";import{b as j}from"./SynapseConstants-0daa3b0b.js";import{a as N}from"./queryUtils-db6de4ec.js";import{p as D,g as oe}from"./SqlFunctions-755b39fb.js";import{a as z}from"./useGetQueryResultBundle-07a0d750.js";import{c as ne,P as ie}from"./factory-275e83af.js";import{d as L}from"./dayjs.min-59ef0ea6.js";import{O as ae,p as le}from"./ObservationCard-ebebf1cc.js";import{D as ue}from"./Dialog-2a91462e.js";import{g as B}from"./ColorGradient-3d3e1969.js";import{B as f}from"./Box-94283325.js";import{T as O}from"./Typography-d5f8f357.js";import"./LeftRightPanel-0dea5243.js";import{S as de}from"./StyledFormControl-3020fa6d.js";import"./WideButton-519d13bd.js";import"./InputSizedButton-74aa659b.js";import{I as ce}from"./InputLabel-f385112e.js";import{S as me}from"./Select-8309ba81.js";import{M as pe}from"./MenuItem-f42af346.js";import{S as E}from"./Skeleton-5d185628.js";const he="species",ve="observationphase",U={concreteType:"org.sagebionetworks.repo.model.table.QueryResultBundle",queryResult:{concreteType:"org.sagebionetworks.repo.model.table.QueryResult",queryResults:{concreteType:"org.sagebionetworks.repo.model.table.RowSet",tableId:"syn52408661",etag:"a3270cb2-4373-4e12-9981-e12326e54ad1",headers:[{name:"species",columnType:"STRING",id:"152514"},{name:"observationPhase",columnType:"STRING",id:"197976"},{name:"observationPhaseOrder",columnType:"INTEGER",id:"198102"},{name:"observationTimeMax",columnType:"INTEGER",id:"198103"},{name:"observationTimeUnits",columnType:"STRING",id:"198101"}],rows:[{rowId:9,versionNumber:4,values:["Danio rerio","embryo","1","7","days"]},{rowId:10,versionNumber:4,values:["Danio rerio","larval","2","3","months"]},{rowId:11,versionNumber:4,values:["Danio rerio","juvenile","3","6","months"]},{rowId:12,versionNumber:4,values:["Danio rerio","adult","4","12","months"]},{rowId:16,versionNumber:4,values:["Drosophila","embryo","1","24","hours"]},{rowId:17,versionNumber:4,values:["Drosophila","larval","2","5","days"]},{rowId:18,versionNumber:4,values:["Drosophila","pupal","3","12","days"]},{rowId:19,versionNumber:4,values:["Drosophila","adult","4","5","weeks"]},{rowId:1,versionNumber:4,values:["Mus musculus","prenatal","1","21","days"]},{rowId:2,versionNumber:4,values:["Mus musculus","postnatal","2","6","months"]},{rowId:20,versionNumber:4,values:["Rattus norvegicus","prenatal","1","23","days"]},{rowId:21,versionNumber:4,values:["Rattus norvegicus","neonatal","2","4","weeks"]},{rowId:22,versionNumber:4,values:["Rattus norvegicus","weanling","3","2","months"]},{rowId:23,versionNumber:4,values:["Rattus norvegicus","juvenile","4","3","months"]},{rowId:24,versionNumber:4,values:["Rattus norvegicus","adolescent","5","6","months"]},{rowId:25,versionNumber:4,values:["Rattus norvegicus","adult","6","12","months"]},{rowId:13,versionNumber:4,values:["Saccharomyces","log phase","1","7","days"]},{rowId:14,versionNumber:4,values:["Saccharomyces","stationary phase","2","2","weeks"]},{rowId:15,versionNumber:4,values:["Saccharomyces","death phase","3","3","weeks"]},{rowId:3,versionNumber:4,values:["Sus scrofa","prenatal","1","115","days"]},{rowId:4,versionNumber:4,values:["Sus scrofa","neonatal","2","3","months"]},{rowId:5,versionNumber:4,values:["Sus scrofa","weanling","3","6","months"]},{rowId:6,versionNumber:4,values:["Sus scrofa","juvenile","4","12","months"]},{rowId:7,versionNumber:4,values:["Sus scrofa","adolescent","5","2","years"]},{rowId:8,versionNumber:4,values:["Sus scrofa","adult","6","3","years"]}]}}};var H;const ye=(H=U.queryResult)==null?void 0:H.queryResults.headers.findIndex(e=>e.name.toLowerCase()===he);var Q;const M=(Q=U.queryResult)==null?void 0:Q.queryResults.headers.findIndex(e=>e.name.toLowerCase()===ve),fe=ne(ie),ge=(e,t,i,l)=>{let n=-1;return{timepoints:t.map((r,s)=>{const a=parseFloat(r.values[i.observationTime]),m=r.values[i.observationTimeUnits];return r.rowId==l&&(n=s),e.add(a,m)}),hoverOverIndex:n}},q=e=>e.length==0?L().add(1,"days"):e.reduce((t,i)=>!t||i.isAfter(t)?i:t),be=(e,t)=>{if(e.timepoints==null||e.timepoints.length==0)return[{x:[L().format()],y:[.5],mode:"lines",line:{color:"blue",width:2},customdata:[],hoverinfo:"none"}];const i=e.timepoints.reduce((n,u,r)=>{const s=n;return s[u.format()]||(s[u.format()]=[]),s[u.format()].push(t[r]),n},{});return e.timepoints.map((n,u)=>{const r=n.format(),s=u==e.hoverOverIndex,m=i[r].map(p=>p.rowId);return{x:[r,r,r],y:[0,.5,1],mode:"lines",line:{color:s?"black":"gray",width:2},customdata:[m,m,m],hoverinfo:"none"}})},Ie=(e,t,i,l,n,u)=>{const r=[{x:e.add(1,"day").format(),y:-1,text:"                             ",showarrow:!1,textangle:"270",height:15}];if(l&&n&&u){const s=u>1?`(${u})`:"",a=e.add(l,n);r.push({x:a.format(),y:-1,text:`${l} ${le(n,l)} ${s}`,showarrow:!1,textangle:"270",height:15})}return{hovermode:"closest",dragmode:!1,showlegend:!1,xaxis:{showgrid:!1,showticklabels:!1,showline:!1,zeroline:!1},yaxis:{range:[-1,1],showgrid:!1,zeroline:!1,showline:!1,showticklabels:!1},annotations:r,shapes:[{type:"rect",x0:e.subtract(t.diff(e)/10).format(),x1:t.add(t.diff(e)/3).format(),y0:.25,y1:.75,fillcolor:i,opacity:.8,line:{width:0}}],margin:{l:0,r:0,t:60,b:60}}},C=({color:e,rowData:t,schema:i,widthPx:l})=>{const[n,u]=T.useState(),[r,s]=T.useState(),a=L(),m=T.useRef(null),p=n==null?void 0:n.points[0].customdata,g=t==null?void 0:t.filter(v=>p==null?void 0:p.includes(v.rowId)),d=r==null?void 0:r.points[0].customdata,c=t==null?void 0:t.filter(v=>d==null?void 0:d.includes(v.rowId)),R=c&&c.length>0?parseFloat(c[0].values[i.observationTime]):void 0,h=c&&c.length>0?c[0].values[i.observationTimeUnits]:void 0,_=ge(a,t,i,(d==null?void 0:d.length)>0?d[0]:void 0),y=q(_.timepoints);return I("div",{ref:m,style:{width:l},children:[o(fe,{style:{width:l,height:"220px"},data:be(_,t),layout:Ie(a,y,e,R,h,c.length),config:{displayModeBar:!1},useResizeHandler:!0,onClick:v=>{u(v),s(void 0)},onHover:v=>{s(v)},onUnhover:()=>{s(void 0)}}),g&&o(ue,{onClose:()=>u(void 0),open:!!g&&g.length>0,children:g.map(v=>o(ae,{data:v.values,schema:i,includePortalCardClass:!1},v.rowId))})]})};try{q.displayName="getMaxDate",q.__docgenInfo={description:"",displayName:"getMaxDate",props:{}}}catch{}try{C.displayName="TimelinePhase",C.__docgenInfo={description:"",displayName:"TimelinePhase",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},color:{defaultValue:null,description:"",name:"color",required:!0,type:{name:"string"}},rowData:{defaultValue:null,description:"",name:"rowData",required:!0,type:{name:"Row[]"}},schema:{defaultValue:null,description:"",name:"schema",required:!0,type:{name:"ObservationCardSchema"}},widthPx:{defaultValue:null,description:"",name:"widthPx",required:!0,type:{name:"number"}}}}}catch{}const P=({color:e,phaseName:t})=>I(f,{sx:{display:"flex",alignItems:"center",gap:"7px"},children:[o(f,{sx:{backgroundColor:e,width:"20px",height:"20px"}}),o(O,{variant:"body1",children:t==null?void 0:t.toUpperCase()})]});try{P.displayName="TimelineLegendItem",P.__docgenInfo={description:"",displayName:"TimelineLegendItem",props:{color:{defaultValue:null,description:"",name:"color",required:!0,type:{name:"string"}},phaseName:{defaultValue:null,description:"",name:"phaseName",required:!0,type:{name:"string | null"}}}}}catch{}const A=({sql:e,additionalFilters:t=[],species:i,setSpecies:l})=>{var p,g;const n=D(e),u=z({entityId:n,query:{sql:`SELECT distinct unnest(species) FROM ${n} WHERE species is not null GROUP BY species`,additionalFilters:t},partMask:j,concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest"}),{data:r,isLoading:s}=u,a=(g=(p=r==null?void 0:r.queryResult)==null?void 0:p.queryResults)==null?void 0:g.rows,m=a&&a.length>0?a[0].values[0]:void 0;return i==null&&m!=null&&l(m),s||!a||a.length<2?o(S,{}):o(f,{children:I(de,{children:[o(ce,{children:"Species"}),o(me,{sx:{marginLeft:"2px",marginBottom:"2px"},value:i,label:"Species",onChange:d=>{l(d.target.value)},children:a==null?void 0:a.map(d=>{const c=d.values[0];return o(pe,{value:c,children:c},c)})})]})})};try{A.displayName="TimelinePlotSpeciesSelector",A.__docgenInfo={description:"",displayName:"TimelinePlotSpeciesSelector",props:{sql:{defaultValue:null,description:"",name:"sql",required:!0,type:{name:"string"}},additionalFilters:{defaultValue:{value:"[]"},description:"",name:"additionalFilters",required:!1,type:{name:"QueryFilter[]"}},species:{defaultValue:null,description:"",name:"species",required:!1,type:{name:"string | null"}},setSpecies:{defaultValue:null,description:"",name:"setSpecies",required:!0,type:{name:"Dispatch<SetStateAction<string | null | undefined>>"}}}}}catch{}const Ne=e=>{const[t,i]=T.useState({width:1,height:2});return T.useEffect(()=>{const l=()=>{if(e.current){const n=e.current.getBoundingClientRect(),{width:u,height:r}=n,s=Math.round(u),a=Math.round(r);(t.width!=s||t.height!=a)&&i({width:s,height:a})}};return l(),window.addEventListener("resize",l),()=>{window.removeEventListener("resize",l)}},[t.height,t.width,e]),t},Te="observationphase",we="observationtime",_e="observationtimeunits",xe="observationsubmittername",Se="observationtext",Re="observationtype",Ee="synapseid",Me="doi",k=({sql:e,searchParams:t,sqlOperator:i,defaultSpecies:l,title:n,subTitle:u})=>{const r=D(e),[s,a]=T.useState(l),m=T.createRef(),p=Ne(m),g=oe(r,t,i)??[],d=s?{columnName:"species",concreteType:"org.sagebionetworks.repo.model.table.ColumnMultiValueFunctionQueryFilter",values:[s],function:re.HAS}:void 0,c=[...g];d&&c.push(d);const R=z({entityId:r,query:{sql:`${e} WHERE observationTime IS NOT NULL`,sort:[{column:"observationTime",direction:"ASC"}],additionalFilters:c},partMask:j,concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest"},{enabled:!!s}),{data:h,isLoading:_}=R,y=T.useMemo(()=>{var b;if(s)return(b=U.queryResult)==null?void 0:b.queryResults.rows.filter(w=>w.values[ye]==s)},[s]);if(_)return o(Oe,{});const v=N(Te,h),G=N(we,h),$=N(_e,h),W=N(xe,h),K=N(Se,h),Y=N(Me,h),X=N(Re,h),J=N(Ee,h),Z={observationSubmitterName:W,synapseId:J,observationType:X,observationText:K,observationTime:G,observationTimeUnits:$,doi:Y},ee=p.width&&y?p.width/y.length:0,te=y==null?void 0:y.map(()=>"auto").join(" ");return I(S,{children:[s&&I(S,{children:[n&&o(O,{variant:"h2",children:n}),u&&o(O,{variant:"body1Italic",sx:{margin:"10px 0px"},children:u})]}),I(f,{children:[I(f,{sx:{display:"flex",justifyContent:"space-between"},children:[o(f,{children:!l&&o(A,{setSpecies:a,species:s,sql:e,additionalFilters:g})}),y&&o(f,{sx:{display:"flex",justifyContent:"flex-end",gap:"25px"},children:y.map((b,x)=>{const{colorPalette:w}=B(x,1);return o(P,{color:w[0],phaseName:b.values[M]},b.rowId)})})]}),s&&y&&o("div",{ref:m,children:o(f,{sx:{display:"inline-grid",gridTemplateColumns:te,minWidth:p.width,maxWidth:p.width},className:"forcePlotlyDefaultCursor",children:y.map((b,x)=>{var F;const{colorPalette:w}=B(x,1),V=(F=h==null?void 0:h.queryResult)==null?void 0:F.queryResults.rows.filter(se=>se.values[v]==b.values[M]);return V?o(C,{name:b.values[M],color:w[0],rowData:V,schema:Z,widthPx:ee},b.rowId):o(S,{})})})})]})]})},Oe=()=>I(f,{children:[I(f,{sx:{display:"flex",justifyContent:"flex-end",gap:"10px"},children:[o(E,{height:"45px",width:"80px"}),o(E,{height:"45px",width:"80px"})]}),o(f,{sx:{display:"flex"},children:o(E,{height:"150px",width:"100%"})})]});try{k.displayName="TimelinePlot",k.__docgenInfo={description:"",displayName:"TimelinePlot",props:{sql:{defaultValue:null,description:"",name:"sql",required:!0,type:{name:"string"}},searchParams:{defaultValue:null,description:"",name:"searchParams",required:!1,type:{name:"Record<string, string>"}},sqlOperator:{defaultValue:null,description:"",name:"sqlOperator",required:!1,type:{name:"enum",value:[{value:'"LIKE"'},{value:'"EQUAL"'},{value:'"IN"'},{value:'"HAS"'},{value:'"HAS_LIKE"'}]}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},subTitle:{defaultValue:null,description:"",name:"subTitle",required:!1,type:{name:"string"}},defaultSpecies:{defaultValue:null,description:"",name:"defaultSpecies",required:!1,type:{name:"string"}}}}}catch{}export{k as T};
//# sourceMappingURL=TimelinePlot-0cd6be50.js.map
