import{l as T}from"./index-bd1946ba.js";import{b8 as E,b9 as S,ba as _}from"./SynapseClient-48102fa8.js";import{g as l,B as y}from"./getEndpoint-ac94413e.js";import{b as I,B as N,m as f,q as D,n as R,o as U,r as g,p as A}from"./SynapseConstants-fd8b2600.js";import{u as M}from"./uniqueId-4d05949d.js";import{c as O}from"./cloneDeep-ccda587a.js";const p=new Map;function b(t,i,n,o=l(y.REPO_ENDPOINT)){return[T.rest.post(`${o}${t}`,async(s,m,e)=>{const a=M();return p.set(a,{request:await s.json(),response:n}),m(e.status(201),e.json({token:a}))}),T.rest.get(`${o}${E(":id")}`,async(s,m,e)=>{const a=s.params.id,u=p.get(a);if(!a||!u)return m(e.status(404),e.json({message:"The mocked asynchronous job was not found"}));const{request:c,response:r}=u,d=typeof r=="function"?r(c):r;return m(e.status(201),e.json({jobState:"COMPLETE",jobCanceling:!1,requestBody:c,etag:"00000000-0000-0000-0000-000000000000",jobId:a,responseBody:d,startedByUserId:0,startedOn:"",changedOn:"",progressMessage:"",progressCurrent:100,progressTotal:100,exception:"",errorMessage:"",errorDetails:"",runtimeMS:100}))}),T.rest.get(`${o}${i(":asyncJobToken")}`,async(s,m,e)=>{const a=s.params.asyncJobToken,u=p.get(a);if(!a||!u)return m(e.status(404),e.json({message:"The mocked asynchronous job was not found"}));const{request:c,response:r}=u,d=typeof r=="function"?r(c):r;return m(e.status(201),e.json(d))})]}const B=[{name:"id",columnType:"ENTITYID",id:"81721"},{name:"name",columnType:"STRING",id:"81722",maximumSize:256},{name:"description",columnType:"STRING",id:"87941",maximumSize:1e3},{name:"createdOn",columnType:"DATE",facetType:"range",id:"81723"},{name:"createdBy",columnType:"USERID",facetType:"enumeration",id:"81724"},{name:"etag",columnType:"STRING",id:"81725",maximumSize:36},{name:"modifiedOn",columnType:"DATE",facetType:"range",id:"81726"},{name:"modifiedBy",columnType:"USERID",facetType:"enumeration",id:"81727"},{name:"type",columnType:"STRING",facetType:"enumeration",id:"196992",maximumSize:20},{name:"currentVersion",columnType:"INTEGER",id:"81729"},{name:"parentId",columnType:"ENTITYID",facetType:"enumeration",id:"81730"},{name:"benefactorId",columnType:"ENTITYID",id:"81731"},{name:"projectId",columnType:"ENTITYID",facetType:"enumeration",id:"81732"},{name:"dataFileHandleId",columnType:"FILEHANDLEID",id:"81733"},{name:"dataFileName",columnType:"STRING",id:"199088",maximumSize:256},{name:"dataFileSizeBytes",columnType:"INTEGER",id:"112368"},{name:"dataFileMD5Hex",columnType:"STRING",id:"112369",maximumSize:100},{name:"dataFileConcreteType",columnType:"STRING",facetType:"enumeration",id:"196995",maximumSize:65},{name:"dataFileBucket",columnType:"STRING",facetType:"enumeration",id:"196996",maximumSize:100},{name:"dataFileKey",columnType:"STRING",id:"184972",maximumSize:700}],L={[I]:"queryResult",[N]:"queryCount",[f]:"selectColumns",[D]:"maxRowsPerPage",[R]:"columnModels",[U]:"facets",[g]:"sumFileSizes",[A]:"lastUpdatedOn"};function C(t,i){const n=O(t);return Object.entries(L).forEach(([o,s])=>{i&parseInt(o)||delete n[s]}),n}function K(t,i=l(y.REPO_ENDPOINT)){return b(_(":id"),n=>S(":entityId",n),n=>C(t,n.partMask),i)}function k(t=l(y.REPO_ENDPOINT)){return[T.rest.get(`${t}/repo/v1/column/tableview/defaults`,async(i,n,o)=>n(o.status(200),o.json({concreteType:"org.sagebionetworks.repo.model.table.ColumnModel",list:B})))]}export{k as a,K as g};
//# sourceMappingURL=tableQueryHandlers-180bd808.js.map
