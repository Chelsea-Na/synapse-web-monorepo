import{j as o,a}from"./jsx-runtime-095bf462.js";import{r as e}from"./index-8db94870.js";import{d as i}from"./ToastMessage-37e28465.js";import{u as x,S as f}from"./SynapseClient-af316750.js";import{F as d,a as c,b as l}from"./FormLabel-41edc2c9.js";import{B as F}from"./Button-5637ed55.js";import"./_commonjsHelpers-042e6b4d.js";import"./FullWidthAlert-20558162.js";import"./AlertTitle-1b72df18.js";import"./objectWithoutPropertiesLoose-4f48578a.js";import"./extends-98964cd2.js";import"./styled-eda33d92.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-29d231ba.js";import"./createSvgIcon-4be2f0e7.js";import"./Paper-3361ee84.js";import"./IconButton-476a8c2f.js";import"./ButtonBase-8aff28b9.js";import"./emotion-react.browser.esm-8faf7441.js";import"./assertThisInitialized-081f9914.js";import"./inheritsLoose-c82a83d4.js";import"./TransitionGroupContext-f2b81dde.js";import"./useForkRef-f2aa3d66.js";import"./useIsFocusVisible-bbf13f29.js";import"./Typography-99bfacf0.js";import"./extendSxProp-981ce5e6.js";import"./Stack-f932b1c9.js";import"./Box-c71138bd.js";import"./useTheme-f0afab46.js";import"./Grow-5236916a.js";import"./isHostComponent-fa76b8d9.js";import"./index-8ce4a492.js";import"./utils-fc362ac6.js";import"./ClickAwayListener-36b79525.js";import"./Tooltip-d9ec209b.js";import"./Button-eaba334d.js";import"./hasClass-ec9efd32.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./isArray-5e3f9107.js";import"./isSymbol-7c514724.js";import"./SynapseConstants-70e9b11b.js";import"./OrientationBanner-09c4930a.js";import"./getEndpoint-ac94413e.js";import"./Link-73927c58.js";import"./createWithBsPrefix-0fdadc7a.js";import"./index-58d3fd43.js";import"./dayjs.min-8d4ef725.js";import"./CheckCircleTwoTone-823e09cb.js";import"./inputBaseClasses-b7e34ae0.js";import"./Fade-bd79ca2f.js";import"./Col-8dbe8567.js";const w=()=>{const{accessToken:t}=x(),[u,_]=e.useState(""),[m,v]=e.useState(""),[h,N]=e.useState(""),[p,g]=e.useState();e.useEffect(()=>{async function r(){const s=await f.getUserProfile(t);g(s)}t?r():g(void 0)},[t]);const P=async r=>{r.preventDefault();try{if(m!==h)i("New password and confirm password does not match.","danger");else if(t){const s={newPassword:m,concreteType:"org.sagebionetworks.repo.model.auth.ChangePasswordWithCurrentPassword",username:p==null?void 0:p.userName,currentPassword:u};await f.changePasswordWithCurrentPassword(s,t).then(()=>i("Successfully changed","success")).catch(b=>i(b.reason,"danger"))}}catch(s){i(s.reason,"danger")}};return o("div",{className:"changePassword",children:a("form",{onSubmit:r=>{P(r)},children:[a(d,{controlId:"oldPassword",children:[o(c,{children:"Current Password"}),o(l,{type:"password",onChange:r=>_(r.target.value),value:u})]}),a(d,{controlId:"newPassword",children:[o(c,{children:"New Password"}),o(l,{type:"password",onChange:r=>v(r.target.value),value:m})]}),a(d,{controlId:"confirmPassword",children:[o(c,{children:"Confirm Password"}),o(l,{type:"password",onChange:r=>N(r.target.value),value:h})]}),o(F,{type:"submit",onSubmit:r=>{P(r)},children:"Change Password"})]})})};try{w.displayName="ChangePassword",w.__docgenInfo={description:"",displayName:"ChangePassword",props:{}}}catch{}const br={title:"Authentication/ChangePassword",component:w},n={};var C,y,S;n.parameters={...n.parameters,docs:{...(C=n.parameters)==null?void 0:C.docs,source:{originalSource:"{}",...(S=(y=n.parameters)==null?void 0:y.docs)==null?void 0:S.source}}};const xr=["ChangePasswordDemo"];export{n as ChangePasswordDemo,xr as __namedExportsOrder,br as default};
//# sourceMappingURL=ChangePassword.stories-abb57c35.js.map
