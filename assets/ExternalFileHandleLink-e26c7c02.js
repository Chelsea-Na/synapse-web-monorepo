var R=Object.defineProperty;var H=(s,o,e)=>o in s?R(s,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[o]=e;var h=(s,o,e)=>(H(s,typeof o!="symbol"?o+"":o,e),e);import{a as f,F as T,j as c}from"./jsx-runtime-9dc53467.js";import{r as E,R as S}from"./index-76fb7be0.js";import{C as U}from"./ChallengeRegisterButton-ce34eb7f.js";import{C as q}from"./ChallengeTeamWizard-2f8a629d.js";import{A as P,C as v,y as D,z as O}from"./SynapseTableCell-88582a84.js";import{m as N,w as V,aO as j,o as d,aP as I,aQ as A,aR as z}from"./SynapseClient-f055f044.js";import"./getEndpoint-ac94413e.js";import"./OrientationBanner-1bd00e8c.js";import{u as J}from"./useEntity-baf17cdc.js";import{u as $}from"./useGetEntityChallenge-54d96f3d.js";import{d as x}from"./ToastMessage-19949884.js";import"./AccessTokenPage-fd75d137.js";import"./AccountLevelBadges-8207de51.js";import"./LastLoginInfo-6872da5d.js";import"./StandaloneLoginForm-12d77cb0.js";import"./TwoFactorAuthSettingsPanel-6b81d169.js";import"./TwoFactorEnrollmentForm-dcafba05.js";import"./TwoFactorBackupCodes-59bf743b.js";import"./CertificationQuiz-ad3b1289.js";import"./index-5bbf6301.js";import"./ChallengeSubmission-fd4a6f1c.js";import"./FullWidthAlert-a8fd2235.js";import"./DownloadCartPage-dc3cd575.js";import"./ShowDownloadV2-aac3411f.js";import"./useEntitySelection-cd3c412d.js";import"./isPlainObject-ad60ab85.js";import"./mapValues-c1561695.js";import"./index.modern-42b48b42.js";import"./index-c71daf5e.js";import"./EvaluationCard-8ba95bfe.js";import"./EvaluationEditorPage-064f8864.js";import"./ExperimentalMode-8dd38f23.js";import{F as M}from"./index-6f2feb22.js";import{O as W}from"./IconSvg-f8ded0ba.js";import"./FileUpload-049c9c48.js";import"./FeaturedDataTabs-ab664818.js";import"./FeaturedToolsList-2613c4c2.js";import"./DiscussionThread-e8aa48f9.js";import"./ForumPage-a7bf9e2c.js";import"./Goals-af451081.js";import"./GoogleMap-0ca6f964.js";import"./Icon-8c39245b.js";import"./OAuthManagement-a3f493d2.js";import"./ThemesPlot-2cd45070.js";import"./UpsetPlot-0068f4c8.js";import"./ProjectViewCarousel-f2461ccc.js";import"./Programs-6c8dc967.js";import"./QueryCount-2713ef81.js";import"./RenderIfInView-df26c1ce.js";import"./Resources-68d1ded2.js";import"./RssFeedCards-2cde338a.js";import"./ShowMore-0d3229ca.js";import"./SkeletonButton-9ffd30ff.js";import"./SkeletonTable-aa2cf667.js";import"./LeftRightPanel-eddfdfe7.js";import"./ObservationCard-91fb736b.js";import"./StyledFormControl-b96b937e.js";import"./WideButton-2acc1d75.js";import"./InputSizedButton-ddaed4de.js";import"./SubscriptionItem-c0a71660.js";import"./DropdownSelect-bf196216.js";import"./SubsectionRowRenderer-0f4f3b70.js";import"./SynapseFormWrapper-cbc523a7.js";import"./SynapseFormSubmissionsGrid-c67544e2.js";import"./SystemUseNotification-e3d02d01.js";import"./TableFeedCards-3cda68bf.js";import"./TermsAndConditions-3cbd2ffa.js";import"./TextField-38c47b70.js";import"./TimelinePlot-fccc2feb.js";import"./UserBadge-e0223fee.js";import"./UserCardList-925273df.js";import"./UserCardListRotate-c6686405.js";import"./UserCardListGroups-69cf9591.js";import"./UserOrTeamBadge-9a56c3d8.js";import"./UserProfileLinks-02c01ec1.js";import"./EntityHeaderTable-c6dd01f2.js";import"./AccessRequirementRelatedProjectsList-ab13b19b.js";import{a as G}from"./useTeamMembers-82c8c224.js";function k({projectId:s}){const{accessToken:o}=N(),[e,t]=E.useState(!1),[i,r]=E.useState(!1),[a,n]=E.useState(!1),{data:l}=V(),{data:m}=J(s),u=F=>{t(F)},y=()=>{r(!0)},p=()=>{n(!0)},{mutate:b}=G({onSuccess:()=>{x("You are no longer registered for this challenge","info")},onError:F=>{x(F.reason,"danger")}}),L=()=>{o&&g&&l&&b({teamId:g.participantTeamId,userId:l.ownerId})},_=()=>{r(!1),o&&t(!0)},{data:g}=$(s);return f(T,{children:[c(U,{projectId:s,onJoinClick:y,onLeaveClick:p}),i&&c(P,{entityId:s,teamId:g==null?void 0:g.participantTeamId,onHide:_,renderAsModal:!0,requestObjectName:m==null?void 0:m.name,dialogTitle:"Challenge Terms and Conditions"}),e&&c(q,{projectId:s,onClose:()=>{u(!1)},isShowingModal:!0}),a&&c(v,{open:a,title:"Leave this Challenge?",content:"Are you sure you want to leave this Challenge?",onCancel:()=>n(!1),onConfirm:()=>{L(),n(!1)}})]})}try{k.displayName="ChallengeDetailPage",k.__docgenInfo={description:"",displayName:"ChallengeDetailPage",props:{projectId:{defaultValue:null,description:"",name:"projectId",required:!0,type:{name:"string"}}}}}catch{}class C extends S.Component{constructor(e){super(e);h(this,"formRef");h(this,"submitForm",()=>{this.formRef.current.submit()});h(this,"refresh",()=>{if(this.context.accessToken){const e=[d.getUserProfile(this.context.accessToken),d.getEntity(this.context.accessToken,this.props.formSchemaEntityId),d.getEntity(this.context.accessToken,this.props.formUiSchemaEntityId)];Promise.all(e).then(t=>{const i=t[0];this.getTargetContainer(i,this.context.accessToken).then(r=>{const a=t[1],n=t[2];this.getSchemaFileContent(r,a,n)})}).catch(t=>{this.onError(t)})}});h(this,"getSchemaFileContent",(e,t,i)=>{const r=[d.getFileResult(t,this.context.accessToken,!0,!0),d.getFileResult(i,this.context.accessToken,!0,!0)];Promise.all(r).then(a=>{try{const n=a.map(l=>I(l.fileHandle,l.preSignedURL));Promise.all(n).then(l=>{const m=JSON.parse(l[0]),u=JSON.parse(l[1]);this.getExistingFileData(e,m,u)}).catch(l=>{console.log("getSchemaFileContent: Error getting form content",l)})}catch(n){console.log("getSchemaFileContent: Error getting schema content",n)}}).catch(a=>{this.onError(a)})});h(this,"getExistingFileData",(e,t,i)=>{const a={entityName:`${t.title}.json`,parentId:e};let n,l;d.lookupChildEntity(a,this.context.accessToken).then(m=>d.getEntity(this.context.accessToken,m.id).then(u=>(l=u,this.props.initFormData?d.getFileResult(l,this.context.accessToken,!0,!0).then(async y=>{try{const p=await I(y.fileHandle,y.preSignedURL);n=JSON.parse(p)}catch(p){console.log("getExistingFileData: Error setting form data",p)}}):Promise.resolve()))).finally(()=>{this.setState({formData:n,currentFileEntity:l,formSchema:t,formUiSchema:i})})});h(this,"getTargetContainer",async(e,t)=>{const i={entityName:e.ownerId,parentId:this.props.parentContainerId};try{const r=await d.lookupChildEntity(i,t);return console.log(`EntityForm uploading to https://www.synapse.org/#!Synapse:${r.id}`),this.setState({userprofile:e,containerId:r.id,isLoading:!1}),r.id}catch(r){return r.status===404?this.onError(new Error("Your folder has not yet been set up, please retry in a few minutes.")):this.onError(r)}});h(this,"finishedProcessing",()=>{this.setState({isLoading:!1,successfullyUploaded:!0})});h(this,"onError",e=>{this.setState({error:e,isLoading:!1,successfullyUploaded:!1})});h(this,"onSubmit",({formData:e})=>{this.setState({isLoading:!0,successfullyUploaded:!1});const t=new Blob([JSON.stringify(e)],{type:"text/json"});this.createEntityFile(t)});h(this,"createEntityFile",e=>{const t=`${this.state.formSchema.title}.json`;d.uploadFile(this.context.accessToken,t,e).then(i=>{const r=i.fileHandleId;if(this.state.currentFileEntity){const n={...this.state.currentFileEntity,dataFileHandleId:r};return this.setState({currentFileEntity:n}),d.updateEntity(n,this.context.accessToken)}const a={parentId:this.state.containerId,name:t,concreteType:"org.sagebionetworks.repo.model.FileEntity",dataFileHandleId:r};return d.createEntity(a,this.context.accessToken)}).then(i=>{this.finishedProcessing(),this.props.synIdCallback&&this.props.synIdCallback(i.id)}).catch(i=>{this.onError(i)})});this.formRef=S.createRef(),this.state={isLoading:!0,successfullyUploaded:!1}}componentDidMount(){this.refresh()}render(){return f("div",{children:[this.state.error&&f("div",{className:"panel panel-danger errors",children:[c("div",{className:"panel-heading",children:c("h3",{className:"panel-title",children:"Error"})}),c("ul",{className:"list-group",children:f("li",{className:"list-group-item text-danger",children:[this.state.error.name," ",this.state.error.reason,this.state.error.message]})})]}),this.context.accessToken&&!this.state.isLoading&&!this.state.successfullyUploaded&&this.state.formSchema&&this.state.formUiSchema&&!this.state.error&&c(D,{validator:O,formData:this.state.formData,schema:this.state.formSchema,uiSchema:this.state.formUiSchema,onSubmit:this.onSubmit,ref:this.formRef,children:c("div",{style:{display:"none"},children:c("button",{type:"submit",className:"btn btn-info",children:"Submit"})})}),!this.state.error&&this.context.accessToken&&this.state.isLoading&&f(S.Fragment,{children:[c("span",{children:"Savingâ€¦"}),c("span",{style:{marginLeft:"2px"},className:"spinner"})]})]})}}h(C,"contextType",j);try{C.displayName="EntityForm",C.__docgenInfo={description:"",displayName:"EntityForm",props:{parentContainerId:{defaultValue:null,description:"",name:"parentContainerId",required:!0,type:{name:"string"}},formSchemaEntityId:{defaultValue:null,description:"",name:"formSchemaEntityId",required:!0,type:{name:"string"}},formUiSchemaEntityId:{defaultValue:null,description:"",name:"formUiSchemaEntityId",required:!0,type:{name:"string"}},initFormData:{defaultValue:null,description:"",name:"initFormData",required:!0,type:{name:"boolean"}},synIdCallback:{defaultValue:null,description:"",name:"synIdCallback",required:!0,type:{name:"(synId: string) => void"}}}}}catch{}const w=s=>{const{accessToken:o}=N(),{synId:e,className:t}=s,[i,r]=E.useState(void 0);E.useEffect(()=>{(async()=>{try{const m=await d.getEntity(o,e);if(!A(m))throw new Error(`File Entity expected but found ${m}`);const u={requestedFiles:[{associateObjectId:e,associateObjectType:M.FileEntity,fileHandleId:m.dataFileHandleId}],includeFileHandles:!0,includePreSignedURLs:!1,includePreviewPreSignedURLs:!1},p=(await d.getFiles(u,o)).requestedFiles[0].fileHandle;if(p&&z(p))r({externalFileHandle:p,fileEntity:m});else throw new Error(`Not an external file handle: ${p==null?void 0:p.id}`)}catch(m){console.error("Error on getting external file handle = ",m)}})()},[e,o]);const a=i==null?void 0:i.externalFileHandle,n=i==null?void 0:i.fileEntity;return a?c("a",{href:a.externalURL,className:t,target:"_blank",rel:"noopener noreferrer",children:f("span",{children:[n==null?void 0:n.name,c(W,{style:{marginLeft:5}})]})}):c(T,{})};try{w.displayName="ExternalFileHandleLink",w.__docgenInfo={description:"",displayName:"ExternalFileHandleLink",props:{synId:{defaultValue:null,description:"",name:"synId",required:!0,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}}}catch{}export{k as C};
//# sourceMappingURL=ExternalFileHandleLink-e26c7c02.js.map
