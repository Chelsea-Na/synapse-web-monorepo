import{a as E,F as S,j as s}from"./jsx-runtime-ad672792.js";import{a as i}from"./index-8ced84e7.js";import{ay as R,di as e,A as C,z as O}from"./SynapseContext-305d1f3b.js";import{u as A,n}from"./MockSubmission-7c088b9f.js";import{M as m}from"./getEndpoint-ac94413e.js";import{g,m as b}from"./mockRejectionReasonsTableQueryResultBundle-3f1173ed.js";import{S as a}from"./SubmissionPage-73ca9a10.js";import"./index-f1f749bf.js";import"./_commonjsHelpers-042e6b4d.js";import"./util-f26b5128.js";import"./inheritsLoose-d541526f.js";import"./setPrototypeOf-0bb37fbe.js";import"./isArray-5e3f9107.js";import"./index-96c5f47c.js";import"./extends-98964cd2.js";import"./SynapseConstants-9d1f6e44.js";import"./SvgIcon-08a7d1dd.js";import"./objectWithoutPropertiesLoose-4f48578a.js";import"./styled-25e9c81a.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-3d5299f2.js";import"./IconSvg-dea1071c.js";import"./Clear-e7243e81.js";import"./useTheme-419a64bd.js";import"./isHostComponent-fa76b8d9.js";import"./useForkRef-dd8a6e5c.js";import"./TransitionGroupContext-a2b6e27b.js";import"./Box-4cee9ecb.js";import"./extendSxProp-f2003eec.js";import"./Button-182a752c.js";import"./ButtonBase-d1b34a95.js";import"./emotion-react.browser.esm-dd348113.js";import"./assertThisInitialized-081f9914.js";import"./Button-7d415009.js";import"./Alert-84d62a08.js";import"./hook-c05d8d9f.js";import"./createWithBsPrefix-e09f51dd.js";import"./divWithClassName-1aeead00.js";import"./index-4d501b15.js";import"./RestrictionInformation-32ce14e2.js";import"./ManagedACTAccessRequirementStatus-9671fe8d.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./isSymbol-7c514724.js";import"./cloneDeep-7c8cf542.js";import"./_baseClone-7eb5ba89.js";import"./_MapCache-b959f5ee.js";import"./_baseTimes-8cccc40f.js";import"./_isIndex-af14b756.js";import"./dayjs.min-e0adaab4.js";import"./DateFormatter-fdc40865.js";import"./utc-8a3e1a17.js";import"./useDataAccessSubmission-cf15a3e9.js";import"./useMutation-d4e6298b.js";import"./mutation-10de04c5.js";import"./useInfiniteQuery-c2dd717b.js";import"./infiniteQueryBehavior-59bece84.js";import"./useAccessRequirements-f6cac2a9.js";import"./AccessRequirementList-a03ccfbc.js";import"./useGetInfoFromIds-1ddf7833.js";import"./use-deep-compare-effect.esm-2b920fea.js";import"./index-5d0cf067.js";import"./uniq-60b06d1c.js";import"./_baseSlice-cf92e063.js";import"./_isIterateeCall-fa576cc1.js";import"./toInteger-b2fa6ce2.js";import"./_cacheHas-b686fc6e.js";import"./without-4b0bdfaf.js";import"./isArrayLikeObject-f42dfcb7.js";import"./_setToArray-3d6ec6fd.js";import"./StandaloneLoginForm-01b9e6af.js";import"./LoginFlowBackButton-2979987c.js";import"./FullWidthAlert-c3b7e4e9.js";import"./Typography-33ebb906.js";import"./TextField-9b1fed4c.js";import"./InputLabel-5fdca580.js";import"./ownerWindow-2c76219e.js";import"./isMuiElement-d529b771.js";import"./index-1aacdabe.js";import"./Popover-9c7fe57e.js";import"./Modal-32c1b9f3.js";import"./Fade-8429402a.js";import"./getScrollbarSize-ac846fe6.js";import"./createChainedFunction-0bab83cf.js";import"./Paper-832645e7.js";import"./MenuList-fa1b4ddf.js";import"./TextField-952fce82.js";import"./Link-f3022853.js";import"./IconButton-47147883.js";import"./FacetNav-570d961d.js";import"./queryUtils-04d13342.js";import"./QueryFilter-e0eee1c5.js";import"./NoSearchResults-79eea014.js";import"./NoData-80d05b97.js";import"./unCamelCase-ec1c2b3d.js";import"./ColumnType-5116adf5.js";import"./useEntity-18f79e3a.js";import"./pick-513679c0.js";import"./useGetQueryResultBundle-21c643f1.js";import"./merge-804d4d14.js";import"./_baseFor-d254fa1e.js";import"./sqlFunctions-23a516ad.js";import"./RegularExpressions-bc0adf55.js";import"./isEqual-be5ebc1d.js";import"./ElementWithTooltip-d78e1348.js";import"./SynapseTableConstants-942d2b0b.js";import"./contains-e27fcc5c.js";import"./hasClass-ec9efd32.js";import"./RadioGroup-2b4593e6.js";import"./RangeSlider-d547757a.js";import"./toConsumableArray-35da523d.js";import"./getPrototypeOf-e4242ba0.js";import"./Skeleton-fcc77827.js";import"./Stack-2d799158.js";import"./factory-76e91d33.js";import"./react-sizeme-2217af01.js";import"./ColorGradient-3d3e1969.js";import"./colorPalette-c43701fe.js";import"./LoadingScreen-3e1b0cd1.js";import"./removeClass-164fd327.js";import"./SelectionCriteriaPill-380ee60a.js";import"./Close-ebe2f384.js";import"./UserCard-967868d0.js";import"./SkeletonTable-e027310b.js";import"./times-3de77af5.js";import"./ToastMessage-af571c99.js";import"./react-intersection-observer.esm-8bf16175.js";import"./EntityIcon-cebeef52.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./uniq-09bea407.js";import"./mapValues-37434819.js";import"./hasIn-cc60ed45.js";import"./_basePickBy-3c68a3e5.js";import"./CustomSelectWidget-b6f215ec.js";import"./Select-457c486b.esm-0decf23a.js";import"./isNativeReflectConstruct-ff095bc2.js";import"./isPlainObject-daba4536.js";import"./now-42968be4.js";import"./union-eb148972.js";import"./_baseMap-4756bbf0.js";import"./useDownloadList-85d29955.js";import"./jsx-runtime_commonjs-proxy-47fcc516.js";import"./DialogContent-39941ad2.js";import"./DialogTitle-14ca6d29.js";import"./QueryCount-84cea6cb.js";import"./react-select.esm-16d2e8ab.js";import"./IconList-a1e9c10d.js";import"./UserCardList-c2cc230b.js";import"./Form-4a4de212.js";import"./FormLabel-897d2462.js";import"./Col-1f1afacc.js";import"./FormGroup-08e5002f.js";import"./FileUpload-c2a777b5.js";import"./UserSearchBox-ad3175f6.js";import"./UserOrTeamBadge-b81bb0a9.js";import"./EntityLink-2b28c044.js";import"./ErrorChip-6470ec23.js";import"./Avatar-74843c84.js";import"./SynapseVideo-ab77032b.js";import"./WarningDialog-1852705c.js";import"./RejectDataAccessRequestModal-c99ce5b2.js";import"./immutable.es-16d68e74.js";import"./upperFirst-79e605a3.js";import"./toLower-271fcf43.js";const To={title:"Governance/SubmissionPage",component:a,render:t=>E(S,{children:[s("p",{children:"First, use the StackChanger component to switch to the Mock Data stack"}),s(R,{children:s(a,{...t})})]})},p={parameters:{msw:{handlers:[i.rest.get(`${m}${e(":id")}`,async(t,o,r)=>{const I=A.find(_=>t.params.id===_.id);return o(r.status(200),r.json(I))}),i.rest.get(`${m}${C(":id")}`,async(t,o,r)=>o(r.status(200),r.json(n))),i.rest.get(`${m}${O(":id")}`,async(t,o,r)=>o(r.status(200),r.json({wikiPageId:123,ownerObjectId:n.id,ownerObjectType:"ACCESS_REQUIREMENT"}))),i.rest.get(`${m}/repo/v1/accessRequirement/:id/acl`,async(t,o,r)=>o(r.status(200),r.json({id:t.id,creationDate:"2022-05-20T14:32:31.665Z",etag:"f4fbd4f2-751d-40dd-9421-1d2693231217",resourceAccess:[{principalId:3350396,accessType:["REVIEW_SUBMISSIONS"]}]}))),...g(b),i.rest.put(`${m}${e(":id")}`,async(t,o,r)=>o(r.status(201),r.json(await t.json())))]}},args:{submissionId:1}};var c,d,u;p.parameters={...p.parameters,docs:{...(c=p.parameters)==null?void 0:c.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [
      // Return submission based on ID
      rest.get(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        const submission = mockSubmissions.find(submission => req.params.id === submission.id);
        return res(ctx.status(200), ctx.json(submission));
      }),
      // Return a mocked access requirement
      rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json(mockManagedACTAccessRequirement));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_WIKI_PAGE_KEY(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          wikiPageId: 123,
          ownerObjectId: mockManagedACTAccessRequirement.id,
          ownerObjectType: 'ACCESS_REQUIREMENT'
        }));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}/repo/v1/accessRequirement/:id/acl\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          id: req.id,
          creationDate: '2022-05-20T14:32:31.665Z',
          etag: 'f4fbd4f2-751d-40dd-9421-1d2693231217',
          resourceAccess: [{
            principalId: 3350396,
            accessType: ['REVIEW_SUBMISSIONS']
          }]
        }));
      }), ...getHandlersForTableQuery(mockRejectionReasonsTableQueryResultBundle), rest.put(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(201), ctx.json(await req.json()));
      })]
    }
  },
  args: {
    submissionId: 1
  }
}`,...(u=(d=p.parameters)==null?void 0:d.docs)==null?void 0:u.source}}};const lo=["Demo"];export{p as Demo,lo as __namedExportsOrder,To as default};
//# sourceMappingURL=SubmissionPage.stories-4b63a728.js.map
