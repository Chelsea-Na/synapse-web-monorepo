import{l as m}from"./index-49fe5bbe.js";import{D as s,A as I,c as _}from"./SynapseClient-c9a5bd80.js";import{g as E,m as S,a as e}from"./wikiHandlers-8fdbdf66.js";import{M as i}from"./getEndpoint-ac94413e.js";import{g as R}from"./tableQueryHandlers-633cc34f.js";import{m as O}from"./mockRejectionReasonsTableQueryResultBundle-59be1fd8.js";import{S as g}from"./SubmissionPage-97b8c36e.js";import{g as C}from"./userProfileHandlers-d25b369a.js";import"./_commonjsHelpers-042e6b4d.js";import"./util-f846e4fa.js";import"./SynapseConstants-fd8b2600.js";import"./OrientationBanner-a68ba799.js";import"./jsx-runtime-095bf462.js";import"./index-8db94870.js";import"./FullWidthAlert-92257a48.js";import"./AlertTitle-b21ffb10.js";import"./styled-708eb06f.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-4abd396b.js";import"./createSvgIcon-ad67928b.js";import"./Paper-7e3a1b51.js";import"./IconButton-c6432c64.js";import"./ButtonBase-e5aaf94c.js";import"./emotion-react.browser.esm-df0ef9f3.js";import"./assertThisInitialized-081f9914.js";import"./inheritsLoose-c82a83d4.js";import"./TransitionGroupContext-f2b81dde.js";import"./useForkRef-f2aa3d66.js";import"./useIsFocusVisible-bbf13f29.js";import"./Typography-661a732d.js";import"./extendSxProp-df3a54f3.js";import"./Stack-54f6c305.js";import"./Box-9f4bb844.js";import"./useTheme-8e3749c8.js";import"./Grow-2ef26a27.js";import"./isHostComponent-fa76b8d9.js";import"./index-8ce4a492.js";import"./utils-4b9b9c32.js";import"./ClickAwayListener-36b79525.js";import"./Tooltip-b7fc1fa3.js";import"./Button-8994ccb5.js";import"./Link-f7a9268e.js";import"./_getTag-376e1527.js";import"./isArray-5e3f9107.js";import"./StringUtils-2ea3ab4d.js";import"./dayjs.min-59ef0ea6.js";import"./index-58d3fd43.js";import"./tiny-invariant-dd7d57d2.js";import"./CheckCircleTwoTone-9226ff35.js";import"./inputBaseClasses-5ec058ed.js";import"./Fade-7b562d23.js";import"./mock_user_profile-e2535b93.js";import"./mockProject-2af0e263.js";import"./times-ac139058.js";import"./_baseTimes-8715be3e.js";import"./identity-46f208ab.js";import"./isSymbol-7c514724.js";import"./mockWiki-646fac38.js";import"./mock_file_handle-acd203c9.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./cloneDeep-ccda587a.js";import"./_baseClone-6c8475ae.js";import"./_Uint8Array-7452eb2c.js";import"./DateFormatter-4dbd3e04.js";import"./useDataAccessSubmission-6291edc8.js";import"./useMutation-2f1605f7.js";import"./useInfiniteQuery-3b3b9895.js";import"./useAccessRequirements-75e0af7d.js";import"./sortBy-46f64980.js";import"./hasIn-f6dcb7c2.js";import"./_getMatchData-d6ee72ad.js";import"./_baseIsEqual-40da9222.js";import"./_cacheHas-be9101cd.js";import"./_setToArray-3d6ec6fd.js";import"./_baseFor-d254fa1e.js";import"./_baseRest-93480809.js";import"./_overRest-d604b584.js";import"./_isIterateeCall-db26cb66.js";import"./SynapseTableCell-b635edb3.js";import"./IconSvg-945ff1be.js";import"./ErrorOutlined-ca5df95b.js";import"./GetAppTwoTone-d6d215ac.js";import"./InfoOutlined-f9189c3f.js";import"./SynapseTableConstants-5f56c39f.js";import"./UserBadge-f4cacc9a.js";import"./Popover-0144fa8f.js";import"./Modal-b50e9afb.js";import"./Backdrop-e3dff1d0.js";import"./getScrollbarSize-ac846fe6.js";import"./ownerWindow-2c76219e.js";import"./createChainedFunction-0bab83cf.js";import"./SkeletonTable-efdad597.js";import"./Skeleton-a13486d8.js";import"./ToastMessage-94764aff.js";import"./hasClass-ec9efd32.js";import"./Avatar-3fa28348.js";import"./EntityLink-ae5fa33e.js";import"./useEntity-0d0c852f.js";import"./isEqual-e30f3433.js";import"./pick-3f1e07b9.js";import"./_baseSlice-cf92e063.js";import"./isPlainObject-37d87cd2.js";import"./useGetEntityHeaders-d26d2026.js";import"./EntityIcon-2efd8753.js";import"./ErrorChip-18698c5b.js";import"./index-95cfb7c2.js";import"./RegularExpressions-bc0adf55.js";import"./SqlFunctions-dbbb8cfa.js";import"./UserSearchBoxV2-662b575c.js";import"./Select-ce3716e1.esm-f23cf9f6.js";import"./isNativeReflectConstruct-e378569d.js";import"./use-deep-compare-effect.esm-7a830988.js";import"./uniq-58323293.js";import"./without-81e8db1a.js";import"./isArrayLikeObject-3672b360.js";import"./UserOrTeamBadge-56e9ecac.js";import"./index-65fee33a.js";import"./Icon-9d857ba8.js";import"./WideButton-fd5c5981.js";import"./LoadingScreen-7b803862.js";import"./LinearProgress-9ffd4557.js";import"./useTeamMembers-d6a97b82.js";import"./ObservationCard-36e41ee3.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./uniq-fe955338.js";import"./mapValues-dee13770.js";import"./isPlainObject-1dec192d.js";import"./now-beb31482.js";import"./ThemesPlot-896c89d7.js";import"./ElementWithTooltip-be82436c.js";import"./Dropdown-5dc5a7ec.js";import"./ThemeProvider-c7f6a893.js";import"./createWithBsPrefix-90b90fab.js";import"./factory-275e83af.js";import"./merge-ef9cbdc0.js";import"./isNil-ea20c8c3.js";import"./useGetQueryResultBundle-d2a30342.js";import"./NoSearchResults-460db635.js";import"./NoData-59ea70fa.js";import"./queryUtils-351d6066.js";import"./LastLoginInfo-68425d85.js";import"./jsx-runtime_commonjs-proxy-8160d2ba.js";import"./isMuiElement-08f54e3c.js";import"./Dialog-e3cfbd15.js";import"./DialogTitle-e828cc8c.js";import"./TextField-2c7ba887.js";import"./InputLabel-ee349efc.js";import"./Select-87888e94.js";import"./index-953d39fd.js";import"./MenuList-2e5fd778.js";import"./tslib.es6-9c2726d7.js";import"./lodash-e374147d.js";import"./StandaloneLoginForm-e81fdfed.js";import"./LoginFlowBackButton-ff6575b1.js";import"./TextField-9e479b3d.js";import"./StyledFormControl-28c005fa.js";import"./LoginMethodButton-5c4c2805.js";import"./Grid-c92a996f.js";import"./RadioGroup-b7f85712.js";import"./Form-d176f007.js";import"./Col-dcc31704.js";import"./FileUpload-3ef4faf8.js";import"./Divider-367bb8cc.js";import"./dividerClasses-9d74bfa4.js";import"./AuthenticatedRequirement-95d709a0.js";import"./RequirementItem-792514e9.js";import"./ConditionalWrapper-51b8d1ed.js";import"./CheckTwoTone-1f037d45.js";import"./CertificationRequirement-33fa311d.js";import"./ValidationRequirement-aa967871.js";import"./TwoFactorAuthEnabledRequirement-32bf7e91.js";import"./TwoFactorEnrollmentForm-b3804669.js";import"./LeftRightPanel-9a9b154d.js";import"./ActionRequiredCard-3ab80f60.js";import"./RequestDownloadCard-ac2cf5fe.js";import"./Tabs-a75e6865.js";import"./QueryCount-9d09a5a9.js";import"./SkeletonButton-bd438720.js";import"./EnumFacetFilterUI-675022fd.js";import"./RangeSlider-41a18432.js";import"./react-sizeme-5bfc490a.js";import"./ColorGradient-3d3e1969.js";import"./colorPalette-c43701fe.js";import"./SelectionCriteriaPill-ddf6f3f5.js";import"./useDownloadList-4ac2cf9d.js";import"./UpsetPlot-9d8eaca4.js";import"./LargeButton-1be1161d.js";import"./SynapseVideo-f0f5d538.js";import"./IconList-dd0b9264.js";import"./UserCardList-e3006869.js";import"./WarningDialog-a7679886.js";import"./RejectDataAccessRequestModal-6e2eea6b.js";import"./immutable.es-400ccb6d.js";import"./FormControlLabel-94a680d4.js";import"./mockEntity-888ecbb8.js";import"./mockFileEntity-958296f8.js";const oi={title:"Governance/SubmissionPage",component:g,parameters:{stack:"mock"}},p={name:"SubmissionPage",parameters:{msw:{handlers:[...C(i),...E(i),m.rest.get(`${i}${s(":id")}`,async(o,t,r)=>{const d=S.find(u=>o.params.id===u.id);return t(r.status(200),r.json(d))}),m.rest.get(`${i}${I(":id")}`,async(o,t,r)=>t(r.status(200),r.json(e))),m.rest.get(`${i}${_(":id")}`,async(o,t,r)=>t(r.status(200),r.json({wikiPageId:123,ownerObjectId:e.id,ownerObjectType:"ACCESS_REQUIREMENT"}))),m.rest.get(`${i}/repo/v1/accessRequirement/:id/acl`,async(o,t,r)=>t(r.status(200),r.json({id:o.id,creationDate:"2022-05-20T14:32:31.665Z",etag:"f4fbd4f2-751d-40dd-9421-1d2693231217",resourceAccess:[{principalId:3350396,accessType:["REVIEW_SUBMISSIONS"]}]}))),...R(O),m.rest.put(`${i}${s(":id")}`,async(o,t,r)=>t(r.status(201),r.json(await o.json())))]}},args:{submissionId:1}};var n,a,c;p.parameters={...p.parameters,docs:{...(n=p.parameters)==null?void 0:n.docs,source:{originalSource:`{
  name: 'SubmissionPage',
  parameters: {
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), ...getWikiHandlers(MOCK_REPO_ORIGIN),
      // Return submission based on ID
      rest.get(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        const submission = mockSubmissions.find(submission => req.params.id === submission.id);
        return res(ctx.status(200), ctx.json(submission));
      }),
      // Return a mocked access requirement
      rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json(mockManagedACTAccessRequirement));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_WIKI_PAGE_KEY(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          wikiPageId: 123,
          ownerObjectId: mockManagedACTAccessRequirement.id,
          ownerObjectType: 'ACCESS_REQUIREMENT'
        }));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}/repo/v1/accessRequirement/:id/acl\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          id: req.id,
          creationDate: '2022-05-20T14:32:31.665Z',
          etag: 'f4fbd4f2-751d-40dd-9421-1d2693231217',
          resourceAccess: [{
            principalId: 3350396,
            accessType: ['REVIEW_SUBMISSIONS']
          }]
        }));
      }), ...getHandlersForTableQuery(mockRejectionReasonsTableQueryResultBundle), rest.put(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(201), ctx.json(await req.json()));
      })]
    }
  },
  args: {
    submissionId: 1
  }
}`,...(c=(a=p.parameters)==null?void 0:a.docs)==null?void 0:c.source}}};const ii=["Demo"];export{p as Demo,ii as __namedExportsOrder,oi as default};
//# sourceMappingURL=SubmissionPage.stories-7bcff315.js.map
