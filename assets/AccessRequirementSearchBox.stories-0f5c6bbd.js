import{A as p}from"./AccessRequirementSearchBox-49ba842d.js";import{d as e}from"./ToastMessage-45d6abdb.js";import"./jsx-runtime-670450c2.js";import"./index-f1f749bf.js";import"./_commonjsHelpers-042e6b4d.js";import"./extends-98964cd2.js";import"./Select-40119e12.esm-e3f1aed8.js";import"./toConsumableArray-85fcc1b5.js";import"./assertThisInitialized-081f9914.js";import"./setPrototypeOf-0bb37fbe.js";import"./getPrototypeOf-e4242ba0.js";import"./isNativeReflectConstruct-ff095bc2.js";import"./styled-8a301de6.js";import"./objectWithoutPropertiesLoose-4f48578a.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-eaaa54fe.js";import"./emotion-react.browser.esm-9a383ad7.js";import"./index-96c5f47c.js";import"./SynapseContext-bbc575bf.js";import"./inheritsLoose-d541526f.js";import"./MenuList-cd8a71d3.js";import"./useTheme-ef578671.js";import"./TransitionGroupContext-ab7f4b4e.js";import"./Clear-4868d5d0.js";import"./useIsFocusVisible-14f92460.js";import"./SvgIcon-80573649.js";import"./index-1aacdabe.js";import"./isArray-a82322d9.js";import"./Button-7d415009.js";import"./index-4d501b15.js";import"./getEndpoint-5374ab4d.js";import"./SynapseConstants-9273577d.js";import"./IconSvg-47f369ba.js";import"./FullWidthAlert-2e72abf6.js";import"./hook-c05d8d9f.js";import"./createWithBsPrefix-e09f51dd.js";import"./divWithClassName-077708db.js";import"./Typography-1aca7d5c.js";import"./Box-3a18cc2d.js";import"./ButtonBase-428d3c85.js";import"./Button-ad1d45e7.js";import"./Link-3d479faf.js";import"./useAccessRequirements-6240fa9e.js";import"./useMutation-84223e98.js";import"./useInfiniteQuery-21033147.js";import"./Skeleton-444b9e51.js";import"./removeClass-164fd327.js";import"./hasClass-ec9efd32.js";import"./uniqueId-9feaf103.js";import"./toString-3056297c.js";import"./isSymbol-b6149709.js";const io={title:"Governance/AccessRequirementSearchBox",component:p},o={args:{onChange:m=>{e("Selected id: "+m,"info")}}};var r,t,i;o.parameters={...o.parameters,docs:{...(r=o.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    onChange: id => {
      displayToast('Selected id: ' + id, 'info');
    }
  }
}`,...(i=(t=o.parameters)==null?void 0:t.docs)==null?void 0:i.source}}};const mo=["AccessRequirementSearchBoxDemo"];export{o as AccessRequirementSearchBoxDemo,mo as __namedExportsOrder,io as default};
//# sourceMappingURL=AccessRequirementSearchBox.stories-0f5c6bbd.js.map
