import{U as p}from"./UserProfileLinks-e1071a4b.js";import"./jsx-runtime-095bf462.js";import"./index-8db94870.js";import"./_commonjsHelpers-042e6b4d.js";import"./SynapseClient-e7496728.js";import"./SynapseConstants-80104a60.js";import"./OrientationBanner-892f3bb7.js";import"./FullWidthAlert-1b71408b.js";import"./AlertTitle-ed62ac3d.js";import"./styled-6ec5f85d.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-8498a53a.js";import"./createSvgIcon-e7cd5941.js";import"./Paper-586cb0df.js";import"./IconButton-2455b4de.js";import"./ButtonBase-43867210.js";import"./emotion-react.browser.esm-b991c11c.js";import"./assertThisInitialized-081f9914.js";import"./inheritsLoose-c82a83d4.js";import"./TransitionGroupContext-f2b81dde.js";import"./useForkRef-f2aa3d66.js";import"./useIsFocusVisible-bbf13f29.js";import"./Typography-65c9d67d.js";import"./extendSxProp-fe165b74.js";import"./Stack-f176d42e.js";import"./Box-3a3e81db.js";import"./useTheme-9d382341.js";import"./Grow-93737182.js";import"./isHostComponent-fa76b8d9.js";import"./index-8ce4a492.js";import"./utils-67eec175.js";import"./ClickAwayListener-36b79525.js";import"./Tooltip-add08016.js";import"./Button-ff2bc4b7.js";import"./getEndpoint-ac94413e.js";import"./Link-a20b00c0.js";import"./isArray-5e3f9107.js";import"./dayjs.min-8d4ef725.js";import"./index-58d3fd43.js";import"./CheckCircleTwoTone-108bcaf3.js";import"./inputBaseClasses-bfe9dd78.js";import"./Fade-fdeca465.js";import"./EntityTypeUtils-559f777b.js";import"./IsType-28b5f4b1.js";import"./IconSvg-69be66d5.js";import"./ErrorOutlined-ddaff4fd.js";import"./GetAppTwoTone-5ba04530.js";import"./InfoOutlined-eb1a3679.js";import"./react-intersection-observer.modern-64b519d2.js";import"./useInfiniteQuery-1dac5014.js";import"./SkeletonTable-65c8faef.js";import"./times-f8aa1b30.js";import"./_baseTimes-8cccc40f.js";import"./isSymbol-7c514724.js";import"./Skeleton-b660800e.js";import"./useGetUserTeams-91ce717a.js";const er={title:"Synapse/UserProfileLinks",component:p},r={args:{userId:"1131050"}};var o,t,m;r.parameters={...r.parameters,docs:{...(o=r.parameters)==null?void 0:o.docs,source:{originalSource:`{
  args: {
    userId: '1131050'
  }
}`,...(m=(t=r.parameters)==null?void 0:t.docs)==null?void 0:m.source}}};const sr=["Demo"];export{r as Demo,sr as __namedExportsOrder,er as default};
//# sourceMappingURL=UserProfileLinks.stories-d4022b13.js.map
