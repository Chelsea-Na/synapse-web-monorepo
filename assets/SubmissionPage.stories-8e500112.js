import{l as m}from"./index-c6708cb3.js";import{cO as s,a6 as I,a7 as _}from"./SynapseClient-171f0a1b.js";import{g as E,h as S,m as e}from"./MockSubmission-e4d558b1.js";import{M as i}from"./getEndpoint-ac94413e.js";import{g as R}from"./tableQueryHandlers-29fc4def.js";import{m as O}from"./mockRejectionReasonsTableQueryResultBundle-59be1fd8.js";import{S as g}from"./SubmissionPage-fe5c0c73.js";import{a as C}from"./userProfileHandlers-e2e4c2b1.js";import"./_commonjsHelpers-042e6b4d.js";import"./util-07d2b794.js";import"./SynapseConstants-d7ecf847.js";import"./OrientationBanner-64c90f6a.js";import"./jsx-runtime-095bf462.js";import"./index-8db94870.js";import"./FullWidthAlert-ed39f490.js";import"./AlertTitle-1c4986af.js";import"./styled-0d0c058b.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-8498a53a.js";import"./createSvgIcon-c04c1e3c.js";import"./Paper-c5bb6f3a.js";import"./IconButton-055a3ecb.js";import"./ButtonBase-89336bd6.js";import"./emotion-react.browser.esm-a1e35fdb.js";import"./assertThisInitialized-081f9914.js";import"./inheritsLoose-c82a83d4.js";import"./TransitionGroupContext-f2b81dde.js";import"./useForkRef-f2aa3d66.js";import"./useIsFocusVisible-bbf13f29.js";import"./Typography-bbc222e1.js";import"./extendSxProp-32377841.js";import"./Stack-b1aaecb6.js";import"./Box-079b1034.js";import"./useTheme-48a0a3fd.js";import"./Grow-abebdd1c.js";import"./isHostComponent-fa76b8d9.js";import"./index-8ce4a492.js";import"./utils-a7612588.js";import"./ClickAwayListener-36b79525.js";import"./Tooltip-ada0ed7d.js";import"./Button-6910d769.js";import"./Link-c55ec6e2.js";import"./isArray-5e3f9107.js";import"./dayjs.min-8d4ef725.js";import"./index-58d3fd43.js";import"./CheckCircleTwoTone-a72e35ba.js";import"./inputBaseClasses-2d1e355f.js";import"./Fade-8ab202b4.js";import"./mock_file_handle-5b522a8e.js";import"./mock_user_profile-4c2454c2.js";import"./times-ffaab5f4.js";import"./_baseTimes-8cccc40f.js";import"./isSymbol-7c514724.js";import"./mockWiki-f39deab5.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./cloneDeep-ea282eda.js";import"./_baseClone-2c01ed5e.js";import"./_Uint8Array-4faa9a3b.js";import"./_MapCache-85eb06d1.js";import"./_isIndex-af14b756.js";import"./DateFormatter-056b161f.js";import"./useDataAccessSubmission-2d26fac5.js";import"./useMutation-d8ff3c7e.js";import"./useInfiniteQuery-10186859.js";import"./useAccessRequirements-54f0ecc7.js";import"./sortBy-9b1326ca.js";import"./hasIn-c04d3a8e.js";import"./_cacheHas-099dde1c.js";import"./_setToArray-3d6ec6fd.js";import"./_baseFor-d254fa1e.js";import"./_baseRest-898656ba.js";import"./_isIterateeCall-6f19f32c.js";import"./ConfirmationDialog-7c25f4f2.js";import"./jsx-runtime_commonjs-proxy-5541547e.js";import"./createChainedFunction-0bab83cf.js";import"./ownerWindow-2c76219e.js";import"./isMuiElement-08f54e3c.js";import"./WideButton-480c75b6.js";import"./IsType-f821fa8c.js";import"./LoadingScreen-d59502c0.js";import"./LinearProgress-8f888fd4.js";import"./Backdrop-85605ced.js";import"./UserCard-79b6d53c.js";import"./SkeletonTable-cba7311a.js";import"./Skeleton-79583c46.js";import"./IconSvg-152a0feb.js";import"./ErrorOutlined-81a5221b.js";import"./InfoOutlined-1e8e00a7.js";import"./ToastMessage-bb65120b.js";import"./hasClass-ec9efd32.js";import"./Popover-35c1d8c6.js";import"./Modal-1e12e009.js";import"./getScrollbarSize-ac846fe6.js";import"./useTeamMembers-6bc0b247.js";import"./RegularExpressions-bc0adf55.js";import"./react-intersection-observer.modern-64b519d2.js";import"./EntityTypeUtils-53507b16.js";import"./EntityIcon-07174069.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./index.modern-5c0c95f2.js";import"./mapValues-045bf44c.js";import"./isPlainObject-8268aa17.js";import"./now-ee4bdf74.js";import"./unCamelCase-d1a1ff8f.js";import"./without-62d74a08.js";import"./isArrayLikeObject-d9aed9de.js";import"./pick-608d774b.js";import"./_baseSlice-cf92e063.js";import"./uniq-6b766403.js";import"./RequestDownloadCard-de353903.js";import"./ActionRequiredCard-a832da10.js";import"./Icon-e69bff94.js";import"./factory-837f2467.js";import"./SqlFunctions-74c8e529.js";import"./useEntity-a7ddd222.js";import"./SynapseTableConstants-942d2b0b.js";import"./use-deep-compare-effect.esm-08e85271.js";import"./index-5d0cf067.js";import"./useDownloadList-e9ff6c7f.js";import"./useGetQueryResultBundle-44124bc1.js";import"./merge-f00cbed5.js";import"./NoSearchResults-460db635.js";import"./NoData-59ea70fa.js";import"./index-953d39fd.js";import"./queryUtils-1f275909.js";import"./UserSearchBoxV2-25826ad5.js";import"./Select-457c486b.esm-2f9c707d.js";import"./isNativeReflectConstruct-e378569d.js";import"./UserOrTeamBadge-f8453423.js";import"./StandaloneLoginForm-b0ff5271.js";import"./LoginFlowBackButton-9623abb4.js";import"./TextField-d56502c1.js";import"./InputLabel-a4beb275.js";import"./MenuList-e8a7bfde.js";import"./TextField-a1ee36d3.js";import"./DialogTitle-55875a60.js";import"./RadioGroup-eb876a69.js";import"./Form-809eed81.js";import"./ThemeProvider-c7f6a893.js";import"./Col-78ecc132.js";import"./createWithBsPrefix-b82f3f4a.js";import"./FileUpload-d2f6d2bc.js";import"./Divider-ac94dde5.js";import"./dividerClasses-a42a4a88.js";import"./AuthenticatedRequirement-12f5002b.js";import"./RequirementItem-829d4e8e.js";import"./ConditionalWrapper-51b8d1ed.js";import"./Avatar-30520b29.js";import"./CertificationRequirement-38472a20.js";import"./ValidationRequirement-b3c90d4a.js";import"./TwoFactorAuthEnabledRequirement-d7e9bdb0.js";import"./TwoFactorEnrollmentForm-ef525493.js";import"./LeftRightPanel-eb895f4c.js";import"./ElementWithTooltip-548f2ef7.js";import"./Tabs-f3ad3863.js";import"./QueryCount-864a17e7.js";import"./RangeSlider-443ce500.js";import"./react-sizeme-0d7fb727.js";import"./ColorGradient-fc5a110b.js";import"./colorPalette-43310703.js";import"./SelectionCriteriaPill-8995669f.js";import"./ErrorChip-8dade2ef.js";import"./IconList-8362e22e.js";import"./UserCardList-6caf04e4.js";import"./EntityLink-1946edfc.js";import"./SynapseVideo-f3058f89.js";import"./WarningDialog-db583a5c.js";import"./RejectDataAccessRequestModal-5bc32e83.js";import"./immutable.es-400ccb6d.js";import"./FormControlLabel-fd939b92.js";import"./upperFirst-79e605a3.js";import"./toLower-271fcf43.js";import"./mockFileEntity-d076d763.js";const ko={title:"Governance/SubmissionPage",component:g,parameters:{stack:"mock"}},p={name:"SubmissionPage",parameters:{msw:{handlers:[...C(i),...E(i),m.rest.get(`${i}${s(":id")}`,async(o,t,r)=>{const d=S.find(u=>o.params.id===u.id);return t(r.status(200),r.json(d))}),m.rest.get(`${i}${I(":id")}`,async(o,t,r)=>t(r.status(200),r.json(e))),m.rest.get(`${i}${_(":id")}`,async(o,t,r)=>t(r.status(200),r.json({wikiPageId:123,ownerObjectId:e.id,ownerObjectType:"ACCESS_REQUIREMENT"}))),m.rest.get(`${i}/repo/v1/accessRequirement/:id/acl`,async(o,t,r)=>t(r.status(200),r.json({id:o.id,creationDate:"2022-05-20T14:32:31.665Z",etag:"f4fbd4f2-751d-40dd-9421-1d2693231217",resourceAccess:[{principalId:3350396,accessType:["REVIEW_SUBMISSIONS"]}]}))),...R(O),m.rest.put(`${i}${s(":id")}`,async(o,t,r)=>t(r.status(201),r.json(await o.json())))]}},args:{submissionId:1}};var n,a,c;p.parameters={...p.parameters,docs:{...(n=p.parameters)==null?void 0:n.docs,source:{originalSource:`{
  name: 'SubmissionPage',
  parameters: {
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), ...getWikiHandlers(MOCK_REPO_ORIGIN),
      // Return submission based on ID
      rest.get(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        const submission = mockSubmissions.find(submission => req.params.id === submission.id);
        return res(ctx.status(200), ctx.json(submission));
      }),
      // Return a mocked access requirement
      rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json(mockManagedACTAccessRequirement));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_WIKI_PAGE_KEY(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          wikiPageId: 123,
          ownerObjectId: mockManagedACTAccessRequirement.id,
          ownerObjectType: 'ACCESS_REQUIREMENT'
        }));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}/repo/v1/accessRequirement/:id/acl\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          id: req.id,
          creationDate: '2022-05-20T14:32:31.665Z',
          etag: 'f4fbd4f2-751d-40dd-9421-1d2693231217',
          resourceAccess: [{
            principalId: 3350396,
            accessType: ['REVIEW_SUBMISSIONS']
          }]
        }));
      }), ...getHandlersForTableQuery(mockRejectionReasonsTableQueryResultBundle), rest.put(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(201), ctx.json(await req.json()));
      })]
    }
  },
  args: {
    submissionId: 1
  }
}`,...(c=(a=p.parameters)==null?void 0:a.docs)==null?void 0:c.source}}};const Do=["Demo"];export{p as Demo,Do as __namedExportsOrder,ko as default};
//# sourceMappingURL=SubmissionPage.stories-8e500112.js.map
