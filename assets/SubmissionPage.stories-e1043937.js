import{l as m}from"./index-ce333ef7.js";import{D as s,A as I,c as _}from"./SynapseClient-f57ae660.js";import{g as E,m as S,a as e}from"./wikiHandlers-856e5ab7.js";import{M as i}from"./getEndpoint-ac94413e.js";import{g as R}from"./tableQueryHandlers-87f66aea.js";import{m as O}from"./mockRejectionReasonsTableQueryResultBundle-59be1fd8.js";import{S as g}from"./SubmissionPage-d60fd1cb.js";import{g as C}from"./userProfileHandlers-0d9405ad.js";import"./_commonjsHelpers-042e6b4d.js";import"./util-f846e4fa.js";import"./SynapseConstants-1e8b38b6.js";import"./OrientationBanner-3e5e2da7.js";import"./jsx-runtime-095bf462.js";import"./index-8db94870.js";import"./FullWidthAlert-7a6f936f.js";import"./AlertTitle-d92dfb78.js";import"./styled-96220216.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-4abd396b.js";import"./createSvgIcon-102248e7.js";import"./Paper-8ac7942c.js";import"./IconButton-1e0dd4f6.js";import"./ButtonBase-0195d275.js";import"./emotion-react.browser.esm-8516f11f.js";import"./assertThisInitialized-081f9914.js";import"./inheritsLoose-c82a83d4.js";import"./TransitionGroupContext-f2b81dde.js";import"./useForkRef-f2aa3d66.js";import"./useIsFocusVisible-bbf13f29.js";import"./Typography-c5b8eeae.js";import"./extendSxProp-d749f662.js";import"./Stack-f7ee2fdc.js";import"./Box-891dc3c7.js";import"./useTheme-a5fe342b.js";import"./Grow-15d1c4f6.js";import"./isHostComponent-fa76b8d9.js";import"./index-8ce4a492.js";import"./utils-60a28f01.js";import"./ClickAwayListener-36b79525.js";import"./Tooltip-e6a8fad5.js";import"./Button-d3d5b3a8.js";import"./Link-9ad54ce1.js";import"./isArray-5e3f9107.js";import"./StringUtils-2ea3ab4d.js";import"./dayjs.min-59ef0ea6.js";import"./index-58d3fd43.js";import"./tiny-invariant-dd7d57d2.js";import"./CheckCircleTwoTone-cd25e954.js";import"./inputBaseClasses-f1eaf41c.js";import"./Fade-5a6f6506.js";import"./mock_user_profile-df1b7d76.js";import"./mockProject-d96bf952.js";import"./times-8ccb103f.js";import"./_baseTimes-8cccc40f.js";import"./isSymbol-7c514724.js";import"./mockWiki-29f4a22b.js";import"./mock_file_handle-a76fb069.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./cloneDeep-a365db42.js";import"./_baseClone-9f84e838.js";import"./_Uint8Array-4df4d9bb.js";import"./DateFormatter-01535191.js";import"./useDataAccessSubmission-09087417.js";import"./useMutation-7ebfc3d6.js";import"./useInfiniteQuery-53f0a141.js";import"./useAccessRequirements-b2afc64c.js";import"./sortBy-92bfe277.js";import"./hasIn-9c6679ad.js";import"./_baseIsEqual-15c50a64.js";import"./_cacheHas-8229e796.js";import"./_setToArray-3d6ec6fd.js";import"./_baseFor-d254fa1e.js";import"./_baseRest-d88c38a9.js";import"./_overRest-65304b82.js";import"./_isIterateeCall-f91c9c66.js";import"./SynapseTableCell-7c6df193.js";import"./IconSvg-fff0cc14.js";import"./ErrorOutlined-b4a8c67a.js";import"./GetAppTwoTone-9a0869d1.js";import"./InfoOutlined-1265fd90.js";import"./SynapseTableConstants-5f56c39f.js";import"./UserBadge-05f79fc1.js";import"./Popover-3ba117be.js";import"./Modal-3a262027.js";import"./Backdrop-1b2a4bbc.js";import"./getScrollbarSize-ac846fe6.js";import"./ownerWindow-2c76219e.js";import"./createChainedFunction-0bab83cf.js";import"./SkeletonTable-30f11726.js";import"./Skeleton-a24326d8.js";import"./ToastMessage-08f9c422.js";import"./hasClass-ec9efd32.js";import"./Avatar-15b73dbe.js";import"./EntityLink-b98eb68c.js";import"./useEntity-1e0843de.js";import"./pick-91897131.js";import"./_baseSlice-cf92e063.js";import"./isPlainObject-231b3409.js";import"./useGetEntityHeaders-e853d202.js";import"./EntityIcon-ac9bf2f9.js";import"./ErrorChip-15fe58be.js";import"./index-95cfb7c2.js";import"./RegularExpressions-bc0adf55.js";import"./SqlFunctions-ba1e7f43.js";import"./UserSearchBoxV2-117ca041.js";import"./Select-ce3716e1.esm-8435c103.js";import"./isNativeReflectConstruct-e378569d.js";import"./use-deep-compare-effect.esm-7a830988.js";import"./uniq-79cd8ec7.js";import"./without-282843ad.js";import"./isArrayLikeObject-73d77e84.js";import"./UserOrTeamBadge-099227d2.js";import"./ElementWithTooltip-4918ec3e.js";import"./Icon-7de7c0af.js";import"./ThemeProvider-c7f6a893.js";import"./createWithBsPrefix-3758f106.js";import"./WideButton-21e8230b.js";import"./LoadingScreen-5786dec8.js";import"./LinearProgress-ddf61131.js";import"./useTeamMembers-7e40bd42.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./uniq-fe955338.js";import"./mapValues-dee13770.js";import"./isPlainObject-1dec192d.js";import"./now-beb31482.js";import"./unCamelCase-1a296bc6.js";import"./isNil-de18dde0.js";import"./factory-275e83af.js";import"./NoSearchResults-460db635.js";import"./NoData-59ea70fa.js";import"./queryUtils-9df5dedb.js";import"./LastLoginInfo-bb9dc871.js";import"./jsx-runtime_commonjs-proxy-0d22bf03.js";import"./isMuiElement-08f54e3c.js";import"./DialogTitle-41c5a17f.js";import"./useGetQueryResultBundle-08a160d1.js";import"./merge-ffb454ab.js";import"./TextField-46d1fd36.js";import"./InputLabel-e8578cb2.js";import"./index-953d39fd.js";import"./MenuList-f2b66e01.js";import"./tslib.es6-9c2726d7.js";import"./lodash-e374147d.js";import"./StandaloneLoginForm-383fd239.js";import"./LoginFlowBackButton-48bbb286.js";import"./TextField-fb7b194a.js";import"./LoginMethodButton-8c264c67.js";import"./Grid-c86b3808.js";import"./RadioGroup-eb876a69.js";import"./Form-b48723b2.js";import"./Col-9f9a4d0f.js";import"./FileUpload-389d3624.js";import"./Divider-a5888bbc.js";import"./dividerClasses-30b81617.js";import"./AuthenticatedRequirement-872550cf.js";import"./RequirementItem-24c0533f.js";import"./ConditionalWrapper-51b8d1ed.js";import"./CheckTwoTone-8ffb1a26.js";import"./CertificationRequirement-3d9e5e43.js";import"./ValidationRequirement-63e9c518.js";import"./TwoFactorAuthEnabledRequirement-5a895fa7.js";import"./TwoFactorEnrollmentForm-443a2b89.js";import"./LeftRightPanel-d94a31dd.js";import"./ActionRequiredCard-b69c3ea8.js";import"./RequestDownloadCard-9d48714b.js";import"./Tabs-e906015a.js";import"./QueryCount-f9d644f6.js";import"./SkeletonButton-1cc36769.js";import"./RangeSlider-e66fc33f.js";import"./react-sizeme-5bfc490a.js";import"./ColorGradient-3d3e1969.js";import"./colorPalette-c43701fe.js";import"./SelectionCriteriaPill-088ed9af.js";import"./useDownloadList-01f9d41e.js";import"./SynapseVideo-11ac1163.js";import"./IconList-56098b44.js";import"./UserCardList-bf2a4bbc.js";import"./WarningDialog-fa3fba86.js";import"./RejectDataAccessRequestModal-5a087853.js";import"./immutable.es-400ccb6d.js";import"./FormControlLabel-efd88e37.js";import"./toLower-271fcf43.js";import"./mockFileEntity-dd31b336.js";const Ho={title:"Governance/SubmissionPage",component:g,parameters:{stack:"mock"}},p={name:"SubmissionPage",parameters:{msw:{handlers:[...C(i),...E(i),m.rest.get(`${i}${s(":id")}`,async(o,t,r)=>{const d=S.find(u=>o.params.id===u.id);return t(r.status(200),r.json(d))}),m.rest.get(`${i}${I(":id")}`,async(o,t,r)=>t(r.status(200),r.json(e))),m.rest.get(`${i}${_(":id")}`,async(o,t,r)=>t(r.status(200),r.json({wikiPageId:123,ownerObjectId:e.id,ownerObjectType:"ACCESS_REQUIREMENT"}))),m.rest.get(`${i}/repo/v1/accessRequirement/:id/acl`,async(o,t,r)=>t(r.status(200),r.json({id:o.id,creationDate:"2022-05-20T14:32:31.665Z",etag:"f4fbd4f2-751d-40dd-9421-1d2693231217",resourceAccess:[{principalId:3350396,accessType:["REVIEW_SUBMISSIONS"]}]}))),...R(O),m.rest.put(`${i}${s(":id")}`,async(o,t,r)=>t(r.status(201),r.json(await o.json())))]}},args:{submissionId:1}};var n,a,c;p.parameters={...p.parameters,docs:{...(n=p.parameters)==null?void 0:n.docs,source:{originalSource:`{
  name: 'SubmissionPage',
  parameters: {
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), ...getWikiHandlers(MOCK_REPO_ORIGIN),
      // Return submission based on ID
      rest.get(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        const submission = mockSubmissions.find(submission => req.params.id === submission.id);
        return res(ctx.status(200), ctx.json(submission));
      }),
      // Return a mocked access requirement
      rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json(mockManagedACTAccessRequirement));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_WIKI_PAGE_KEY(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          wikiPageId: 123,
          ownerObjectId: mockManagedACTAccessRequirement.id,
          ownerObjectType: 'ACCESS_REQUIREMENT'
        }));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}/repo/v1/accessRequirement/:id/acl\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          id: req.id,
          creationDate: '2022-05-20T14:32:31.665Z',
          etag: 'f4fbd4f2-751d-40dd-9421-1d2693231217',
          resourceAccess: [{
            principalId: 3350396,
            accessType: ['REVIEW_SUBMISSIONS']
          }]
        }));
      }), ...getHandlersForTableQuery(mockRejectionReasonsTableQueryResultBundle), rest.put(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(201), ctx.json(await req.json()));
      })]
    }
  },
  args: {
    submissionId: 1
  }
}`,...(c=(a=p.parameters)==null?void 0:a.docs)==null?void 0:c.source}}};const Wo=["Demo"];export{p as Demo,Wo as __namedExportsOrder,Ho as default};
//# sourceMappingURL=SubmissionPage.stories-e1043937.js.map
