import{j as P,a as k}from"./jsx-runtime-670450c2.js";import{r as i,R as w}from"./index-f1f749bf.js";import{P as C,o as O,a as T,b as S,s as v,g as b,Q as x,d as A,i as D,c as _,S as I,e as N,f as Q,h as U,j as M,k as F,l as L,p as q,m as j,n as B,q as G,r as W,t as H,u as K,v as V,w as $,x as z,y as J,z as X}from"./SynapseContext-e01af63a.js";import{S as Y}from"./ToastMessage-b13d8c31.js";import{d as Z}from"./dayjs.min-e0adaab4.js";import{P as ee,B as h,S as te}from"./getEndpoint-5374ab4d.js";import{M as oe}from"./react-router-f7488aa1.js";function ae(e={}){const{onSignInComplete:o,registerAccountUrl:a=`${ee.PORTAL}#!RegisterAccount:0`,onError:t,onTwoFactorAuthRequired:u}=e;i.useEffect(()=>{const n=b(),R=new URL(window.location.href),{searchParams:d}=R;if(!d)return;const p=d.get("code"),r=d.get("provider"),g=d.get("state");if(p&&r){const m=`${n}?provider=${r}`;if(C.GOOGLE==r){const f=s=>{"accessToken"in s?v(s.accessToken).then(o):u&&u(s)},c=s=>{s.status===404&&window.location.replace(a),console.error("Error with Google account association: ",s),t&&t(s.reason)};g?O(g,r,p,m,h.REPO_ENDPOINT).then(f).catch(c):T(r,p,m,h.REPO_ENDPOINT).then(f).catch(c)}else if(C.ORCID==r){const f=c=>{console.error("Error binding ORCiD to account: ",c),t&&t(c.reason)};S(r,p,m,h.REPO_ENDPOINT).then(o).catch(f)}}},[])}var y={},re={get exports(){return y},set exports(e){y=e}};re.exports={ReactQueryDevtools:function(){return null},ReactQueryDevtoolsPanel:function(){return null}};async function se(){let e=await Q(),o;try{o=await U(e)}catch(t){throw t instanceof M&&t.status===401&&(console.error("Encountered error fetching profile: ",t,"Signing out..."),await F(),e=void 0),t}let a;return e&&L(e).then(t=>{a=Z(t.authenticatedOn).format("L LT")}),{accessToken:e,profile:o,authenticatedOn:a}}const l=new x(A);function ne(e){const o=te[e];window.SRC={OVERRIDE_ENDPOINT_CONFIG:o},l.resetQueries()}const ce={default:q,sageBionetworks:j,mtb:B,arkPortal:G,adKnowledgePortal:W,nfPortal:H,bsmnPortal:K,psychEncodePortal:V,stopAdPortal:$,digitalHealthPortal:z,crcResearcherPortal:J,cancerComplexityPortal:X};function E(e){const{storybookContext:o}=e;i.useEffect(()=>{ne(o.globals.stack)},[o.globals.stack]);const[a,t]=w.useState(void 0);ae(),i.useEffect(()=>{se().then(n=>{t(n.accessToken)})}),i.useEffect(()=>{async function n(){await l.cancelQueries(),l.removeQueries(),await l.invalidateQueries()}n()},[a]);const u=i.useMemo(()=>({accessToken:a,isInExperimentalMode:D(),utcTime:_(),withErrorBoundary:!0,downloadCartPageUrl:"/?path=/story/download-downloadcartpage--demo"}),[a]);return P(I,{queryClient:l,synapseContext:u,theme:{...N,palette:ce[o.globals.palette]},children:k(oe,{children:[o.globals.showReactQueryDevtools&&P(y.ReactQueryDevtools,{}),P(Y,{}),P("main",{children:e.children})]})},a)}try{E.displayName="StorybookComponentWrapper",E.__docgenInfo={description:"Wraps storybook story components to ensure that all components receive required context.",displayName:"StorybookComponentWrapper",props:{storybookContext:{defaultValue:null,description:"",name:"storybookContext",required:!0,type:{name:"any"}}}}}catch{}export{E as S,se as s};
//# sourceMappingURL=StorybookComponentWrapper-62774ace.js.map
