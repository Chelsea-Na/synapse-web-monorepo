import{A as p}from"./AccessRequirementSearchBox-0249f03a.js";import{d as e}from"./ToastMessage-35c6fb9f.js";import"./jsx-runtime-670450c2.js";import"./index-f1f749bf.js";import"./_commonjsHelpers-042e6b4d.js";import"./assertThisInitialized-3be3daa4.js";import"./Select-40119e12.esm-ac3104ac.js";import"./toConsumableArray-a463cc8c.js";import"./setPrototypeOf-0bb37fbe.js";import"./styled-8b700d41.js";import"./extends-98964cd2.js";import"./objectWithoutPropertiesLoose-4f48578a.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-eaaa54fe.js";import"./emotion-react.browser.esm-347d859b.js";import"./divWithClassName-7f457938.js";import"./Button-7d415009.js";import"./index-96c5f47c.js";import"./createWithBsPrefix-e09f51dd.js";import"./index-4d501b15.js";import"./SynapseContext-cd269b58.js";import"./Fade-35b87439.js";import"./useTheme-258690b5.js";import"./Clear-13f521c8.js";import"./isHostComponent-957231d5.js";import"./TransitionGroupContext-bc04bc47.js";import"./useForkRef-82d2a376.js";import"./inheritsLoose-c82a83d4.js";import"./SvgIcon-7ba89f58.js";import"./isArray-5e3f9107.js";import"./getEndpoint-5374ab4d.js";import"./SynapseConstants-41b9b1f3.js";import"./IconSvg-6779e461.js";import"./Box-cd1375f8.js";import"./extendSxProp-d3cbd832.js";import"./Button-5067e877.js";import"./ButtonBase-9616f7af.js";import"./assertThisInitialized-081f9914.js";import"./Alert-b65834f6.js";import"./hook-c05d8d9f.js";import"./useAccessRequirements-232dd1c3.js";import"./useMutation-97ddd0b2.js";import"./useInfiniteQuery-37c5c9ce.js";import"./Skeleton-ca1058e7.js";import"./FullWidthAlert-c4ae2fa5.js";import"./Typography-a95fcbe1.js";import"./removeClass-164fd327.js";import"./hasClass-ec9efd32.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./isSymbol-7c514724.js";const io={title:"Governance/AccessRequirementSearchBox",component:p},o={args:{onChange:m=>{e("Selected id: "+m,"info")}}};var r,t,i;o.parameters={...o.parameters,docs:{...(r=o.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    onChange: id => {
      displayToast('Selected id: ' + id, 'info');
    }
  }
}`,...(i=(t=o.parameters)==null?void 0:t.docs)==null?void 0:i.source}}};const mo=["AccessRequirementSearchBoxDemo"];export{o as AccessRequirementSearchBoxDemo,mo as __namedExportsOrder,io as default};
//# sourceMappingURL=AccessRequirementSearchBox.stories-818cb68e.js.map
