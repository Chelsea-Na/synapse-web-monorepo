{"version":3,"file":"FeaturedDataTabs.stories-f5bdd082.js","sources":["../../src/components/widgets/facet-nav/FacetPlotLegendTable.tsx","../../src/components/FeaturedDataTabs/FacetPlotsCardGrid.tsx","../../src/components/Skeleton/SkeletonParagraph.tsx","../../src/components/FeaturedDataTabs/FacetPlotsCard.tsx","../../src/components/FeaturedDataTabs/QueryPerFacetPlotsCard.tsx","../../src/components/FeaturedDataTabs/FeaturedDataTabsUtils.ts","../../src/components/FeaturedDataTabs/SingleQueryFacetPlotsCards.tsx","../../src/components/FeaturedDataTabs/FeaturedDataPlots.tsx","../../src/components/FeaturedDataTabs/FeaturedDataTabs.tsx","../../mocks/query/mockFeaturedDataTabsQueryData.ts"],"sourcesContent":["import { Box, Link, Typography } from '@mui/material'\nimport React from 'react'\nimport {\n  FacetPlotLegendProps,\n  MAX_LEGEND_LENGTH,\n  truncate,\n} from './FacetPlotLegendUtils'\nimport { useQueryVisualizationContext } from '../../QueryVisualizationWrapper'\n\ntype FacetPlotLegendTableProps = FacetPlotLegendProps & {\n  facetName?: string\n  linkToFullQuery?: string\n}\n\nexport function FacetPlotLegendTable(props: FacetPlotLegendTableProps) {\n  const { facetName, labels, colors = [], isExpanded, linkToFullQuery } = props\n\n  const { unitDescription } = useQueryVisualizationContext()\n\n  if (!labels) {\n    return <></>\n  }\n  const numLegendItems = isExpanded\n    ? Math.min(labels.length, 9)\n    : Math.min(labels.length, 4)\n  if (numLegendItems === 0) {\n    return <></>\n  }\n  return (\n    <>\n      <Box\n        component={'table'}\n        className={`FacetNavPanel__body__legend${\n          isExpanded ? '--expanded' : ''\n        }`}\n        sx={{ width: '100%', color: 'grey.800', 'td,th': { py: 0.5 } }}\n      >\n        <thead>\n          <Box\n            component={'tr'}\n            sx={{ borderBottom: '1px solid', borderBottomColor: 'grey.300' }}\n          >\n            <th>\n              <Typography\n                variant={'body1'}\n                sx={{\n                  fontWeight: 700,\n                  size: '14px',\n                }}\n              >\n                {facetName}\n              </Typography>\n            </th>\n            <th style={{ textAlign: 'right', marginRight: '16px' }}>\n              <Typography\n                variant={'body1'}\n                sx={{\n                  size: '14px',\n                  fontWeight: 700,\n                  textAlign: 'right',\n                }}\n              >\n                {unitDescription}\n              </Typography>\n            </th>\n          </Box>\n        </thead>\n        <tbody>\n          {labels.slice(0, numLegendItems).map((facetValue, index) => {\n            const labelDisplay = truncate(facetValue.label, MAX_LEGEND_LENGTH)\n            return (\n              <tr key={facetValue.label}>\n                <td>\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: 1,\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        width: '14px',\n                        height: '14px',\n                        cursor: 'default',\n                        backgroundColor: colors[index],\n                      }}\n                      key={`legendLabel_${index}`}\n                      style={{ cursor: 'default' }}\n                    />\n                    <Typography variant=\"body1\" sx={{ fontSize: '14px' }}>\n                      {labelDisplay}\n                    </Typography>\n                  </Box>\n                </td>\n                <td>\n                  <Typography\n                    variant=\"body1\"\n                    sx={{\n                      fontSize: '14px',\n                      color: 'grey.600',\n                      textAlign: 'right',\n                    }}\n                  >\n                    {facetValue.count}\n                  </Typography>\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </Box>\n      {linkToFullQuery && (\n        <Box sx={{ my: 2 }}>\n          <Link href={linkToFullQuery}>\n            View {labels.length} {facetName} options\n          </Link>\n        </Box>\n      )}\n    </>\n  )\n}\n","import { Box, BoxProps, styled } from '@mui/material'\nimport { StyledComponent } from '@emotion/styled'\n\nexport const FACET_PLOTS_CARD_CLASSNAME = 'FacetPlotsCard'\n\nexport const FACET_PLOTS_CARD_TITLE_CONTAINER_CLASSNAME =\n  'FacetPlotsCardTitleContainer'\n\nexport const FACET_PLOTS_CARD_PLOT_CONTAINER_CLASSNAME =\n  'FacetPlotsCardPlotContainer'\n\nexport const FacetPlotsCardGridContainer: StyledComponent<BoxProps> = styled(\n  Box,\n  {\n    label: 'FacetPlotsCardGridContainer',\n  },\n)(({ theme }) => ({\n  [theme.breakpoints.down('md')]: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  [theme.breakpoints.up('md')]: {\n    /* \n    The grid is broken up into cards which have subcomponents that should be aligned\n    Ideally we could use CSS Subgrid, but it is not widely supported as of the time of writing\n    See https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_grid_layout/Subgrid\n\n    Instead we will use grid with `display: contents`, and style each section to look like a card.\n     */\n    display: 'grid',\n    gridTemplateRows: '[title] auto [plot0] auto',\n    gridTemplateColumns: '[col1] 32% [col2] 32% [col3] 32%',\n    columnGap: '2%',\n\n    [`.${FACET_PLOTS_CARD_CLASSNAME}`]: {\n      display: 'contents',\n    },\n\n    // Since we're using display: contents, we must assign the column based on the\n    // order of the containers\n    [`.${FACET_PLOTS_CARD_CLASSNAME}:nth-of-type(1)`]: {\n      [`.${FACET_PLOTS_CARD_PLOT_CONTAINER_CLASSNAME}`]: {\n        gridColumn: 'col1',\n      },\n    },\n    [`.${FACET_PLOTS_CARD_CLASSNAME}:nth-of-type(2)`]: {\n      [`.${FACET_PLOTS_CARD_PLOT_CONTAINER_CLASSNAME}`]: {\n        gridColumn: 'col2',\n      },\n    },\n    [`.${FACET_PLOTS_CARD_CLASSNAME}:nth-of-type(3)`]: {\n      [`.${FACET_PLOTS_CARD_PLOT_CONTAINER_CLASSNAME}`]: {\n        gridColumn: 'col3',\n      },\n    },\n\n    [`.${FACET_PLOTS_CARD_TITLE_CONTAINER_CLASSNAME}, .${FACET_PLOTS_CARD_PLOT_CONTAINER_CLASSNAME}`]:\n      {\n        // Since we're using `display:contents`, the card container style will not be displayed.\n        // So add box-shadow to each grid item\n        boxShadow: '0px 3px 10px 0px #5D69AB1A',\n        backgroundColor: theme.palette.background.paper,\n      },\n    [`.${FACET_PLOTS_CARD_TITLE_CONTAINER_CLASSNAME}`]: {\n      gridRow: 'title',\n      // For the title portion of the card, use clipPath to hide the box-shadow at the bottom of the section,\n      // since the bottom border is adjacent to the rest of the visual card\n      clipPath: 'inset(-10px -10px 0px -10px)',\n    },\n\n    [`.${FACET_PLOTS_CARD_PLOT_CONTAINER_CLASSNAME}`]: {\n      // For the plots section(s), use clipPath to hide the box-shadow at the top and bottom of the section\n      clipPath: 'inset(0px -10px 0px -10px)',\n    },\n    [`.${FACET_PLOTS_CARD_PLOT_CONTAINER_CLASSNAME}:last-of-type`]: {\n      // For the last plot section, use clipPath to hide the box-shadow at the top of the section\n      // the bottom box-shadow is shown since this is container marks the bottom of the card (visually)\n      borderBottom: '1px solid #e8e8e8',\n      clipPath: 'inset(0px -10px -10px -10px)',\n    },\n  },\n  [`.${FACET_PLOTS_CARD_PLOT_CONTAINER_CLASSNAME}:last-of-type`]: {\n    paddingBottom: theme.spacing(5),\n  },\n}))\n\nexport const FacetPlotsCardTitleContainer: StyledComponent<BoxProps> = styled(\n  Box,\n  {\n    label: 'FacetPlotsCardTitleContainer',\n  },\n)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'start',\n  paddingTop: theme.spacing(5),\n  paddingLeft: theme.spacing(5),\n  paddingRight: theme.spacing(5),\n  minHeight: '64px',\n}))\n\nexport const FacetPlotsCardPlotContainer: StyledComponent<BoxProps> = styled(\n  Box,\n  {\n    label: 'FacetPlotsCardPlotContainer',\n  },\n)(({ theme }) => ({\n  paddingLeft: theme.spacing(5),\n  paddingRight: theme.spacing(5),\n}))\n","import React, { useEffect, useState } from 'react'\nimport Skeleton from '@mui/material/Skeleton'\nimport { times } from 'lodash-es'\n\nexport type SkeletonParagraphProps = {\n  numRows?: number\n  rowHeight?: string\n  className?: string\n}\n\n/**\n * Skeleton component designed to mimic a paragraph.\n */\nexport const SkeletonParagraph: React.FC<SkeletonParagraphProps> = ({\n  numRows = 5,\n  rowHeight,\n  className,\n}) => {\n  const [skeletons, setSkeletons] = useState<JSX.Element[]>([])\n\n  useEffect(() => {\n    const elements: JSX.Element[] = []\n    times(numRows, i => {\n      elements.push(\n        <React.Fragment key={i}>\n          <Skeleton\n            height={rowHeight}\n            width={i === numRows - 1 ? '35%' : '100%'}\n          ></Skeleton>\n        </React.Fragment>,\n      )\n    })\n    setSkeletons(elements)\n  }, [numRows, rowHeight])\n\n  return <div className={className}>{skeletons}</div>\n}\n","import React, { useEffect, useState } from 'react'\nimport Plotly from 'plotly.js-basic-dist'\nimport createPlotlyComponent from 'react-plotly.js/factory'\nimport { SizeMe } from 'react-sizeme'\nimport {\n  ColumnTypeEnum,\n  FacetColumnResult,\n  FacetColumnResultValueCount,\n  FacetColumnResultValues,\n} from '@sage-bionetworks/synapse-types'\nimport {\n  extractPlotDataArray,\n  getPlotStyle,\n  GraphData,\n} from '../widgets/facet-nav/FacetNavPanel'\nimport { getFacets } from '../widgets/facet-nav/FacetNav'\nimport { useSynapseContext } from '../../utils/context/SynapseContext'\nimport { useQueryContext } from '../QueryContext'\nimport { useQueryVisualizationContext } from '../QueryVisualizationWrapper'\nimport { ShowMore } from '../row_renderers/utils'\nimport {\n  Box,\n  Button,\n  Divider,\n  Paper,\n  Skeleton,\n  Typography,\n} from '@mui/material'\nimport { FacetPlotLegendTable } from '../widgets/facet-nav/FacetPlotLegendTable'\nimport {\n  FACET_PLOTS_CARD_CLASSNAME,\n  FACET_PLOTS_CARD_PLOT_CONTAINER_CLASSNAME,\n  FACET_PLOTS_CARD_TITLE_CONTAINER_CLASSNAME,\n  FacetPlotsCardPlotContainer,\n  FacetPlotsCardTitleContainer,\n} from './FacetPlotsCardGrid'\nimport { SkeletonParagraph, SkeletonTable } from '../Skeleton'\nimport { times } from 'lodash-es'\n\nconst Plot = createPlotlyComponent(Plotly)\n\nexport type FacetPlotsCardProps = {\n  title?: string\n  description?: string\n  facetsToPlot?: string[]\n  detailsPagePath?: string\n}\n\nconst layout: Partial<Plotly.Layout> = {\n  showlegend: false,\n  annotations: [],\n  margin: { l: 0, r: 0, b: 0, t: 0, pad: 0 },\n  yaxis: {\n    visible: false,\n    showgrid: false,\n  },\n  xaxis: {\n    visible: false,\n    showgrid: false,\n  },\n}\n\nfunction LoadingCard(props: { numPlots: number }) {\n  const { numPlots } = props\n  return (\n    <Paper className={FACET_PLOTS_CARD_CLASSNAME}>\n      <FacetPlotsCardTitleContainer\n        className={FACET_PLOTS_CARD_TITLE_CONTAINER_CLASSNAME}\n      >\n        <Skeleton width={'60%'} height={'24px'} />\n\n        <SkeletonParagraph numRows={5} />\n\n        <Skeleton width={'40%'}>\n          <Button variant={'contained'}>Explore</Button>\n        </Skeleton>\n      </FacetPlotsCardTitleContainer>\n      {times(numPlots).map(index => (\n        <FacetPlotsCardPlotContainer\n          key={index}\n          className={FACET_PLOTS_CARD_PLOT_CONTAINER_CLASSNAME}\n          sx={{\n            py: 3,\n            gridRow: `plot${index}`,\n          }}\n        >\n          <Skeleton width={'100%'} height={'300px'} />\n          <SkeletonTable numRows={4} numCols={2} />\n        </FacetPlotsCardPlotContainer>\n      ))}\n    </Paper>\n  )\n}\nconst FacetPlotsCard: React.FunctionComponent<FacetPlotsCardProps> = ({\n  title,\n  description,\n  facetsToPlot,\n  detailsPagePath,\n}: FacetPlotsCardProps): JSX.Element => {\n  const { accessToken } = useSynapseContext()\n  const { data, isLoadingNewBundle } = useQueryContext<\n    'columnModels' | 'facets',\n    true\n  >()\n  const { getColumnDisplayName } = useQueryVisualizationContext()\n  const [facetPlotDataArray, setFacetPlotDataArray] = useState<GraphData[]>([])\n  const [facetDataArray, setFacetDataArray] = useState<FacetColumnResult[]>([])\n  const [selectedFacetValue, setSelectedFacetValue] = useState<string>('')\n\n  useEffect(() => {\n    if (!facetsToPlot || !data) {\n      return\n    } else {\n      const getColumnType = (\n        facetToPlot: FacetColumnResult,\n      ): ColumnTypeEnum | undefined =>\n        data?.columnModels.find(\n          columnModel => columnModel.name === facetToPlot.columnName,\n        )?.columnType as ColumnTypeEnum\n\n      const facetsDataToPlot = getFacets(data, facetsToPlot)\n      setFacetDataArray(facetsDataToPlot)\n      Promise.all(\n        facetsDataToPlot.map(async (item, index) => {\n          const plotData = await extractPlotDataArray(\n            item as FacetColumnResultValues,\n            getColumnType(item),\n            index + 1, //individual plot rgbIndex\n            'PIE',\n            accessToken,\n          )\n          return plotData\n        }),\n      ).then(newPlotData => setFacetPlotDataArray(newPlotData))\n      // If we are showing a facet selection based card, then set the selectedFacetValue.  For example, facet column \"study\" with value \"ROSMAP\"\n      const selectedFacet: FacetColumnResultValueCount | undefined =\n        data?.facets\n          .map(item => {\n            const facetValues: FacetColumnResultValueCount[] = (\n              item as FacetColumnResultValues\n            ).facetValues\n            if (facetValues) {\n              const filteredFacetValues: FacetColumnResultValueCount[] =\n                facetValues.filter(facetValue => {\n                  return facetValue.isSelected\n                })\n              return filteredFacetValues.length > 0\n                ? filteredFacetValues[0]\n                : undefined\n            } else {\n              return undefined\n            }\n          })\n          .filter(x => x !== undefined)[0]\n\n      if (selectedFacet && selectedFacet.value) {\n        setSelectedFacetValue(selectedFacet?.value)\n      }\n    }\n  }, [facetsToPlot, data, accessToken])\n\n  if (\n    isLoadingNewBundle ||\n    !facetPlotDataArray ||\n    !facetDataArray ||\n    facetDataArray.length === 0\n  ) {\n    return <LoadingCard numPlots={(facetsToPlot ?? []).length} />\n  } else {\n    const isShowingMultiplePlots = facetPlotDataArray.length > 1\n    const cardTitle =\n      title ??\n      (isShowingMultiplePlots\n        ? selectedFacetValue\n        : getColumnDisplayName(facetDataArray[0].columnName))\n    return (\n      <Paper className={FACET_PLOTS_CARD_CLASSNAME} sx={{ overflow: 'hidden' }}>\n        <FacetPlotsCardTitleContainer\n          className={FACET_PLOTS_CARD_TITLE_CONTAINER_CLASSNAME}\n        >\n          <Typography variant={'headline1'}>{cardTitle}</Typography>\n          {description && (\n            <Typography variant={'body1'} sx={{ color: 'grey.700', my: 2 }}>\n              <ShowMore summary={description} maxCharacterCount={200} />\n            </Typography>\n          )}\n\n          {detailsPagePath && selectedFacetValue && (\n            <Box sx={{ my: 2 }}>\n              <Button\n                variant={'contained'}\n                href={detailsPagePath}\n                color={'secondary'}\n              >\n                Explore {selectedFacetValue}\n              </Button>\n            </Box>\n          )}\n        </FacetPlotsCardTitleContainer>\n\n        {/* create a plot for every facet to be plotted */}\n        {facetPlotDataArray.map((plotData, index) => {\n          return (\n            <React.Fragment key={index}>\n              <FacetPlotsCardPlotContainer\n                className={FACET_PLOTS_CARD_PLOT_CONTAINER_CLASSNAME}\n                sx={{\n                  pt: index === 0 ? 5 : 0,\n                  gridRow: `plot${index}`,\n                }}\n                key={index}\n              >\n                {index != 0 && <Divider sx={{ mt: 2, mb: 4 }} />}\n                <Box sx={{ minHeight: '130px' }}>\n                  <SizeMe monitorHeight noPlaceholder>\n                    {({ size }) => (\n                      <Box\n                        sx={{\n                          display: 'flex',\n                          justifyContent: 'center',\n                          alignItems: 'center',\n                        }}\n                      >\n                        <Plot\n                          key={`${facetsToPlot![index]}-${size.width!}`}\n                          layout={layout}\n                          data={plotData?.data ?? []}\n                          style={getPlotStyle(size.width, 'PIE', 150)}\n                          config={{ displayModeBar: false }}\n                        />\n                      </Box>\n                    )}\n                  </SizeMe>\n                  <Box sx={{ mt: 4, width: '100%' }}>\n                    <FacetPlotLegendTable\n                      facetName={getColumnDisplayName(\n                        facetDataArray[index].columnName,\n                      )}\n                      labels={plotData?.labels}\n                      colors={plotData?.colors}\n                      isExpanded={false}\n                      linkToFullQuery={detailsPagePath}\n                    />\n                  </Box>\n                </Box>\n              </FacetPlotsCardPlotContainer>\n            </React.Fragment>\n          )\n        })}\n      </Paper>\n    )\n  }\n}\n\nexport default FacetPlotsCard\n","import React from 'react'\nimport { SynapseConstants } from '../../utils'\nimport { parseEntityIdFromSqlStatement } from '../../utils/functions'\nimport { DEFAULT_PAGE_SIZE } from '../../utils/SynapseConstants'\nimport { QueryBundleRequest } from '@sage-bionetworks/synapse-types'\nimport {\n  QueryVisualizationContextType,\n  QueryVisualizationWrapper,\n} from '../QueryVisualizationWrapper'\nimport { QueryWrapper } from '../QueryWrapper'\nimport { QueryWrapperErrorBanner } from '../QueryWrapperErrorBanner'\nimport FacetPlotsCard from './FacetPlotsCard'\n\nexport type QueryPerFacetPlotsCardProps = {\n  title?: string\n  description?: string\n  rgbIndex?: number\n  facetsToPlot?: string[]\n  selectFacetColumnName: string\n  selectFacetColumnValue: string\n  sql?: string\n  detailsPagePath: string\n} & Pick<QueryVisualizationContextType, 'unitDescription'>\n\nexport function getQueryRequest(\n  sql: string,\n  selectFacetColumnName: string,\n  selectFacetColumnValue: string,\n): QueryBundleRequest {\n  const entityId = parseEntityIdFromSqlStatement(sql)\n  return {\n    entityId,\n    concreteType: 'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n    partMask:\n      SynapseConstants.BUNDLE_MASK_QUERY_COLUMN_MODELS |\n      SynapseConstants.BUNDLE_MASK_QUERY_FACETS,\n    query: {\n      sql,\n      offset: 0,\n      limit: DEFAULT_PAGE_SIZE,\n      selectedFacets: [\n        {\n          columnName: selectFacetColumnName,\n          facetValues: [selectFacetColumnValue],\n          concreteType:\n            'org.sagebionetworks.repo.model.table.FacetColumnValuesRequest',\n        },\n      ],\n    },\n  }\n}\nconst QueryPerFacetPlotsCard: React.FunctionComponent<\n  QueryPerFacetPlotsCardProps\n> = props => {\n  const {\n    title,\n    description,\n    sql,\n    facetsToPlot,\n    rgbIndex,\n    selectFacetColumnName,\n    selectFacetColumnValue,\n    detailsPagePath,\n    ...rest\n  } = props\n  const initQueryRequest: QueryBundleRequest = getQueryRequest(\n    sql!,\n    selectFacetColumnName,\n    selectFacetColumnValue,\n  )\n  return (\n    <QueryWrapper {...rest} initQueryRequest={initQueryRequest}>\n      <QueryVisualizationWrapper rgbIndex={rgbIndex} {...rest}>\n        <QueryWrapperErrorBanner />\n        <FacetPlotsCard\n          title={title}\n          description={description}\n          facetsToPlot={facetsToPlot}\n          detailsPagePath={detailsPagePath}\n        />\n      </QueryVisualizationWrapper>\n    </QueryWrapper>\n  )\n}\n\nexport default QueryPerFacetPlotsCard\n","export const CARDS_PER_ROW = 3\n","import React from 'react'\nimport { SynapseConstants } from '../../utils'\nimport { parseEntityIdFromSqlStatement } from '../../utils/functions'\nimport { QueryBundleRequest } from '@sage-bionetworks/synapse-types'\nimport {\n  QueryVisualizationContextType,\n  QueryVisualizationWrapper,\n} from '../QueryVisualizationWrapper'\nimport { QueryWrapper } from '../QueryWrapper'\nimport { QueryWrapperErrorBanner } from '../QueryWrapperErrorBanner'\nimport FacetPlotsCard from './FacetPlotsCard'\nimport { chunk } from 'lodash-es'\nimport { FacetPlotsCardGridContainer } from './FacetPlotsCardGrid'\nimport { CARDS_PER_ROW } from './FeaturedDataTabsUtils'\n\nexport type SingleQueryFacetPlotsCardsProps = {\n  rgbIndex?: number\n  facetsToPlot?: string[]\n  columnAliases?: Record<string, string>\n  sql?: string\n} & Pick<QueryVisualizationContextType, 'unitDescription'>\n\nexport function getQueryRequest(sql: string): QueryBundleRequest {\n  const entityId = parseEntityIdFromSqlStatement(sql)\n  return {\n    entityId,\n    concreteType: 'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n    partMask:\n      SynapseConstants.BUNDLE_MASK_QUERY_COLUMN_MODELS |\n      SynapseConstants.BUNDLE_MASK_QUERY_FACETS,\n    query: {\n      sql,\n      offset: 0,\n      limit: 1,\n    },\n  }\n}\n\nconst SingleQueryFacetPlotsCards: React.FunctionComponent<\n  SingleQueryFacetPlotsCardsProps\n> = props => {\n  const { sql, facetsToPlot, rgbIndex, columnAliases, unitDescription } = props\n  const initQueryRequest: QueryBundleRequest = getQueryRequest(sql!)\n  return (\n    <QueryWrapper initQueryRequest={initQueryRequest}>\n      <QueryVisualizationWrapper\n        rgbIndex={rgbIndex}\n        columnAliases={columnAliases}\n        unitDescription={unitDescription}\n      >\n        <QueryWrapperErrorBanner />\n        {chunk(facetsToPlot, CARDS_PER_ROW).map((facets, rowIndex) => {\n          return (\n            <FacetPlotsCardGridContainer\n              key={rowIndex}\n              className={`FeaturedDataPlots__queryPerCard`}\n              sx={{\n                my: 4,\n              }}\n            >\n              {facets?.map(facetName => {\n                return (\n                  <FacetPlotsCard key={facetName} facetsToPlot={[facetName]} />\n                )\n              })}\n            </FacetPlotsCardGridContainer>\n          )\n        })}\n      </QueryVisualizationWrapper>\n    </QueryWrapper>\n  )\n}\n\nexport default SingleQueryFacetPlotsCards\n","import React from 'react'\nimport QueryPerFacetPlotsCard, {\n  QueryPerFacetPlotsCardProps,\n} from './QueryPerFacetPlotsCard'\nimport SingleQueryFacetPlotsCards, {\n  SingleQueryFacetPlotsCardsProps,\n} from './SingleQueryFacetPlotsCards'\nimport { chunk, times } from 'lodash-es'\nimport { FacetPlotsCardGridContainer } from './FacetPlotsCardGrid'\nimport { CARDS_PER_ROW } from './FeaturedDataTabsUtils'\n\nexport type QueryFacetPlotsCardsProps =\n  | QueryPerFacetPlotsCardProps\n  | SingleQueryFacetPlotsCardsProps\n\nexport type FeaturedDataPlotsProps = {\n  configs: QueryFacetPlotsCardsProps[]\n  rgbIndex?: number\n  sql?: string\n  explorePagePath?: string\n}\n\nconst FeaturedDataPlots: React.FunctionComponent<\n  FeaturedDataPlotsProps\n> = props => {\n  const { configs, rgbIndex, sql } = props\n  // What mode are we in?  Either every card has a different selected facet (requiring a different query),\n  // or we're showing the facet counts for a single query.  This controls the layout, and how the cards are populated.\n  const isQueryPerCard = configs && 'selectFacetColumnName' in configs[0]\n\n  if (!isQueryPerCard) {\n    return (\n      <>\n        {(configs as SingleQueryFacetPlotsCardsProps[]).map(config => {\n          return (\n            !isQueryPerCard && (\n              <SingleQueryFacetPlotsCards\n                {...config}\n                rgbIndex={rgbIndex}\n                sql={sql}\n              />\n            )\n          )\n        })}\n      </>\n    )\n  } else if (isQueryPerCard) {\n    return (\n      <>\n        {chunk(configs as QueryPerFacetPlotsCardProps[], CARDS_PER_ROW).map(\n          (configRow, rowIndex) => {\n            let cssGridTemplateRows = '[title] auto'\n\n            // There may be more than one plot per card, so add a row for each one\n            times(configRow[0].facetsToPlot?.length ?? 1).forEach(\n              (value, index) => {\n                cssGridTemplateRows += ` [plot${index}] auto`\n              },\n            )\n\n            return (\n              <FacetPlotsCardGridContainer\n                key={rowIndex}\n                sx={{\n                  gridTemplateRows: cssGridTemplateRows,\n                }}\n              >\n                {configRow.map(config => {\n                  return (\n                    <QueryPerFacetPlotsCard\n                      key={config.selectFacetColumnName}\n                      {...config}\n                      rgbIndex={rgbIndex}\n                      sql={sql}\n                    />\n                  )\n                })}\n              </FacetPlotsCardGridContainer>\n            )\n          },\n        )}\n      </>\n    )\n  }\n  return <></>\n}\n\nexport default FeaturedDataPlots\n","import React from 'react'\nimport { useState } from 'react'\nimport FeaturedDataPlots, { FeaturedDataPlotsProps } from './FeaturedDataPlots'\nimport { Icon } from '../row_renderers/utils'\nimport NoContentAvailable from '../SynapseTable/NoContentAvailable'\nimport { Button } from '@mui/material'\nimport { Paper } from '@mui/material'\n\nexport type FeatureDataTabProps = {\n  title: string // type of data being shown, used for the tab title and explore all button\n  icon?: string\n  exploreObjectType?: string\n  explorePagePath?: string\n  plotsConfig: FeaturedDataPlotsProps\n}\n\nexport type FeaturedDataTabsProps = {\n  configs: FeatureDataTabProps[]\n  rgbIndex: number\n  sql: string\n}\n\nconst FeaturedDataTabs: React.FunctionComponent<\n  FeaturedDataTabsProps\n> = props => {\n  const [selectedTabIndex, setSelectedTabIndex] = useState<number>(0)\n  const { configs, rgbIndex, sql } = props\n  // explore all data button\n  const selectedTabProps: FeatureDataTabProps = configs[selectedTabIndex]\n  return (\n    <div className=\"FeaturedDataTabs\">\n      {/* tabs */}\n      <div className=\"FeaturedDataTabs__tabs\">\n        {configs.map((config, index) => {\n          const isSelectedTabIndex: boolean = index === selectedTabIndex\n          return (\n            <div\n              className={`FeaturedDataTabs__tabs__tab ${\n                isSelectedTabIndex\n                  ? 'FeaturedDataTabs__tabs__tab__selected'\n                  : ''\n              }`}\n              key={config.title}\n            >\n              <button\n                className=\"SRC-centerAndJustifyContent\"\n                onClick={() => setSelectedTabIndex(index)}\n              >\n                {config.icon && <Icon type={config.icon}></Icon>}\n                <span>{config.title}</span>\n              </button>\n            </div>\n          )\n        })}\n      </div>\n      {/* tab content */}\n      {selectedTabProps && (\n        <>\n          {selectedTabProps.plotsConfig.configs.length > 0 ? (\n            <>\n              <FeaturedDataPlots\n                key={`${sql}-${selectedTabIndex}`}\n                sql={sql}\n                rgbIndex={rgbIndex}\n                explorePagePath={selectedTabProps.explorePagePath}\n                {...selectedTabProps.plotsConfig}\n              />\n              {selectedTabProps.explorePagePath && (\n                <div className=\"FeaturedDataTabs__explore-all\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    href={selectedTabProps.explorePagePath}\n                  >\n                    View All {selectedTabProps.exploreObjectType}\n                  </Button>\n                </div>\n              )}\n            </>\n          ) : (\n            <Paper sx={{ p: 2 }}>\n              <NoContentAvailable />\n            </Paper>\n          )}\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default FeaturedDataTabs\n","import { QueryResultBundle } from '@sage-bionetworks/synapse-types'\n\nexport const mockSingleQueryResult: QueryResultBundle = {\n  concreteType: 'org.sagebionetworks.repo.model.table.QueryResultBundle',\n  columnModels: [\n    {\n      id: '81721',\n      name: 'id',\n      columnType: 'ENTITYID',\n    },\n    {\n      id: '81722',\n      name: 'name',\n      columnType: 'STRING',\n      maximumSize: 256,\n    },\n    {\n      id: '115314',\n      name: 'consortium',\n      columnType: 'STRING',\n      maximumSize: 7,\n    },\n    {\n      id: '126424',\n      name: 'collectionType',\n      columnType: 'STRING',\n      maximumSize: 50,\n      facetType: 'enumeration',\n    },\n    {\n      id: '119622',\n      name: 'diagnosis',\n      columnType: 'STRING_LIST',\n      maximumSize: 22,\n      maximumListLength: 6,\n      facetType: 'enumeration',\n    },\n    {\n      id: '115707',\n      name: 'intervention',\n      columnType: 'STRING',\n      maximumSize: 8,\n      facetType: 'enumeration',\n    },\n    {\n      id: '118320',\n      name: 'deviceType',\n      columnType: 'STRING_LIST',\n      maximumSize: 8,\n      maximumListLength: 2,\n      facetType: 'enumeration',\n    },\n    {\n      id: '120041',\n      name: 'sensorType',\n      columnType: 'STRING_LIST',\n      maximumSize: 18,\n      maximumListLength: 6,\n      facetType: 'enumeration',\n    },\n    {\n      id: '119930',\n      name: 'dataCollectionMethod',\n      columnType: 'STRING_LIST',\n      maximumSize: 24,\n      maximumListLength: 4,\n      facetType: 'enumeration',\n    },\n    {\n      id: '123866',\n      name: 'devicePlatform',\n      columnType: 'STRING_LIST',\n      maximumSize: 9,\n      maximumListLength: 6,\n      facetType: 'enumeration',\n    },\n    {\n      id: '120039',\n      name: 'deviceLocation',\n      columnType: 'STRING_LIST',\n      maximumSize: 12,\n      maximumListLength: 6,\n      facetType: 'enumeration',\n    },\n    {\n      id: '123225',\n      name: 'reportedOutcome',\n      columnType: 'STRING_LIST',\n      maximumSize: 32,\n      maximumListLength: 20,\n      facetType: 'enumeration',\n    },\n    {\n      id: '123873',\n      name: 'digitalAssessmentCategory',\n      columnType: 'STRING_LIST',\n      maximumSize: 30,\n      maximumListLength: 7,\n      facetType: 'enumeration',\n    },\n    {\n      id: '115316',\n      name: 'dataAccessInstructions',\n      columnType: 'STRING',\n      maximumSize: 23,\n    },\n    {\n      id: '126421',\n      name: 'dataUsed',\n      columnType: 'STRING_LIST',\n      maximumSize: 150,\n      maximumListLength: 8,\n    },\n    {\n      id: '115329',\n      name: 'dhPortalIndex',\n      columnType: 'STRING',\n      maximumSize: 5,\n    },\n    {\n      id: '123865',\n      name: 'digitalAssessmentDetails',\n      columnType: 'STRING_LIST',\n      maximumSize: 48,\n      maximumListLength: 20,\n    },\n    {\n      id: '123867',\n      name: 'investigator',\n      columnType: 'STRING_LIST',\n      maximumSize: 40,\n      maximumListLength: 4,\n    },\n    {\n      id: '116304',\n      name: 'isDHProject',\n      columnType: 'STRING',\n      maximumSize: 4,\n    },\n    {\n      id: '125776',\n      name: 'keywords',\n      columnType: 'STRING_LIST',\n      maximumSize: 27,\n      maximumListLength: 15,\n    },\n    {\n      id: '121026',\n      name: 'numberParticipants',\n      columnType: 'INTEGER',\n      facetType: 'range',\n    },\n    {\n      id: '123869',\n      name: 'resourceType',\n      columnType: 'STRING_LIST',\n      maximumSize: 16,\n      maximumListLength: 5,\n    },\n    {\n      id: '123870',\n      name: 'sensorDataType',\n      columnType: 'STRING_LIST',\n      maximumSize: 9,\n      maximumListLength: 5,\n    },\n    {\n      id: '169212',\n      name: 'study',\n      columnType: 'STRING',\n      maximumSize: 80,\n    },\n    {\n      id: '129708',\n      name: 'studyDataDescriptionLocation',\n      columnType: 'STRING',\n      maximumSize: 30,\n    },\n    {\n      id: '116307',\n      name: 'studyDescription',\n      columnType: 'STRING',\n      maximumSize: 267,\n    },\n    {\n      id: '116752',\n      name: 'studyDescriptionLocation',\n      columnType: 'STRING',\n      maximumSize: 30,\n    },\n  ],\n  facets: [\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'collectionType',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'Observational Study',\n          count: 7,\n          isSelected: false,\n        },\n        {\n          value: 'Analysis',\n          count: 2,\n          isSelected: false,\n        },\n        {\n          value: 'Challenge',\n          count: 2,\n          isSelected: false,\n        },\n        {\n          value: 'Interventional Study',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'Validation Study',\n          count: 1,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'diagnosis',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'control',\n          count: 10,\n          isSelected: false,\n        },\n        {\n          value: \"Parkinson's Disease\",\n          count: 6,\n          isSelected: false,\n        },\n        {\n          value: 'multiple sclerosis',\n          count: 2,\n          isSelected: false,\n        },\n        {\n          value: 'asthma',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'depression',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'endometriosis',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'melanoma',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'sleep related disorder',\n          count: 1,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'intervention',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 12,\n          isSelected: false,\n        },\n        {\n          value: 'levodopa',\n          count: 1,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'deviceType',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'handheld',\n          count: 13,\n          isSelected: false,\n        },\n        {\n          value: 'wearable',\n          count: 6,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'sensorType',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'accelerometer',\n          count: 9,\n          isSelected: false,\n        },\n        {\n          value: 'gyroscope',\n          count: 8,\n          isSelected: false,\n        },\n        {\n          value: 'touchscreen',\n          count: 7,\n          isSelected: false,\n        },\n        {\n          value: 'magnetometer',\n          count: 4,\n          isSelected: false,\n        },\n        {\n          value: 'microphone',\n          count: 3,\n          isSelected: false,\n        },\n        {\n          value: 'camera',\n          count: 2,\n          isSelected: false,\n        },\n        {\n          value: 'pedometer',\n          count: 2,\n          isSelected: false,\n        },\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'gps',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'oximeter',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'photosensor',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'spectrocolorimeter',\n          count: 1,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'dataCollectionMethod',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'patient reported outcome',\n          count: 13,\n          isSelected: false,\n        },\n        {\n          value: 'active',\n          count: 10,\n          isSelected: false,\n        },\n        {\n          value: 'passive',\n          count: 7,\n          isSelected: false,\n        },\n        {\n          value: 'clinical assessment',\n          count: 4,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'devicePlatform',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'iOS',\n          count: 12,\n          isSelected: false,\n        },\n        {\n          value: 'Android',\n          count: 7,\n          isSelected: false,\n        },\n        {\n          value: 'GENEActiv',\n          count: 2,\n          isSelected: false,\n        },\n        {\n          value: 'Pebble OS',\n          count: 2,\n          isSelected: false,\n        },\n        {\n          value: 'Fitbit',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'Pantone',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'Shimmer',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'Windows',\n          count: 1,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'deviceLocation',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'hand',\n          count: 9,\n          isSelected: false,\n        },\n        {\n          value: 'pocket',\n          count: 8,\n          isSelected: false,\n        },\n        {\n          value: 'wrist',\n          count: 6,\n          isSelected: false,\n        },\n        {\n          value: 'flat surface',\n          count: 3,\n          isSelected: false,\n        },\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'back',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'face',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'finger',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'forearm',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'shank',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'waist',\n          count: 1,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'reportedOutcome',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'medication report',\n          count: 7,\n          isSelected: false,\n        },\n        {\n          value: 'demographics survey',\n          count: 6,\n          isSelected: false,\n        },\n        {\n          value: 'MDS-UPDRS',\n          count: 5,\n          isSelected: false,\n        },\n        {\n          value: 'dyskinesia',\n          count: 4,\n          isSelected: false,\n        },\n        {\n          value: 'sleep report',\n          count: 4,\n          isSelected: false,\n        },\n        {\n          value: 'bradykinesia',\n          count: 3,\n          isSelected: false,\n        },\n        {\n          value: 'medical history',\n          count: 3,\n          isSelected: false,\n        },\n        {\n          value: 'tremor',\n          count: 3,\n          isSelected: false,\n        },\n        {\n          value: 'freezing of gait',\n          count: 2,\n          isSelected: false,\n        },\n        {\n          value: 'PDQ-8',\n          count: 2,\n          isSelected: false,\n        },\n        {\n          value: 'physical activity',\n          count: 2,\n          isSelected: false,\n        },\n        {\n          value: 'quality of life',\n          count: 2,\n          isSelected: false,\n        },\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'activity report',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'asthma management',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'asthma symptoms',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'asthma triggers',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'AUDIT-C',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'blood pressure',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'cholesterol',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'diabetes',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'diet survey',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'disease risk',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'distance',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'EQ-5D',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'family history',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'fasting glucose',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'feedback survey',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'GAD-7',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'heart age',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'height',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'hypertension',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'inclusion survey',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'mole diameter',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'mole location',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'mood',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'NeuroQOL-Cognition',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'NeuroQOL-LowerExtremity',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'NeuroQOL-UpperExtremity',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'PAR-Q',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'phone usage',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'PHQ-2',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'PHQ-9',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'relapses report',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'research interest',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'resting heart rate',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'Sheehan Disability Scale (SDS)',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'step count',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'symptoms report',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'triggers report',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'vo2max',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'weight',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'ZIP code',\n          count: 1,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'digitalAssessmentCategory',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'gait',\n          count: 6,\n          isSelected: false,\n        },\n        {\n          value: 'cognition',\n          count: 5,\n          isSelected: false,\n        },\n        {\n          value: 'action tremor',\n          count: 3,\n          isSelected: false,\n        },\n        {\n          value: 'motor coordination',\n          count: 3,\n          isSelected: false,\n        },\n        {\n          value: 'phonation',\n          count: 3,\n          isSelected: false,\n        },\n        {\n          value: 'physical activity',\n          count: 3,\n          isSelected: false,\n        },\n        {\n          value: 'cardiovascular',\n          count: 2,\n          isSelected: false,\n        },\n        {\n          value: 'postural tremor',\n          count: 2,\n          isSelected: false,\n        },\n        {\n          value: 'resting tremor',\n          count: 2,\n          isSelected: false,\n        },\n        {\n          value: 'sleep',\n          count: 2,\n          isSelected: false,\n        },\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'cardiorespiratory fitness',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'dermatologic phenotype',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'mental health',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'mobility',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'mood',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'participant engagement',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'quality of life',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'respiratory',\n          count: 1,\n          isSelected: false,\n        },\n        {\n          value: 'skin color',\n          count: 1,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultRange',\n      columnName: 'numberParticipants',\n      facetType: 'range',\n      columnMin: '29',\n      columnMax: '26902',\n    },\n  ],\n}\n\nexport const mockQueryPerCardResult: QueryResultBundle = {\n  concreteType: 'org.sagebionetworks.repo.model.table.QueryResultBundle',\n  columnModels: [\n    { id: '81721', name: 'id', columnType: 'ENTITYID' },\n    {\n      id: '81722',\n      name: 'name',\n      columnType: 'STRING',\n      maximumSize: 256,\n    },\n    {\n      id: '190401',\n      name: 'study',\n      columnType: 'STRING_LIST',\n      maximumSize: 300,\n      maximumListLength: 20,\n      facetType: 'enumeration',\n    },\n    {\n      id: '171338',\n      name: 'dataType',\n      columnType: 'STRING_LIST',\n      maximumSize: 43,\n      maximumListLength: 10,\n      facetType: 'enumeration',\n    },\n    {\n      id: '171339',\n      name: 'assay',\n      columnType: 'STRING_LIST',\n      maximumSize: 40,\n      maximumListLength: 10,\n      facetType: 'enumeration',\n    },\n    {\n      id: '168363',\n      name: 'organ',\n      columnType: 'STRING',\n      maximumSize: 15,\n      facetType: 'enumeration',\n    },\n    {\n      id: '124190',\n      name: 'tissue',\n      columnType: 'STRING_LIST',\n      maximumSize: 100,\n      maximumListLength: 10,\n      facetType: 'enumeration',\n    },\n    {\n      id: '171340',\n      name: 'species',\n      columnType: 'STRING_LIST',\n      maximumSize: 23,\n      maximumListLength: 10,\n      facetType: 'enumeration',\n    },\n    {\n      id: '124191',\n      name: 'sex',\n      columnType: 'STRING_LIST',\n      maximumSize: 12,\n      maximumListLength: 2,\n      facetType: 'enumeration',\n    },\n    {\n      id: '121553',\n      name: 'consortium',\n      columnType: 'STRING',\n      maximumSize: 40,\n      facetType: 'enumeration',\n    },\n    {\n      id: '124185',\n      name: 'grant',\n      columnType: 'STRING_LIST',\n      maximumSize: 76,\n      maximumListLength: 10,\n    },\n    {\n      id: '151953',\n      name: 'modelSystemName',\n      columnType: 'STRING_LIST',\n      maximumSize: 100,\n      maximumListLength: 20,\n      facetType: 'enumeration',\n    },\n    {\n      id: '152365',\n      name: 'treatmentType',\n      columnType: 'STRING',\n      maximumSize: 50,\n    },\n    {\n      id: '81746',\n      name: 'specimenID',\n      columnType: 'STRING',\n      maximumSize: 66,\n    },\n    {\n      id: '85077',\n      name: 'individualID',\n      columnType: 'STRING',\n      maximumSize: 40,\n    },\n    {\n      id: '83061',\n      name: 'individualIdSource',\n      columnType: 'STRING',\n      maximumSize: 50,\n      facetType: 'enumeration',\n    },\n    {\n      id: '81747',\n      name: 'specimenIdSource',\n      columnType: 'STRING',\n      maximumSize: 19,\n    },\n    {\n      id: '81770',\n      name: 'resourceType',\n      columnType: 'STRING',\n      maximumSize: 16,\n      facetType: 'enumeration',\n    },\n    {\n      id: '124204',\n      name: 'dataSubtype',\n      columnType: 'STRING',\n      maximumSize: 50,\n      facetType: 'enumeration',\n    },\n    {\n      id: '167131',\n      name: 'metadataType',\n      columnType: 'STRING',\n      maximumSize: 22,\n      facetType: 'enumeration',\n    },\n    {\n      id: '117270',\n      name: 'assayTarget',\n      columnType: 'STRING',\n      maximumSize: 8,\n    },\n    {\n      id: '178414',\n      name: 'analysisType',\n      columnType: 'STRING',\n      maximumSize: 55,\n      facetType: 'enumeration',\n    },\n    {\n      id: '124195',\n      name: 'cellType',\n      columnType: 'STRING_LIST',\n      maximumSize: 75,\n      maximumListLength: 5,\n      facetType: 'enumeration',\n    },\n    {\n      id: '82254',\n      name: 'nucleicAcidSource',\n      columnType: 'STRING',\n      maximumSize: 14,\n      facetType: 'enumeration',\n    },\n    {\n      id: '114434',\n      name: 'fileFormat',\n      columnType: 'STRING',\n      maximumSize: 23,\n      facetType: 'enumeration',\n    },\n    {\n      id: '86204',\n      name: 'group',\n      columnType: 'STRING',\n      maximumSize: 13,\n    },\n    {\n      id: '122223',\n      name: 'isModelSystem',\n      columnType: 'BOOLEAN',\n      facetType: 'enumeration',\n    },\n    {\n      id: '86209',\n      name: 'isConsortiumAnalysis',\n      columnType: 'BOOLEAN',\n    },\n    {\n      id: '116145',\n      name: 'isMultiSpecimen',\n      columnType: 'BOOLEAN',\n      facetType: 'enumeration',\n    },\n    { id: '81771', name: 'createdOn', columnType: 'DATE' },\n    { id: '81761', name: 'createdBy', columnType: 'USERID' },\n    { id: '81734', name: 'parentId', columnType: 'ENTITYID' },\n    { id: '81729', name: 'currentVersion', columnType: 'INTEGER' },\n    { id: '81731', name: 'benefactorId', columnType: 'ENTITYID' },\n    { id: '81763', name: 'projectId', columnType: 'ENTITYID' },\n    { id: '81764', name: 'modifiedOn', columnType: 'DATE' },\n    { id: '81765', name: 'modifiedBy', columnType: 'USERID' },\n    {\n      id: '81733',\n      name: 'dataFileHandleId',\n      columnType: 'FILEHANDLEID',\n    },\n    {\n      id: '152356',\n      name: 'metaboliteType',\n      columnType: 'STRING_LIST',\n      maximumSize: 40,\n      maximumListLength: 10,\n      facetType: 'enumeration',\n    },\n    {\n      id: '159027',\n      name: 'chromosome',\n      columnType: 'STRING',\n      maximumSize: 15,\n      facetType: 'enumeration',\n    },\n    {\n      id: '171510',\n      name: 'modelSystemType',\n      columnType: 'STRING',\n      maximumSize: 50,\n      facetType: 'enumeration',\n    },\n    {\n      id: '180380',\n      name: 'libraryPrep',\n      columnType: 'STRING',\n      maximumSize: 50,\n      facetType: 'enumeration',\n    },\n    {\n      id: '112368',\n      name: 'dataFileSizeBytes',\n      columnType: 'INTEGER',\n    },\n  ],\n  facets: [\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'study',\n      facetType: 'enumeration',\n      facetValues: [\n        { value: 'ROSMAP', count: 33340, isSelected: false },\n        {\n          value: 'WGS_Harmonization',\n          count: 29432,\n          isSelected: false,\n        },\n        { value: 'AD_CrossSpecies', count: 20630, isSelected: false },\n        {\n          value: 'rnaSeqReprocessing',\n          count: 12344,\n          isSelected: true,\n        },\n        { value: 'LBP', count: 7841, isSelected: false },\n        { value: 'MSBB', count: 6881, isSelected: false },\n        { value: 'TWAS', count: 6842, isSelected: false },\n        { value: 'SUNYStrokeModel', count: 5954, isSelected: false },\n        {\n          value: 'VirusResilience_Mayo.MSBB.ROSMAP',\n          count: 5656,\n          isSelected: false,\n        },\n        { value: 'SEA-AD', count: 2368, isSelected: false },\n        { value: 'SMIB-AD', count: 2160, isSelected: false },\n        {\n          value: 'MSBB_ArrayTissuePanel',\n          count: 2120,\n          isSelected: false,\n        },\n        { value: 'RR_APOE4', count: 2061, isSelected: false },\n        { value: 'UCSF_MAC', count: 1974, isSelected: false },\n        { value: 'StJude_BannerSun', count: 1831, isSelected: false },\n        {\n          value: 'ROSMAP_CognitiveResilience',\n          count: 1565,\n          isSelected: false,\n        },\n        { value: 'HBTRC', count: 1561, isSelected: false },\n        { value: 'MayoRNAseq', count: 1214, isSelected: false },\n        {\n          value: 'Jax.IU.Pitt_MicrobiomePilot',\n          count: 1155,\n          isSelected: false,\n        },\n        {\n          value: 'Jax.IU.Pitt_APOE4.Trem2.R47H',\n          count: 921,\n          isSelected: false,\n        },\n        { value: 'UCI_5XFAD', count: 893, isSelected: false },\n        { value: 'SuperAgerEpiMap', count: 865, isSelected: false },\n        { value: 'MCSA', count: 848, isSelected: false },\n        { value: 'Banner', count: 749, isSelected: false },\n        { value: 'BCM-DMAS', count: 739, isSelected: false },\n        {\n          value: 'Jax.IU.Pitt_hTau_Trem2',\n          count: 603,\n          isSelected: false,\n        },\n        { value: 'snRNAseqPFC_BA10', count: 591, isSelected: false },\n        { value: 'APOE-TR', count: 581, isSelected: false },\n        { value: 'FreshMicro', count: 581, isSelected: false },\n        {\n          value: 'EmoryDrosophilaTau',\n          count: 515,\n          isSelected: false,\n        },\n        {\n          value: 'ROSMAP_CellTypeSpecificHA',\n          count: 513,\n          isSelected: false,\n        },\n        { value: 'AD-BXD', count: 481, isSelected: false },\n        { value: 'AD_CrossSpecies ', count: 470, isSelected: false },\n        { value: 'omicsADDS', count: 455, isSelected: false },\n        { value: 'MOA-PAD', count: 449, isSelected: false },\n        { value: 'UPP', count: 440, isSelected: false },\n        {\n          value: 'Jax.IU.Pitt_APP.PS1',\n          count: 390,\n          isSelected: false,\n        },\n        {\n          value: 'ROSMAP_MammillaryBody',\n          count: 388,\n          isSelected: false,\n        },\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 333,\n          isSelected: false,\n        },\n        { value: 'UCI_3xTg-AD', count: 325, isSelected: false },\n        { value: 'VMC', count: 307, isSelected: false },\n        { value: 'ADAMTS7', count: 294, isSelected: false },\n        { value: 'TAUAPPms', count: 258, isSelected: false },\n        {\n          value: 'Jax.IU.Pitt_StrainValidation',\n          count: 254,\n          isSelected: false,\n        },\n        {\n          value: 'UCI_Trem2-R47H_NSS',\n          count: 250,\n          isSelected: false,\n        },\n        { value: 'Emory_Vascular', count: 217, isSelected: false },\n        { value: 'MayoPilotRNAseq', count: 202, isSelected: false },\n        { value: 'HBI_scRNAseq', count: 195, isSelected: false },\n        { value: 'MC-CAA', count: 189, isSelected: false },\n        {\n          value: 'MODEL-AD_JAX_GWAS_Gene_Survey',\n          count: 185,\n          isSelected: false,\n        },\n        { value: 'snRNAseqAD_TREM2', count: 165, isSelected: false },\n        { value: 'Jax.IU.Pitt_5XFAD', count: 162, isSelected: false },\n        { value: 'ROSMAP-IN', count: 140, isSelected: false },\n        {\n          value: 'ROSMAP_nucleus_hashing',\n          count: 127,\n          isSelected: false,\n        },\n        { value: 'Plxnb1_KO', count: 126, isSelected: false },\n        {\n          value: 'VirusResilience_LCL',\n          count: 124,\n          isSelected: false,\n        },\n        {\n          value: 'RNAseq_Harmonization',\n          count: 117,\n          isSelected: false,\n        },\n        { value: 'MayoHippocampus', count: 113, isSelected: false },\n        { value: 'BLSA', count: 111, isSelected: false },\n        { value: 'UCI_PrimaryScreen', count: 107, isSelected: false },\n        {\n          value: 'Jax.IU.Pitt.Proteomics_Metabolomics_Pilot',\n          count: 105,\n          isSelected: false,\n        },\n        {\n          value: 'UCI_Trem2_Cuprizone',\n          count: 105,\n          isSelected: false,\n        },\n        { value: 'miR155', count: 101, isSelected: false },\n        {\n          value: 'scRNAseq_microglia_wild_ADmice',\n          count: 101,\n          isSelected: false,\n        },\n        { value: 'LillyMicroglia', count: 100, isSelected: false },\n        { value: 'MSDM', count: 100, isSelected: false },\n        { value: 'GJA1_deficiency', count: 99, isSelected: false },\n        { value: 'TyrobpKO', count: 96, isSelected: false },\n        { value: 'UCI_hAbeta_KI', count: 96, isSelected: false },\n        { value: 'ACT', count: 72, isSelected: false },\n        { value: 'Aging-PheWAS', count: 68, isSelected: false },\n        { value: 'rnaSeqSampleSwap', count: 67, isSelected: false },\n        { value: 'ADMC_ADNI1', count: 63, isSelected: false },\n        {\n          value: 'Jax.IU.Pitt_Levetiracetam_5XFAD',\n          count: 58,\n          isSelected: false,\n        },\n        { value: 'APOEPSC', count: 57, isSelected: false },\n        { value: 'MCMPS', count: 57, isSelected: false },\n        { value: 'TASTPM', count: 51, isSelected: false },\n        { value: 'UFLOR_ABI3_GNGT2', count: 51, isSelected: false },\n        {\n          value: 'Jax.IU.Pitt_PrimaryScreen',\n          count: 50,\n          isSelected: false,\n        },\n        { value: 'Emory_ADRC', count: 48, isSelected: false },\n        { value: 'ACOM', count: 45, isSelected: false },\n        { value: 'HDAC1-cKOBrain', count: 43, isSelected: false },\n        { value: 'MSSMiPSC', count: 38, isSelected: false },\n        { value: 'DiCAD', count: 37, isSelected: false },\n        { value: 'DiseasePseudotime', count: 36, isSelected: false },\n        { value: 'MSMM', count: 34, isSelected: false },\n        { value: 'SY5Y_Emory', count: 32, isSelected: false },\n        {\n          value: 'U1-70_PrimaryCellCulture',\n          count: 29,\n          isSelected: false,\n        },\n        { value: 'UPennPilot', count: 29, isSelected: false },\n        { value: 'ADMC_ADNI2-GO', count: 28, isSelected: false },\n        { value: 'Abeta_microglia', count: 27, isSelected: false },\n        { value: 'iPSCMicroglia', count: 27, isSelected: false },\n        {\n          value: 'Jax.IU.Pitt_Verubecestat_5XFAD',\n          count: 27,\n          isSelected: false,\n        },\n        { value: 'iPSCAstrocytes', count: 26, isSelected: false },\n        { value: 'TyrobpKO_AppPs1', count: 25, isSelected: false },\n        { value: 'ADMC_UPenn', count: 24, isSelected: false },\n        { value: 'TauD35', count: 22, isSelected: false },\n        { value: 'UFL_Cxcl10', count: 21, isSelected: false },\n        { value: 'mtDNA_AD', count: 19, isSelected: false },\n        { value: 'BroadiPSC', count: 18, isSelected: false },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'dataType',\n      facetType: 'enumeration',\n      facetValues: [\n        { value: 'geneExpression', count: 12337, isSelected: false },\n        { value: 'clinical', count: 5, isSelected: false },\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 2,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'assay',\n      facetType: 'enumeration',\n      facetValues: [\n        { value: 'rnaSeq', count: 12337, isSelected: false },\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 7,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'organ',\n      facetType: 'enumeration',\n      facetValues: [\n        { value: 'brain', count: 12320, isSelected: false },\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 24,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'tissue',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'dorsolateral prefrontal cortex',\n          count: 3856,\n          isSelected: false,\n        },\n        { value: 'temporal cortex', count: 1679, isSelected: false },\n        { value: 'cerebellum', count: 1661, isSelected: false },\n        {\n          value: 'parahippocampal gyrus',\n          count: 1356,\n          isSelected: false,\n        },\n        { value: 'frontal pole', count: 1346, isSelected: false },\n        {\n          value: 'superior temporal gyrus',\n          count: 1341,\n          isSelected: false,\n        },\n        {\n          value: 'inferior frontal gyrus',\n          count: 1171,\n          isSelected: false,\n        },\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 26,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'species',\n      facetType: 'enumeration',\n      facetValues: [{ value: 'Human', count: 12344, isSelected: false }],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'sex',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 12344,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'consortium',\n      facetType: 'enumeration',\n      facetValues: [{ value: 'AMP-AD', count: 12344, isSelected: false }],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'modelSystemName',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 12344,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'individualIdSource',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'Mount Sinai NIH Brain and Tissue Repository',\n          count: 5139,\n          isSelected: false,\n        },\n        {\n          value: \"Rush Alzheimer's Disease Center\",\n          count: 3846,\n          isSelected: false,\n        },\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 3359,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'resourceType',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'experimentalData',\n          count: 10075,\n          isSelected: false,\n        },\n        { value: 'analysis', count: 2245, isSelected: false },\n        { value: 'tool', count: 14, isSelected: false },\n        { value: 'metadata', count: 10, isSelected: false },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'dataSubtype',\n      facetType: 'enumeration',\n      facetValues: [\n        { value: 'processed', count: 6666, isSelected: false },\n        { value: 'raw', count: 5616, isSelected: false },\n        { value: 'normalized', count: 36, isSelected: false },\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 26,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'metadataType',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 12334,\n          isSelected: false,\n        },\n        { value: 'assay', count: 3, isSelected: false },\n        { value: 'biospecimen', count: 3, isSelected: false },\n        { value: 'individual', count: 3, isSelected: false },\n        { value: 'data dictionary', count: 1, isSelected: false },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'analysisType',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 10102,\n          isSelected: false,\n        },\n        { value: 'quality control', count: 2218, isSelected: false },\n        {\n          value: 'covariate specification',\n          count: 12,\n          isSelected: false,\n        },\n        {\n          value: 'differential expression',\n          count: 11,\n          isSelected: false,\n        },\n        { value: 'Enrichment analysis', count: 1, isSelected: false },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'cellType',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 12344,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'nucleicAcidSource',\n      facetType: 'enumeration',\n      facetValues: [\n        { value: 'bulk cell', count: 12317, isSelected: false },\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 27,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'fileFormat',\n      facetType: 'enumeration',\n      facetValues: [\n        { value: 'fastq', count: 3402, isSelected: false },\n        { value: 'tsv', count: 2251, isSelected: false },\n        { value: 'csv', count: 2223, isSelected: false },\n        { value: 'bam', count: 2214, isSelected: false },\n        { value: 'tar', count: 2214, isSelected: false },\n        { value: 'txt', count: 26, isSelected: false },\n        { value: 'bash script', count: 7, isSelected: false },\n        { value: 'gz', count: 2, isSelected: false },\n        { value: 'R script', count: 2, isSelected: false },\n        { value: 'pdf', count: 1, isSelected: false },\n        { value: 'Python script', count: 1, isSelected: false },\n        { value: 'RData', count: 1, isSelected: false },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'isModelSystem',\n      facetType: 'enumeration',\n      facetValues: [{ value: 'false', count: 12344, isSelected: false }],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'isMultiSpecimen',\n      facetType: 'enumeration',\n      facetValues: [\n        { value: 'false', count: 12259, isSelected: false },\n        { value: 'true', count: 64, isSelected: false },\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 21,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'metaboliteType',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 12344,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'chromosome',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 12344,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'modelSystemType',\n      facetType: 'enumeration',\n      facetValues: [\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 12344,\n          isSelected: false,\n        },\n      ],\n    },\n    {\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnResultValues',\n      columnName: 'libraryPrep',\n      facetType: 'enumeration',\n      facetValues: [\n        { value: 'polyAselection', count: 5940, isSelected: false },\n        { value: 'rRNAdepletion', count: 4104, isSelected: false },\n        {\n          value: 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n          count: 2300,\n          isSelected: false,\n        },\n      ],\n    },\n  ],\n}\n"],"names":["FacetPlotLegendTable","props","facetName","labels","colors","isExpanded","linkToFullQuery","unitDescription","useQueryVisualizationContext","jsx","Fragment","numLegendItems","jsxs","Box","Typography","facetValue","index","labelDisplay","truncate","MAX_LEGEND_LENGTH","Link","FACET_PLOTS_CARD_CLASSNAME","FACET_PLOTS_CARD_TITLE_CONTAINER_CLASSNAME","FACET_PLOTS_CARD_PLOT_CONTAINER_CLASSNAME","FacetPlotsCardGridContainer","styled","theme","FacetPlotsCardTitleContainer","FacetPlotsCardPlotContainer","SkeletonParagraph","numRows","rowHeight","className","skeletons","setSkeletons","useState","useEffect","elements","times","React","Skeleton","Plot","createPlotlyComponent","Plotly","layout","LoadingCard","numPlots","Paper","Button","SkeletonTable","FacetPlotsCard","title","description","facetsToPlot","detailsPagePath","accessToken","useSynapseContext","data","isLoadingNewBundle","useQueryContext","getColumnDisplayName","facetPlotDataArray","setFacetPlotDataArray","facetDataArray","setFacetDataArray","selectedFacetValue","setSelectedFacetValue","getColumnType","facetToPlot","_a","columnModel","facetsDataToPlot","getFacets","item","extractPlotDataArray","newPlotData","selectedFacet","facetValues","filteredFacetValues","x","isShowingMultiplePlots","cardTitle","ShowMore","plotData","Divider","SizeMe","size","getPlotStyle","getQueryRequest","sql","selectFacetColumnName","selectFacetColumnValue","parseEntityIdFromSqlStatement","SynapseConstants.BUNDLE_MASK_QUERY_COLUMN_MODELS","SynapseConstants.BUNDLE_MASK_QUERY_FACETS","DEFAULT_PAGE_SIZE","QueryPerFacetPlotsCard","rgbIndex","rest","initQueryRequest","QueryWrapper","QueryVisualizationWrapper","QueryWrapperErrorBanner","CARDS_PER_ROW","SingleQueryFacetPlotsCards","columnAliases","chunk","facets","rowIndex","FeaturedDataPlots","configs","isQueryPerCard","configRow","cssGridTemplateRows","value","config","FeaturedDataTabs","selectedTabIndex","setSelectedTabIndex","selectedTabProps","Icon","NoContentAvailable","mockSingleQueryResult","mockQueryPerCardResult"],"mappings":"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,KAAM,eACN,WAAY,cACZ,YAAa,GACb,kBAAmB,CACrB,EACA,CACE,GAAI,SACJ,KAAM,cACN,WAAY,SACZ,YAAa,CACf,EACA,CACE,GAAI,SACJ,KAAM,WACN,WAAY,cACZ,YAAa,GACb,kBAAmB,EACrB,EACA,CACE,GAAI,SACJ,KAAM,qBACN,WAAY,UACZ,UAAW,OACb,EACA,CACE,GAAI,SACJ,KAAM,eACN,WAAY,cACZ,YAAa,GACb,kBAAmB,CACrB,EACA,CACE,GAAI,SACJ,KAAM,iBACN,WAAY,cACZ,YAAa,EACb,kBAAmB,CACrB,EACA,CACE,GAAI,SACJ,KAAM,QACN,WAAY,SACZ,YAAa,EACf,EACA,CACE,GAAI,SACJ,KAAM,+BACN,WAAY,SACZ,YAAa,EACf,EACA,CACE,GAAI,SACJ,KAAM,mBACN,WAAY,SACZ,YAAa,GACf,EACA,CACE,GAAI,SACJ,KAAM,2BACN,WAAY,SACZ,YAAa,EACf,CACF,EACA,OAAQ,CACN,CACE,aACE,+DACF,WAAY,iBACZ,UAAW,cACX,YAAa,CACX,CACE,MAAO,sBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,WACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,YACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,uBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,mBACP,MAAO,EACP,WAAY,EACd,CACF,CACF,EACA,CACE,aACE,+DACF,WAAY,YACZ,UAAW,cACX,YAAa,CACX,CACE,MAAO,UACP,MAAO,GACP,WAAY,EACd,EACA,CACE,MAAO,sBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,qBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,SACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,aACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,gBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,WACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,yBACP,MAAO,EACP,WAAY,EACd,CACF,CACF,EACA,CACE,aACE,+DACF,WAAY,eACZ,UAAW,cACX,YAAa,CACX,CACE,MAAO,4CACP,MAAO,GACP,WAAY,EACd,EACA,CACE,MAAO,WACP,MAAO,EACP,WAAY,EACd,CACF,CACF,EACA,CACE,aACE,+DACF,WAAY,aACZ,UAAW,cACX,YAAa,CACX,CACE,MAAO,WACP,MAAO,GACP,WAAY,EACd,EACA,CACE,MAAO,WACP,MAAO,EACP,WAAY,EACd,CACF,CACF,EACA,CACE,aACE,+DACF,WAAY,aACZ,UAAW,cACX,YAAa,CACX,CACE,MAAO,gBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,YACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,cACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,eACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,aACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,SACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,YACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,4CACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,MACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,WACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,cACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,qBACP,MAAO,EACP,WAAY,EACd,CACF,CACF,EACA,CACE,aACE,+DACF,WAAY,uBACZ,UAAW,cACX,YAAa,CACX,CACE,MAAO,2BACP,MAAO,GACP,WAAY,EACd,EACA,CACE,MAAO,SACP,MAAO,GACP,WAAY,EACd,EACA,CACE,MAAO,UACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,sBACP,MAAO,EACP,WAAY,EACd,CACF,CACF,EACA,CACE,aACE,+DACF,WAAY,iBACZ,UAAW,cACX,YAAa,CACX,CACE,MAAO,MACP,MAAO,GACP,WAAY,EACd,EACA,CACE,MAAO,UACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,YACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,YACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,SACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,UACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,UACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,UACP,MAAO,EACP,WAAY,EACd,CACF,CACF,EACA,CACE,aACE,+DACF,WAAY,iBACZ,UAAW,cACX,YAAa,CACX,CACE,MAAO,OACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,SACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,QACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,eACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,4CACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,OACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,OACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,SACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,UACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,QACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,QACP,MAAO,EACP,WAAY,EACd,CACF,CACF,EACA,CACE,aACE,+DACF,WAAY,kBACZ,UAAW,cACX,YAAa,CACX,CACE,MAAO,oBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,sBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,YACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,aACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,eACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,eACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,kBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,SACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,mBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,QACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,oBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,kBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,4CACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,kBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,oBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,kBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,kBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,UACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,iBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,cACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,WACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,cACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,eACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,WACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,QACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,iBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,kBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,kBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,QACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,YACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,SACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,eACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,mBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,gBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,gBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,OACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,qBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,0BACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,0BACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,QACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,cACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,QACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,QACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,kBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,oBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,qBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,iCACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,aACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,kBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,kBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,SACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,SACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,WACP,MAAO,EACP,WAAY,EACd,CACF,CACF,EACA,CACE,aACE,+DACF,WAAY,4BACZ,UAAW,cACX,YAAa,CACX,CACE,MAAO,OACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,YACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,gBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,qBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,YACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,oBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,iBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,kBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,iBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,QACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,4CACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,4BACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,yBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,gBACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,WACP,MAAO,EACP,WAAY,EACd,EACA,CACE,MAAO,OACP,MAAO,EACP,WAAY,EACd,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d,CACF,CACF,EACA,CACE,aACE,+DACF,WAAY,QACZ,UAAW,cACX,YAAa,CACX,CAAE,MAAO,QAAS,MAAO,MAAO,WAAY,EAAM,EAClD,CACE,MAAO,4CACP,MAAO,GACP,WAAY,EACd,CACF,CACF,EACA,CACE,aACE,+DACF,WAAY,SACZ,UAAW,cACX,YAAa,CACX,CACE,MAAO,iCACP,MAAO,KACP,WAAY,EACd,EACA,CAAE,MAAO,kBAAmB,MAAO,KAAM,WAAY,EAAM,EAC3D,CAAE,MAAO,aAAc,MAAO,KAAM,WAAY,EAAM,EACtD,CACE,MAAO,wBACP,MAAO,KACP,WAAY,EACd,EACA,CAAE,MAAO,eAAgB,MAAO,KAAM,WAAY,EAAM,EACxD,CACE,MAAO,0BACP,MAAO,KACP,WAAY,EACd,EACA,CACE,MAAO,yBACP,MAAO,KACP,WAAY,EACd,EACA,CACE,MAAO,4CACP,MAAO,GACP,WAAY,EACd,CACF,CACF,EACA,CACE,aACE,+DACF,WAAY,UACZ,UAAW,cACX,YAAa,CAAC,CAAE,MAAO,QAAS,MAAO,MAAO,WAAY,GAAO,CACnE,EACA,CACE,aACE,+DACF,WAAY,MACZ,UAAW,cACX,YAAa,CACX,CACE,MAAO,4CACP,MAAO,MACP,WAAY,EACd,CACF,CACF,EACA,CACE,aACE,+DACF,WAAY,aACZ,UAAW,cACX,YAAa,CAAC,CAAE,MAAO,SAAU,MAAO,MAAO,WAAY,GAAO,CACpE,EACA,CACE,aACE,+DACF,WAAY,kBACZ,UAAW,cACX,YAAa,CACX,CACE,MAAO,4CACP,MAAO,MACP,WAAY,EACd,CACF,CACF,EACA,CACE,aACE,+DACF,WAAY,qBACZ,UAAW,cACX,YAAa,CACX,CACE,MAAO,8CACP,MAAO,KACP,WAAY,EACd,EACA,CACE,MAAO,kCACP,MAAO,KACP,WAAY,EACd,EACA,CACE,MAAO,4CACP,MAAO,KACP,WAAY,EACd,CACF,CACF,EACA,CACE,aACE,+DACF,WAAY,eACZ,UAAW,cACX,YAAa,CACX,CACE,MAAO,mBACP,MAAO,MACP,WAAY,EACd,EACA,CAAE,MAAO,WA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"}