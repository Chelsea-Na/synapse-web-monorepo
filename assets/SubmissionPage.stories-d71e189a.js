import{l as m}from"./index-22bbe349.js";import{D as s,A as I,c as _}from"./SynapseClient-6827eecb.js";import{g as E,m as S,a as e}from"./wikiHandlers-098eff41.js";import{M as i}from"./getEndpoint-ac94413e.js";import{g as R}from"./tableQueryHandlers-52f3ae5f.js";import{m as O}from"./mockRejectionReasonsTableQueryResultBundle-59be1fd8.js";import{S as g}from"./SubmissionPage-3da9c885.js";import{g as C}from"./userProfileHandlers-c5438489.js";import"./_commonjsHelpers-042e6b4d.js";import"./util-3d624bd6.js";import"./SynapseConstants-1ba53034.js";import"./OrientationBanner-ecffb496.js";import"./jsx-runtime-095bf462.js";import"./index-8db94870.js";import"./FullWidthAlert-a85e5287.js";import"./AlertTitle-af39c120.js";import"./styled-9c91c4fe.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-4abd396b.js";import"./createSvgIcon-fd8a55dc.js";import"./Paper-88da9df3.js";import"./IconButton-152addcf.js";import"./ButtonBase-7c3b1b89.js";import"./emotion-react.browser.esm-8f02f344.js";import"./assertThisInitialized-081f9914.js";import"./inheritsLoose-c82a83d4.js";import"./TransitionGroupContext-f2b81dde.js";import"./useForkRef-f2aa3d66.js";import"./useIsFocusVisible-bbf13f29.js";import"./Typography-d16533eb.js";import"./extendSxProp-e5d44a75.js";import"./Stack-c9edc483.js";import"./Box-49321e59.js";import"./useTheme-68d5aa8d.js";import"./Grow-426921c3.js";import"./isHostComponent-fa76b8d9.js";import"./index-8ce4a492.js";import"./utils-6b5ba2e3.js";import"./ClickAwayListener-36b79525.js";import"./Tooltip-6a83a77a.js";import"./Button-c45f00b4.js";import"./Link-fc5d7a73.js";import"./_getTag-861d442f.js";import"./isArray-5e3f9107.js";import"./StringUtils-2ea3ab4d.js";import"./dayjs.min-59ef0ea6.js";import"./index-58d3fd43.js";import"./tiny-invariant-dd7d57d2.js";import"./CheckCircleTwoTone-784a445a.js";import"./inputBaseClasses-f05f2ac2.js";import"./Fade-a19bf181.js";import"./mock_user_profile-34bbc6c0.js";import"./mockProject-c47343b8.js";import"./times-1c9e275d.js";import"./_baseTimes-8715be3e.js";import"./identity-46f208ab.js";import"./isSymbol-7c514724.js";import"./mockWiki-d5e8345d.js";import"./mock_file_handle-7198c775.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./cloneDeep-49866e4d.js";import"./_baseClone-d7f63900.js";import"./_Uint8Array-ab958ff7.js";import"./DateFormatter-82149740.js";import"./useDataAccessSubmission-3ecbe13d.js";import"./useMutation-6f23e5d8.js";import"./useInfiniteQuery-39b6aa59.js";import"./useAccessRequirements-b84bff16.js";import"./sortBy-ea7c82a6.js";import"./hasIn-eb42bef1.js";import"./_getMatchData-e7922191.js";import"./_cacheHas-4fa98ab9.js";import"./_setToArray-3d6ec6fd.js";import"./_baseFor-d254fa1e.js";import"./_baseRest-db360697.js";import"./_overRest-e67bd922.js";import"./_isIterateeCall-576d0dfd.js";import"./SynapseTableCell-176c7efe.js";import"./IconSvg-fd1d65c9.js";import"./ErrorOutlined-dd0fb706.js";import"./GetAppTwoTone-325427e5.js";import"./InfoOutlined-3b5cb253.js";import"./SynapseTableConstants-5f56c39f.js";import"./UserBadge-f912b2f1.js";import"./Popover-2892de5e.js";import"./Modal-c148ae5e.js";import"./Backdrop-c3498637.js";import"./getScrollbarSize-ac846fe6.js";import"./ownerWindow-2c76219e.js";import"./createChainedFunction-0bab83cf.js";import"./SkeletonTable-5263c31a.js";import"./Skeleton-2bd04c38.js";import"./ToastMessage-785e6476.js";import"./hasClass-ec9efd32.js";import"./Avatar-281ced81.js";import"./EntityLink-0e96a935.js";import"./useEntity-90b7859b.js";import"./pick-246c5ef1.js";import"./_baseSlice-cf92e063.js";import"./isPlainObject-1121d385.js";import"./useGetEntityHeaders-277956f1.js";import"./EntityIcon-9c80fd71.js";import"./ErrorChip-f27514cf.js";import"./index-95cfb7c2.js";import"./RegularExpressions-bc0adf55.js";import"./SqlFunctions-1d6750a8.js";import"./UserSearchBoxV2-2f1c2e6d.js";import"./Select-ce3716e1.esm-2948b13e.js";import"./isNativeReflectConstruct-e378569d.js";import"./use-deep-compare-effect.esm-7a830988.js";import"./uniq-4844de1a.js";import"./without-eb1011f3.js";import"./isArrayLikeObject-bab2971f.js";import"./UserOrTeamBadge-4f34106f.js";import"./index-6060d043.js";import"./Icon-5fa14e0b.js";import"./WideButton-9871401c.js";import"./LoadingScreen-9185dcf9.js";import"./LinearProgress-f638b645.js";import"./useTeamMembers-132fde59.js";import"./ObservationCard-377ed69a.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./uniq-fe955338.js";import"./mapValues-dee13770.js";import"./isPlainObject-1dec192d.js";import"./now-beb31482.js";import"./ThemesPlot-19d2a3f0.js";import"./ElementWithTooltip-b7e3c010.js";import"./Dropdown-0aa781b0.js";import"./ThemeProvider-c7f6a893.js";import"./createWithBsPrefix-d02901e3.js";import"./factory-275e83af.js";import"./merge-a2dde02e.js";import"./isNil-f32149e1.js";import"./useGetQueryResultBundle-7dfada2d.js";import"./NoSearchResults-460db635.js";import"./NoData-59ea70fa.js";import"./queryUtils-149942ad.js";import"./LastLoginInfo-5dae8835.js";import"./jsx-runtime_commonjs-proxy-57ba7161.js";import"./isMuiElement-08f54e3c.js";import"./Dialog-2dba707a.js";import"./DialogTitle-857583de.js";import"./TextField-356a53ab.js";import"./InputLabel-b63da0ce.js";import"./Select-6dcf8eff.js";import"./index-953d39fd.js";import"./MenuList-06d3cd4c.js";import"./tslib.es6-9c2726d7.js";import"./lodash-e374147d.js";import"./StandaloneLoginForm-84e7c18c.js";import"./LoginFlowBackButton-11bc78a0.js";import"./TextField-7873e61e.js";import"./StyledFormControl-414b0ae5.js";import"./LoginMethodButton-ef7a3411.js";import"./Grid-3201877c.js";import"./RadioGroup-b7f85712.js";import"./Form-93e8509c.js";import"./Col-80cc1e4a.js";import"./FileUpload-8ee23ee3.js";import"./Divider-c7474078.js";import"./dividerClasses-94cb8e7e.js";import"./AuthenticatedRequirement-7766de9f.js";import"./RequirementItem-724a29d5.js";import"./ConditionalWrapper-51b8d1ed.js";import"./CheckTwoTone-8be00e66.js";import"./CertificationRequirement-c6a04d75.js";import"./ValidationRequirement-96d9baa4.js";import"./TwoFactorAuthEnabledRequirement-718bf102.js";import"./TwoFactorEnrollmentForm-f6ad0a30.js";import"./LeftRightPanel-908871dc.js";import"./ActionRequiredCard-caa1e7b8.js";import"./RequestDownloadCard-ea0419f6.js";import"./Tabs-afe0c6f9.js";import"./QueryCount-3ae71b16.js";import"./SkeletonButton-53ae0bfd.js";import"./EnumFacetFilterUI-47b19219.js";import"./RangeSlider-6aeb6b22.js";import"./react-sizeme-5bfc490a.js";import"./ColorGradient-3d3e1969.js";import"./colorPalette-c43701fe.js";import"./SelectionCriteriaPill-61a36a39.js";import"./useDownloadList-31ad18da.js";import"./UpsetPlot-073f9bea.js";import"./LargeButton-f7c4166b.js";import"./SynapseVideo-f26dae02.js";import"./IconList-7c9c5707.js";import"./UserCardList-9ba106d5.js";import"./WarningDialog-ebea5aa2.js";import"./RejectDataAccessRequestModal-b10e15ea.js";import"./immutable.es-400ccb6d.js";import"./FormControlLabel-60e65959.js";import"./mockFileEntity-de08cdeb.js";const Xo={title:"Governance/SubmissionPage",component:g,parameters:{stack:"mock"}},p={name:"SubmissionPage",parameters:{msw:{handlers:[...C(i),...E(i),m.rest.get(`${i}${s(":id")}`,async(o,t,r)=>{const d=S.find(u=>o.params.id===u.id);return t(r.status(200),r.json(d))}),m.rest.get(`${i}${I(":id")}`,async(o,t,r)=>t(r.status(200),r.json(e))),m.rest.get(`${i}${_(":id")}`,async(o,t,r)=>t(r.status(200),r.json({wikiPageId:123,ownerObjectId:e.id,ownerObjectType:"ACCESS_REQUIREMENT"}))),m.rest.get(`${i}/repo/v1/accessRequirement/:id/acl`,async(o,t,r)=>t(r.status(200),r.json({id:o.id,creationDate:"2022-05-20T14:32:31.665Z",etag:"f4fbd4f2-751d-40dd-9421-1d2693231217",resourceAccess:[{principalId:3350396,accessType:["REVIEW_SUBMISSIONS"]}]}))),...R(O),m.rest.put(`${i}${s(":id")}`,async(o,t,r)=>t(r.status(201),r.json(await o.json())))]}},args:{submissionId:1}};var n,a,c;p.parameters={...p.parameters,docs:{...(n=p.parameters)==null?void 0:n.docs,source:{originalSource:`{
  name: 'SubmissionPage',
  parameters: {
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), ...getWikiHandlers(MOCK_REPO_ORIGIN),
      // Return submission based on ID
      rest.get(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        const submission = mockSubmissions.find(submission => req.params.id === submission.id);
        return res(ctx.status(200), ctx.json(submission));
      }),
      // Return a mocked access requirement
      rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json(mockManagedACTAccessRequirement));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_WIKI_PAGE_KEY(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          wikiPageId: 123,
          ownerObjectId: mockManagedACTAccessRequirement.id,
          ownerObjectType: 'ACCESS_REQUIREMENT'
        }));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}/repo/v1/accessRequirement/:id/acl\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          id: req.id,
          creationDate: '2022-05-20T14:32:31.665Z',
          etag: 'f4fbd4f2-751d-40dd-9421-1d2693231217',
          resourceAccess: [{
            principalId: 3350396,
            accessType: ['REVIEW_SUBMISSIONS']
          }]
        }));
      }), ...getHandlersForTableQuery(mockRejectionReasonsTableQueryResultBundle), rest.put(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(201), ctx.json(await req.json()));
      })]
    }
  },
  args: {
    submissionId: 1
  }
}`,...(c=(a=p.parameters)==null?void 0:a.docs)==null?void 0:c.source}}};const ri=["Demo"];export{p as Demo,ri as __namedExportsOrder,Xo as default};
//# sourceMappingURL=SubmissionPage.stories-d71e189a.js.map
