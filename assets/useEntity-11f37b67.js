import{R as Q,r as p}from"./index-8db94870.js";import{aF as T,at as C,bu as w,bv as R,au as F,G as O,bw as q,u as d,z as m,n as v,bx as S}from"./SynapseClient-1c857948.js";import{u as k}from"./useMutation-0fd30245.js";import{_ as K}from"./inheritsLoose-c82a83d4.js";import{u as I}from"./useInfiniteQuery-87094eea.js";import"./getEndpoint-ac94413e.js";import"./OrientationBanner-9afa28c1.js";import"./jsx-runtime-095bf462.js";import{i as U}from"./isEqual-8bc63716.js";import{p as x,o as G}from"./pick-39707cbf.js";var P=function(t){K(r,t);function r(s,n){var e;return e=t.call(this)||this,e.client=s,e.queries=[],e.result=[],e.observers=[],e.observersMap={},n&&e.setQueries(n),e}var u=r.prototype;return u.onSubscribe=function(){var n=this;this.listeners.length===1&&this.observers.forEach(function(e){e.subscribe(function(a){n.onUpdate(e,a)})})},u.onUnsubscribe=function(){this.listeners.length||this.destroy()},u.destroy=function(){this.listeners=[],this.observers.forEach(function(n){n.destroy()})},u.setQueries=function(n,e){this.queries=n,this.updateObservers(e)},u.getCurrentResult=function(){return this.result},u.getOptimisticResult=function(n){return this.findMatchingObservers(n).map(function(e){return e.observer.getOptimisticResult(e.defaultedQueryOptions)})},u.findMatchingObservers=function(n){var e=this,a=this.observers,c=n.map(function(l){return e.client.defaultQueryObserverOptions(l)}),f=c.flatMap(function(l){var b=a.find(function(g){return g.options.queryHash===l.queryHash});return b!=null?[{defaultedQueryOptions:l,observer:b}]:[]}),i=f.map(function(l){return l.defaultedQueryOptions.queryHash}),o=c.filter(function(l){return!i.includes(l.queryHash)}),h=a.filter(function(l){return!f.some(function(b){return b.observer===l})}),y=o.map(function(l,b){if(l.keepPreviousData){var g=h[b];if(g!==void 0)return{defaultedQueryOptions:l,observer:g}}return{defaultedQueryOptions:l,observer:e.getObserver(l)}}),E=function(b,g){return c.indexOf(b.defaultedQueryOptions)-c.indexOf(g.defaultedQueryOptions)};return f.concat(y).sort(E)},u.getObserver=function(n){var e=this.client.defaultQueryObserverOptions(n),a=this.observersMap[e.queryHash];return a??new T(this.client,e)},u.updateObservers=function(n){var e=this;C.batch(function(){var a=e.observers,c=e.findMatchingObservers(e.queries);c.forEach(function(y){return y.observer.setOptions(y.defaultedQueryOptions,n)});var f=c.map(function(y){return y.observer}),i=Object.fromEntries(f.map(function(y){return[y.options.queryHash,y]})),o=f.map(function(y){return y.getCurrentResult()}),h=f.some(function(y,E){return y!==a[E]});a.length===f.length&&!h||(e.observers=f,e.observersMap=i,e.result=o,e.hasListeners()&&(w(a,f).forEach(function(y){y.destroy()}),w(f,a).forEach(function(y){y.subscribe(function(E){e.onUpdate(y,E)})}),e.notify()))})},u.onUpdate=function(n,e){var a=this.observers.indexOf(n);a!==-1&&(this.result=R(this.result,a,e),this.notify())},u.notify=function(){var n=this;C.batch(function(){n.listeners.forEach(function(e){e(n.result)})})},r}(F);function L(t){var r=Q.useRef(!1),u=Q.useState(0),s=u[1],n=O(),e=p.useMemo(function(){return t.map(function(i){var o=n.defaultQueryObserverOptions(i);return o.optimisticResults=!0,o})},[t,n]),a=Q.useState(function(){return new P(n,e)}),c=a[0],f=c.getOptimisticResult(e);return Q.useEffect(function(){r.current=!0;var i=c.subscribe(C.batchCalls(function(){r.current&&s(function(o){return o+1})}));return function(){r.current=!1,i()}},[c]),Q.useEffect(function(){c.setQueries(e,{listeners:!1})},[e,c]),f}async function _(t,r,u,s){const n=new Map;for(const i of u)n.set(i.id,i);let e=[];for(const i of s){const o={...i};if(o.id!=null){const h=n.get(o.id);h!=null&&!U(h,o)&&delete o.id}e.push(o)}const a=(await q(t,e)).list,c=[],f=new Set;for(let i=0;i<s.length;i++){const o=s[i].id??null,h=a[i].id??null;f.add(o),f.add(h),o!==h&&c.push({oldColumnId:o,newColumnId:h})}for(const i of u){const o=i.id;f.has(o)||c.push({oldColumnId:o,newColumnId:null})}return{concreteType:"org.sagebionetworks.repo.model.table.TableUpdateTransactionRequest",entityId:r,changes:[{concreteType:"org.sagebionetworks.repo.model.table.TableSchemaChangeRequest",entityId:r,changes:c,orderedColumnIds:a.map(i=>i.id)}]}}function M(t,r,u){return t.invalidateQueries(r.getEntityQueryKey(u))}function Z(t,r,u){const{accessToken:s,keyFactory:n}=d();return m(n.getEntityVersionQueryKey(t,r),()=>v.getEntity(s,t,r==null?void 0:r.toString()),u)}function N(t,r){const{accessToken:u,keyFactory:s}=d(),n=t.map(i=>i.id).join(),e=p.useMemo(()=>t.map(i=>({queryKey:s.getEntityVersionQueryKey(i.id,i.versionNumber),queryFn:()=>v.getEntity(u,i.id,i.versionNumber)})),[n]),a=L(e),c=a.some(i=>i.isLoading),f=a.filter(i=>i.data!==void 0).map(i=>i.data);return p.useMemo(()=>(!c&&(r!=null&&r.onSuccess)&&r.onSuccess(f),{isLoading:c,data:f}),[c,n])}function ee(t){const r=O(),{accessToken:u,keyFactory:s}=d();return k(n=>v.updateEntity(n,u),{...t,onSuccess:async(n,e,a)=>{await M(r,s,n.id),r.setQueryData(s.getEntityQueryKey(n.id),n),t!=null&&t.onSuccess&&await t.onSuccess(n,e,a)}})}function te(t){const r=O(),{accessToken:u,keyFactory:s}=d();return k(n=>v.deleteEntity(u,n),{...t,onSuccess:async(n,e,a)=>{await M(r,s,e),t!=null&&t.onSuccess&&await t.onSuccess(n,e,a)}})}function ne(t,r){const{accessToken:s,keyFactory:n}=d();return I(n.getEntityVersionsQueryKey(t),async e=>await v.getEntityVersions(t,s,e.pageParam,200),{...r,getNextPageParam:(e,a)=>{if(e.results.length>0)return a.length*200}})}function A(t){return x(t,S[t.concreteType])}function J(t){return G(t,S[t.concreteType])}function re(t,r,u){const{accessToken:s,keyFactory:n}=d(),e=m(n.getEntityJsonQueryKey(t,r),()=>v.getEntityJson(t,r,s),u),a=p.useMemo(()=>(e==null?void 0:e.data)==null?void 0:A(e.data),[e.data]),c=p.useMemo(()=>(e==null?void 0:e.data)==null?void 0:J(e.data),[e.data]);return{...e,entityMetadata:a,annotations:c}}function se(t){const r=O(),{accessToken:u,keyFactory:s}=d();return k(n=>{const e=n.id;return v.updateEntityJson(e,n,u)},{...t,onSuccess:async(n,e,a)=>{const c=n.id;await M(r,s,c),r.setQueryData(s.getEntityJsonQueryKey(c,!1),n),t!=null&&t.onSuccess&&await t.onSuccess(n,e,a)}})}function ue(t,r){const{accessToken:u,keyFactory:s}=d();return m(s.getEntityPathQueryKey(t),()=>v.getEntityPath(t,u),r)}function ae(t,r){const{accessToken:u,keyFactory:s}=d();return m(s.getEntityPathQueryKey(t),()=>v.getEntityACL(t,u),r)}function ie(t,r){const{accessToken:u,keyFactory:s}=d();return m(s.getEntityAliasQueryKey(t),()=>v.getEntityAlias(t,u),r)}function ce(t,r,u){const{accessToken:s,keyFactory:n}=d();return m(n.getEntityEvaluationsQueryKey(t),()=>v.getAllEntityEvaluations(t,r,s),u)}function oe(t,r){const{accessToken:u,keyFactory:s}=d();return m(s.getEntityAliasQueryKey(t),()=>v.getEntityPermissions(t,u),r)}function fe(t){const r=O(),{accessToken:u,keyFactory:s}=d();return k(n=>v.updateEntityACL(n,u),{...t,onSuccess:async(n,e,a)=>{await M(r,s,n.id),r.setQueryData(s.getEntityACLQueryKey(n.id),n),t!=null&&t.onSuccess&&await t.onSuccess(n,e,a)}})}function ye(t){const r=O(),{accessToken:u,keyFactory:s}=d();return k(async n=>{const e=await _(u,n.entityId,n.originalColumnModels,n.newColumnModels);return v.updateTable(e,u)},{...t,onSuccess:async(n,e,a)=>{await M(r,s,e.entityId),t!=null&&t.onSuccess&&await t.onSuccess(n,e,a)}})}export{ue as a,ee as b,re as c,N as d,ce as e,fe as f,ie as g,ae as h,M as i,oe as j,se as k,ye as l,te as m,ne as n,Z as u};
//# sourceMappingURL=useEntity-11f37b67.js.map
